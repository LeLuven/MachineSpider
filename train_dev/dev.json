[
    {
        "db_id": "concert_singer",
        "match": "How many singers do we have?",
        "query": "SELECT count(*) FROM sänger",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT count(*) FROM sänger",
        "question": "Wie viele Sängerinnen und Sänger haben wir?",
        "question_toks": [
            "Wie",
            "viele",
            "Sängerinnen",
            "und",
            "Sänger",
            "haben",
            "wir",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the total number of singers?",
        "query": "SELECT count(*) FROM sänger",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT count(*) FROM sänger",
        "question": "Wie hoch ist die Gesamtzahl der Sängerinnen und Sänger?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtzahl",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "query": "SELECT name , land , alter FROM sänger ORDER BY alter DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "land",
            ",",
            "alter",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name , land , alter FROM sänger ORDER BY alter DESC",
        "question": "Zeige Name, Land und Alter für alle Sänger/innen, geordnet nach Alter, vom ältesten bis zum jüngsten.",
        "question_toks": [
            "Zeige",
            "Name",
            ",",
            "Land",
            "und",
            "Alter",
            "für",
            "alle",
            "Sänger/innen",
            ",",
            "geordnet",
            "nach",
            "Alter",
            ",",
            "vom",
            "ältesten",
            "bis",
            "zum",
            "jüngsten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names, countries, and ages for every singer in descending order of age?",
        "query": "SELECT name , land , alter FROM sänger ORDER BY alter DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "land",
            ",",
            "alter",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name , land , alter FROM sänger ORDER BY alter DESC",
        "question": "Wie lauten die Namen, die Länder und das Alter aller Sänger/innen in absteigender Reihenfolge des Alters?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            ",",
            "die",
            "Länder",
            "und",
            "das",
            "Alter",
            "aller",
            "Sänger/innen",
            "in",
            "absteigender",
            "Reihenfolge",
            "des",
            "Alters",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the average, minimum, and maximum age of all singers from France?",
        "query": "SELECT avg(alter) , min(alter) , max(alter) FROM sänger WHERE land = 'France'",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            ",",
            "min",
            "(",
            "alter",
            ")",
            ",",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            "WHERE",
            "land",
            "=",
            "'France",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            ",",
            "min",
            "(",
            "alter",
            ")",
            ",",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Wie hoch ist das Durchschnitts-, Mindest- und Höchstalter aller Sängerinnen und Sänger aus \"France\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnitts-",
            ",",
            "Mindest-",
            "und",
            "Höchstalter",
            "aller",
            "Sängerinnen",
            "und",
            "Sänger",
            "aus",
            "``",
            "France",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the average, minimum, and maximum age for all French singers?",
        "query": "SELECT avg(alter) , min(alter) , max(alter) FROM sänger WHERE land = 'France'",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            ",",
            "min",
            "(",
            "alter",
            ")",
            ",",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            "WHERE",
            "land",
            "=",
            "'France",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            ",",
            "min",
            "(",
            "alter",
            ")",
            ",",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Wie hoch ist das Durchschnitts-, Mindest- und Höchstalter aller französischen Sängerinnen und Sänger?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnitts-",
            ",",
            "Mindest-",
            "und",
            "Höchstalter",
            "aller",
            "französischen",
            "Sängerinnen",
            "und",
            "Sänger",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show the name and the release year of the song by the youngest singer.",
        "query": "SELECT songname , jahr_der_veröffentlichung_des_liedes FROM sänger ORDER BY alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "songname",
            ",",
            "jahr_der_veröffentlichung_des_liedes",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "songname",
            ",",
            "jahr_der_veröffentlichung_des_liedes",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "LIMIT",
            "value"
        ],
        "question": "Zeige den Namen und das Erscheinungsjahr des Liedes des jüngsten Sängers.",
        "question_toks": [
            "Zeige",
            "den",
            "Namen",
            "und",
            "das",
            "Erscheinungsjahr",
            "des",
            "Liedes",
            "des",
            "jüngsten",
            "Sängers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names and release years for all the songs of the youngest singer?",
        "query": "SELECT songname , jahr_der_veröffentlichung_des_liedes FROM sänger ORDER BY alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "songname",
            ",",
            "jahr_der_veröffentlichung_des_liedes",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "songname",
            ",",
            "jahr_der_veröffentlichung_des_liedes",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "alter",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Namen und Erscheinungsjahre aller Lieder des jüngsten Sängers?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Erscheinungsjahre",
            "aller",
            "Lieder",
            "des",
            "jüngsten",
            "Sängers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are all distinct countries where singers above age 20 are from?",
        "query": "SELECT DISTINCT land FROM sänger WHERE alter > 20",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "value"
        ],
        "question": "Aus welchen Ländern kommen die Sängerinnen und Sänger, die älter als 20 Jahre sind?",
        "question_toks": [
            "Aus",
            "welchen",
            "Ländern",
            "kommen",
            "die",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "älter",
            "als",
            "20",
            "Jahre",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are  the different countries with singers above age 20?",
        "query": "SELECT DISTINCT land FROM sänger WHERE alter > 20",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "value"
        ],
        "question": "In welchen Ländern gibt es Sängerinnen und Sänger über 20 Jahren?",
        "question_toks": [
            "In",
            "welchen",
            "Ländern",
            "gibt",
            "es",
            "Sängerinnen",
            "und",
            "Sänger",
            "über",
            "20",
            "Jahren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show all countries and the number of singers in each country.",
        "query": "SELECT land , count(*) FROM sänger GROUP BY land",
        "query_toks": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "land"
        ],
        "query_toks_no_value": "SELECT land , count(*) FROM sänger GROUP BY land",
        "question": "Zeige alle Länder und die Anzahl der Sängerinnen und Sänger in jedem Land.",
        "question_toks": [
            "Zeige",
            "alle",
            "Länder",
            "und",
            "die",
            "Anzahl",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "in",
            "jedem",
            "Land",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "How many singers are from each country?",
        "query": "SELECT land , count(*) FROM sänger GROUP BY land",
        "query_toks": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "land"
        ],
        "query_toks_no_value": "SELECT land , count(*) FROM sänger GROUP BY land",
        "question": "Wie viele Sängerinnen und Sänger sind aus jedem Land?",
        "question_toks": [
            "Wie",
            "viele",
            "Sängerinnen",
            "und",
            "Sänger",
            "sind",
            "aus",
            "jedem",
            "Land",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "List all song names by singers above the average age.",
        "query": "SELECT songname FROM sänger WHERE alter > (SELECT avg(alter) FROM sänger)",
        "query_toks": [
            "SELECT",
            "songname",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            ")"
        ],
        "query_toks_no_value": "SELECT songname FROM sänger WHERE alter > (SELECT avg(alter) FROM sänger)",
        "question": "Liste alle Songnamen von Sängern über dem Durchschnittsalter auf.",
        "question_toks": [
            "Liste",
            "alle",
            "Songnamen",
            "von",
            "Sängern",
            "über",
            "dem",
            "Durchschnittsalter",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are all the song names by singers who are older than average?",
        "query": "SELECT songname FROM sänger WHERE alter > (SELECT avg(alter) FROM sänger)",
        "query_toks": [
            "SELECT",
            "songname",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "sänger",
            ")"
        ],
        "query_toks_no_value": "SELECT songname FROM sänger WHERE alter > (SELECT avg(alter) FROM sänger)",
        "question": "Wie heißen all die Lieder von Sängern, die älter sind als der Durchschnitt?",
        "question_toks": [
            "Wie",
            "heißen",
            "all",
            "die",
            "Lieder",
            "von",
            "Sängern",
            ",",
            "die",
            "älter",
            "sind",
            "als",
            "der",
            "Durchschnitt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "query": "SELECT ort , name FROM stadion WHERE kapazität BETWEEN 5000 AND 10000",
        "query_toks": [
            "SELECT",
            "ort",
            ",",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "kapazität",
            "BETWEEN",
            "5000",
            "AND",
            "10000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ort",
            ",",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "kapazität",
            "BETWEEN",
            "value",
            "AND",
            "value"
        ],
        "question": "Zeige Ort und Namen aller Stadien mit einer Kapazität zwischen 5000 und 10000.",
        "question_toks": [
            "Zeige",
            "Ort",
            "und",
            "Namen",
            "aller",
            "Stadien",
            "mit",
            "einer",
            "Kapazität",
            "zwischen",
            "5000",
            "und",
            "10000",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    10000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "query": "SELECT ort , name FROM stadion WHERE kapazität BETWEEN 5000 AND 10000",
        "query_toks": [
            "SELECT",
            "ort",
            ",",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "kapazität",
            "BETWEEN",
            "5000",
            "AND",
            "10000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ort",
            ",",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "kapazität",
            "BETWEEN",
            "value",
            "AND",
            "value"
        ],
        "question": "Wo und wie heißen alle Bahnhöfe mit einer Kapazität zwischen 5000 und 10000?",
        "question_toks": [
            "Wo",
            "und",
            "wie",
            "heißen",
            "alle",
            "Bahnhöfe",
            "mit",
            "einer",
            "Kapazität",
            "zwischen",
            "5000",
            "und",
            "10000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    10000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the maximum capacity and the average of all stadiums ?",
        "query": "select max(kapazität), durchschnitt from stadion",
        "query_toks": [
            "select",
            "max",
            "(",
            "kapazität",
            ")",
            ",",
            "durchschnitt",
            "from",
            "stadion"
        ],
        "query_toks_no_value": "select max(kapazität), durchschnitt from stadion",
        "question": "Was ist die maximale Kapazität und der Durchschnitt aller Stadien?",
        "question_toks": [
            "Was",
            "ist",
            "die",
            "maximale",
            "Kapazität",
            "und",
            "der",
            "Durchschnitt",
            "aller",
            "Stadien",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the average and maximum capacities for all stadiums ?",
        "query": "select avg(kapazität) , max(kapazität) from stadion",
        "query_toks": [
            "select",
            "avg",
            "(",
            "kapazität",
            ")",
            ",",
            "max",
            "(",
            "kapazität",
            ")",
            "from",
            "stadion"
        ],
        "query_toks_no_value": "select avg(kapazität) , max(kapazität) from stadion",
        "question": "Wie hoch ist die durchschnittliche und maximale Kapazität für alle Stadien?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "und",
            "maximale",
            "Kapazität",
            "für",
            "alle",
            "Stadien",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the name and capacity for the stadium with highest average attendance?",
        "query": "SELECT name , kapazität FROM stadion ORDER BY durchschnitt DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "kapazität",
            "FROM",
            "stadion",
            "ORDER",
            "BY",
            "durchschnitt",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "kapazität",
            "FROM",
            "stadion",
            "ORDER",
            "BY",
            "durchschnitt",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name und die Kapazität des Stadions mit der höchsten durchschnittlichen Zuschauerzahl?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Kapazität",
            "des",
            "Stadions",
            "mit",
            "der",
            "höchsten",
            "durchschnittlichen",
            "Zuschauerzahl",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the name and capacity for the stadium with the highest average attendance?",
        "query": "SELECT name , kapazität FROM stadion ORDER BY durchschnitt DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "kapazität",
            "FROM",
            "stadion",
            "ORDER",
            "BY",
            "durchschnitt",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "kapazität",
            "FROM",
            "stadion",
            "ORDER",
            "BY",
            "durchschnitt",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name und die Kapazität des Stadions mit der höchsten durchschnittlichen Zuschauerzahl?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Kapazität",
            "des",
            "Stadions",
            "mit",
            "der",
            "höchsten",
            "durchschnittlichen",
            "Zuschauerzahl",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "How many concerts are there in year 2014 or 2015?",
        "query": "SELECT count(*) FROM konzert WHERE jahr = 2014 OR jahr = 2015",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "WHERE",
            "jahr",
            "=",
            "2014",
            "OR",
            "jahr",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "WHERE",
            "jahr",
            "=",
            "value",
            "OR",
            "jahr",
            "=",
            "value"
        ],
        "question": "Wie viele Konzerte gibt es im Jahr 2014 oder 2015?",
        "question_toks": [
            "Wie",
            "viele",
            "Konzerte",
            "gibt",
            "es",
            "im",
            "Jahr",
            "2014",
            "oder",
            "2015",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "How many concerts occurred in 2014 or 2015?",
        "query": "SELECT count(*) FROM konzert WHERE jahr = 2014 OR jahr = 2015",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "WHERE",
            "jahr",
            "=",
            "2014",
            "OR",
            "jahr",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "WHERE",
            "jahr",
            "=",
            "value",
            "OR",
            "jahr",
            "=",
            "value"
        ],
        "question": "Wie viele Konzerte fanden 2014 oder 2015 statt?",
        "question_toks": [
            "Wie",
            "viele",
            "Konzerte",
            "fanden",
            "2014",
            "oder",
            "2015",
            "statt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show the stadium name and the number of concerts in each stadium.",
        "query": "SELECT T2.name , count(*) FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id GROUP BY T1.stadion_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "GROUP",
            "BY",
            "T1.stadion_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id GROUP BY T1.stadion_id",
        "question": "Zeige den Stadionnamen und die Anzahl der Konzerte in jedem Stadion.",
        "question_toks": [
            "Zeige",
            "den",
            "Stadionnamen",
            "und",
            "die",
            "Anzahl",
            "der",
            "Konzerte",
            "in",
            "jedem",
            "Stadion",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "For each stadium, how many concerts play there?",
        "query": "SELECT T2.name , count(*) FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id GROUP BY T1.stadion_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "GROUP",
            "BY",
            "T1.stadion_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id GROUP BY T1.stadion_id",
        "question": "Wie viele Konzerte finden in jedem Stadion statt?",
        "question_toks": [
            "Wie",
            "viele",
            "Konzerte",
            "finden",
            "in",
            "jedem",
            "Stadion",
            "statt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "query": "SELECT T2.name , T2.kapazität FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr >= 2014 GROUP BY T2.stadion_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.kapazität",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            ">",
            "=",
            "2014",
            "GROUP",
            "BY",
            "T2.stadion_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            ",",
            "T2.kapazität",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            ">",
            "=",
            "value",
            "GROUP",
            "BY",
            "T2.stadion_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Zeige \"1\" Stadionnamen und die Kapazität mit \"1\" meisten Konzerten im Jahr 2014 oder danach.",
        "question_toks": [
            "Zeige",
            "``",
            "1",
            "''",
            "Stadionnamen",
            "und",
            "die",
            "Kapazität",
            "mit",
            "``",
            "1",
            "''",
            "meisten",
            "Konzerten",
            "im",
            "Jahr",
            "2014",
            "oder",
            "danach",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
        "query": "select t2.name , t2.kapazität from konzert as t1 join stadion as t2 on t1.stadion_id = t2.stadion_id where t1.jahr > 2013 group by t2.stadion_id order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t2.kapazität",
            "from",
            "konzert",
            "as",
            "t1",
            "join",
            "stadion",
            "as",
            "t2",
            "on",
            "t1.stadion_id",
            "=",
            "t2.stadion_id",
            "where",
            "t1.jahr",
            ">",
            "2013",
            "group",
            "by",
            "t2.stadion_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.name",
            ",",
            "t2.kapazität",
            "from",
            "konzert",
            "as",
            "t1",
            "join",
            "stadion",
            "as",
            "t2",
            "on",
            "t1.stadion_id",
            "=",
            "t2.stadion_id",
            "where",
            "t1.jahr",
            ">",
            "value",
            "group",
            "by",
            "t2.stadion_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Wie lautet der Name und die Kapazität des Stadions mit \"1\" meisten Konzerten nach 2013?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Kapazität",
            "des",
            "Stadions",
            "mit",
            "``",
            "1",
            "''",
            "meisten",
            "Konzerten",
            "nach",
            "2013",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Which year has most number of concerts?",
        "query": "SELECT jahr FROM konzert GROUP BY jahr ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "jahr",
            "FROM",
            "konzert",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "jahr",
            "FROM",
            "konzert",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches Jahr hat die meisten Konzerte?",
        "question_toks": [
            "Welches",
            "Jahr",
            "hat",
            "die",
            "meisten",
            "Konzerte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the year that had the most concerts?",
        "query": "SELECT jahr FROM konzert GROUP BY jahr ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "jahr",
            "FROM",
            "konzert",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "jahr",
            "FROM",
            "konzert",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches ist das Jahr mit den meisten Konzerten?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Jahr",
            "mit",
            "den",
            "meisten",
            "Konzerten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show the stadium names without any concert.",
        "query": "SELECT name FROM stadion WHERE stadion_id NOT IN (SELECT stadion_id FROM konzert)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "stadion_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "stadion_id",
            "FROM",
            "konzert",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM stadion WHERE stadion_id NOT IN (SELECT stadion_id FROM konzert)",
        "question": "Zeige die Stadionnamen ohne Konzert.",
        "question_toks": [
            "Zeige",
            "die",
            "Stadionnamen",
            "ohne",
            "Konzert",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            18,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names of the stadiums without any concerts?",
        "query": "SELECT name FROM stadion WHERE stadion_id NOT IN (SELECT stadion_id FROM konzert)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "WHERE",
            "stadion_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "stadion_id",
            "FROM",
            "konzert",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM stadion WHERE stadion_id NOT IN (SELECT stadion_id FROM konzert)",
        "question": "Wie heißen die Stadien, in denen es keine Konzerte gibt?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Stadien",
            ",",
            "in",
            "denen",
            "es",
            "keine",
            "Konzerte",
            "gibt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            18,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "query": "SELECT land FROM sänger WHERE alter > 40 INTERSECT SELECT land FROM sänger WHERE alter < 30",
        "query_toks": [
            "SELECT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "40",
            "INTERSECT",
            "SELECT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            "<",
            "30"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            ">",
            "value",
            "INTERSECT",
            "SELECT",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "alter",
            "<",
            "value"
        ],
        "question": "Zeige die Länder, aus denen ein Sänger über 40 und ein Sänger unter 30 Jahren kommt.",
        "question_toks": [
            "Zeige",
            "die",
            "Länder",
            ",",
            "aus",
            "denen",
            "ein",
            "Sänger",
            "über",
            "40",
            "und",
            "ein",
            "Sänger",
            "unter",
            "30",
            "Jahren",
            "kommt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        30.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "query": "SELECT name FROM stadion EXCEPT SELECT T2.name FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2014",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value"
        ],
        "question": "Zeige die Namen aller Stadien an, mit Ausnahme der Stadien, in denen im Jahr 2014 ein Konzert stattfindet.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "aller",
            "Stadien",
            "an",
            ",",
            "mit",
            "Ausnahme",
            "der",
            "Stadien",
            ",",
            "in",
            "denen",
            "im",
            "Jahr",
            "2014",
            "ein",
            "Konzert",
            "stattfindet",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2014.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names of all stadiums that did not have a concert in 2014?",
        "query": "SELECT name FROM stadion EXCEPT SELECT T2.name FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2014",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "stadion",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen aller Stadien, in denen 2014 kein Konzert stattfand?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "aller",
            "Stadien",
            ",",
            "in",
            "denen",
            "2014",
            "kein",
            "Konzert",
            "stattfand",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2014.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Show the name and theme for all concerts and the number of singers in each concert.",
        "query": "SELECT T2.konzertname , T2.thema , count(*) FROM sänger_im_konzert AS T1 JOIN konzert AS T2 ON T1.konzert_id = T2.konzert_id GROUP BY T2.konzert_id",
        "query_toks": [
            "SELECT",
            "T2.konzertname",
            ",",
            "T2.thema",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "konzert",
            "AS",
            "T2",
            "ON",
            "T1.konzert_id",
            "=",
            "T2.konzert_id",
            "GROUP",
            "BY",
            "T2.konzert_id"
        ],
        "query_toks_no_value": "SELECT T2.konzertname , T2.thema , count(*) FROM sänger_im_konzert AS T1 JOIN konzert AS T2 ON T1.konzert_id = T2.konzert_id GROUP BY T2.konzert_id",
        "question": "Zeige den Namen und das Thema für alle Konzerte und die Anzahl der Sängerinnen und Sänger in jedem Konzert.",
        "question_toks": [
            "Zeige",
            "den",
            "Namen",
            "und",
            "das",
            "Thema",
            "für",
            "alle",
            "Konzerte",
            "und",
            "die",
            "Anzahl",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "in",
            "jedem",
            "Konzert",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names , themes , and number of singers for every concert ?",
        "query": "select t2.konzertname , t2.thema , count(*) from sänger_im_konzert as t1 join konzert as t2 on t1.konzert_id = t2.konzert_id group by t2.konzert_id",
        "query_toks": [
            "select",
            "t2.konzertname",
            ",",
            "t2.thema",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "sänger_im_konzert",
            "as",
            "t1",
            "join",
            "konzert",
            "as",
            "t2",
            "on",
            "t1.konzert_id",
            "=",
            "t2.konzert_id",
            "group",
            "by",
            "t2.konzert_id"
        ],
        "query_toks_no_value": "select t2.konzertname , t2.thema , count(*) from sänger_im_konzert as t1 join konzert as t2 on t1.konzert_id = t2.konzert_id group by t2.konzert_id",
        "question": "Wie lauten die Namen, Themen und die Anzahl der Sängerinnen und Sänger für jedes Konzert?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            ",",
            "Themen",
            "und",
            "die",
            "Anzahl",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "für",
            "jedes",
            "Konzert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "List singer names and number of concerts for each singer.",
        "query": "SELECT T2.name , count(*) FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T2.sänger_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T2.sänger_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T2.sänger_id",
        "question": "Gib die Namen der Sänger und die Anzahl der Konzerte für jeden Sänger an.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "Sänger",
            "und",
            "die",
            "Anzahl",
            "der",
            "Konzerte",
            "für",
            "jeden",
            "Sänger",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names of the singers and number of concerts for each person?",
        "query": "SELECT T2.name , count(*) FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T2.sänger_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T2.sänger_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T2.sänger_id",
        "question": "Wie lauten die Namen der Sängerinnen und Sänger und die Anzahl der Konzerte für jede Person?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "und",
            "die",
            "Anzahl",
            "der",
            "Konzerte",
            "für",
            "jede",
            "Person",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "List all singer names in concerts in year 2014.",
        "query": "SELECT T2.name FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id JOIN konzert AS T3 ON T1.konzert_id = T3.konzert_id WHERE T3.jahr = 2014",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "JOIN",
            "konzert",
            "AS",
            "T3",
            "ON",
            "T1.konzert_id",
            "=",
            "T3.konzert_id",
            "WHERE",
            "T3.jahr",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "JOIN",
            "konzert",
            "AS",
            "T3",
            "ON",
            "T1.konzert_id",
            "=",
            "T3.konzert_id",
            "WHERE",
            "T3.jahr",
            "=",
            "value"
        ],
        "question": "Liste alle Sängerinnen und Sänger auf, die im Jahr 2014 auf Konzerten aufgetreten sind.",
        "question_toks": [
            "Liste",
            "alle",
            "Sängerinnen",
            "und",
            "Sänger",
            "auf",
            ",",
            "die",
            "im",
            "Jahr",
            "2014",
            "auf",
            "Konzerten",
            "aufgetreten",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names of the singers who performed in a concert in 2014?",
        "query": "SELECT T2.name FROM sänger_im_konzert AS T1 JOIN sänger AS T2 ON T1.sänger_id = T2.sänger_id JOIN konzert AS T3 ON T1.konzert_id = T3.konzert_id WHERE T3.jahr = 2014",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "JOIN",
            "konzert",
            "AS",
            "T3",
            "ON",
            "T1.konzert_id",
            "=",
            "T3.konzert_id",
            "WHERE",
            "T3.jahr",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "sänger_im_konzert",
            "AS",
            "T1",
            "JOIN",
            "sänger",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "JOIN",
            "konzert",
            "AS",
            "T3",
            "ON",
            "T1.konzert_id",
            "=",
            "T3.konzert_id",
            "WHERE",
            "T3.jahr",
            "=",
            "value"
        ],
        "question": "Wie heißen die Sängerinnen und Sänger, die 2014 bei einem Konzert aufgetreten sind?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "2014",
            "bei",
            "einem",
            "Konzert",
            "aufgetreten",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "query": "SELECT name , land FROM sänger WHERE songname LIKE '%Hey%'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "songname",
            "LIKE",
            "'",
            "%",
            "Hey",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "songname",
            "LIKE",
            "value"
        ],
        "question": "Wie lautet der Name und die Nation des Sängers, der ein Lied mit \"Hey\" im Namen hat?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Nation",
            "des",
            "Sängers",
            ",",
            "der",
            "ein",
            "Lied",
            "mit",
            "``",
            "Hey",
            "''",
            "im",
            "Namen",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"%Hey%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "query": "SELECT name , land FROM sänger WHERE songname LIKE '%Hey%'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "songname",
            "LIKE",
            "'",
            "%",
            "Hey",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "land",
            "FROM",
            "sänger",
            "WHERE",
            "songname",
            "LIKE",
            "value"
        ],
        "question": "Wie lautet der Name und das Herkunftsland jedes Sängers, der einen Song mit dem Wort \"Hey\" im Titel hat?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "das",
            "Herkunftsland",
            "jedes",
            "Sängers",
            ",",
            "der",
            "einen",
            "Song",
            "mit",
            "dem",
            "Wort",
            "``",
            "Hey",
            "''",
            "im",
            "Titel",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"%Hey%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "query": "SELECT T2.name , T2.ort FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2014 INTERSECT SELECT T2.name , T2.ort FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2015",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value"
        ],
        "question": "Finde die Namen und Orte der Stadien, in denen 2014 und 2015 Konzerte stattfanden.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "und",
            "Orte",
            "der",
            "Stadien",
            ",",
            "in",
            "denen",
            "2014",
            "und",
            "2015",
            "Konzerte",
            "stattfanden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2015.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "query": "SELECT T2.name , T2.ort FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2014 INTERSECT SELECT T2.name , T2.ort FROM konzert AS T1 JOIN stadion AS T2 ON T1.stadion_id = T2.stadion_id WHERE T1.jahr = 2015",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.ort",
            "FROM",
            "konzert",
            "AS",
            "T1",
            "JOIN",
            "stadion",
            "AS",
            "T2",
            "ON",
            "T1.stadion_id",
            "=",
            "T2.stadion_id",
            "WHERE",
            "T1.jahr",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen und Standorte der Stadien, in denen 2014 und 2015 Konzerte stattfanden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Standorte",
            "der",
            "Stadien",
            ",",
            "in",
            "denen",
            "2014",
            "und",
            "2015",
            "Konzerte",
            "stattfanden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2015.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "Find the number of concerts happened in the stadium with the highest capacity .",
        "query": "select count(*) from konzert where stadion_id = (select stadion_id from stadion order by kapazität desc limit 1)",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "konzert",
            "where",
            "stadion_id",
            "=",
            "(",
            "select",
            "stadion_id",
            "from",
            "stadion",
            "order",
            "by",
            "kapazität",
            "desc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "konzert",
            "where",
            "stadion_id",
            "=",
            "(",
            "select",
            "stadion_id",
            "from",
            "stadion",
            "order",
            "by",
            "kapazität",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "question": "Finde die Anzahl der Konzerte, die in dem Stadion mit der höchsten Kapazität stattgefunden haben.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Konzerte",
            ",",
            "die",
            "in",
            "dem",
            "Stadion",
            "mit",
            "der",
            "höchsten",
            "Kapazität",
            "stattgefunden",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "match": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
        "query": "select count(*) from konzert where stadion_id = (select stadion_id from stadion order by kapazität desc limit 1)",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "konzert",
            "where",
            "stadion_id",
            "=",
            "(",
            "select",
            "stadion_id",
            "from",
            "stadion",
            "order",
            "by",
            "kapazität",
            "desc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "konzert",
            "where",
            "stadion_id",
            "=",
            "(",
            "select",
            "stadion_id",
            "from",
            "stadion",
            "order",
            "by",
            "kapazität",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "question": "Wie viele Konzerte fanden in dem Stadion mit dem größten Fassungsvermögen statt?",
        "question_toks": [
            "Wie",
            "viele",
            "Konzerte",
            "fanden",
            "in",
            "dem",
            "Stadion",
            "mit",
            "dem",
            "größten",
            "Fassungsvermögen",
            "statt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the number of pets whose weight is heavier than 10.",
        "query": "SELECT count(*) FROM haustiere WHERE gewicht > 10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "haustiere",
            "WHERE",
            "gewicht",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "haustiere",
            "WHERE",
            "gewicht",
            ">",
            "value"
        ],
        "question": "Finde die Anzahl der Haustiere, deren Gewicht schwerer als 10 ist.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Haustiere",
            ",",
            "deren",
            "Gewicht",
            "schwerer",
            "als",
            "10",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "How many pets have a greater weight than 10?",
        "query": "SELECT count(*) FROM haustiere WHERE gewicht > 10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "haustiere",
            "WHERE",
            "gewicht",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "haustiere",
            "WHERE",
            "gewicht",
            ">",
            "value"
        ],
        "question": "Wie viele Haustiere haben ein höheres Gewicht als 10?",
        "question_toks": [
            "Wie",
            "viele",
            "Haustiere",
            "haben",
            "ein",
            "höheres",
            "Gewicht",
            "als",
            "10",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the weight of the youngest dog.",
        "query": "SELECT gewicht FROM haustiere ORDER BY haustier_alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "value"
        ],
        "question": "Finde das Gewicht des jüngsten Hundes heraus.",
        "question_toks": [
            "Finde",
            "das",
            "Gewicht",
            "des",
            "jüngsten",
            "Hundes",
            "heraus",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "How much does the youngest dog weigh?",
        "query": "SELECT gewicht FROM haustiere ORDER BY haustier_alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "value"
        ],
        "question": "Wie viel wiegt der jüngste Hund?",
        "question_toks": [
            "Wie",
            "viel",
            "wiegt",
            "der",
            "jüngste",
            "Hund",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "query": "SELECT max(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "gewicht",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT max(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Finde das maximale Gewicht für jede Art von Haustier. Gib das Höchstgewicht und die Tierart an.",
        "question_toks": [
            "Finde",
            "das",
            "maximale",
            "Gewicht",
            "für",
            "jede",
            "Art",
            "von",
            "Haustier",
            ".",
            "Gib",
            "das",
            "Höchstgewicht",
            "und",
            "die",
            "Tierart",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "List the maximum weight and type for each type of pet.",
        "query": "SELECT max(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "gewicht",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT max(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Gib das maximale Gewicht und den Typ für jede Art von Haustier an.",
        "question_toks": [
            "Gib",
            "das",
            "maximale",
            "Gewicht",
            "und",
            "den",
            "Typ",
            "für",
            "jede",
            "Art",
            "von",
            "Haustier",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find number of pets owned by students who are older than 20.",
        "query": "SELECT count(*) FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id WHERE T1.alter > 20",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.alter",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.alter",
            ">",
            "value"
        ],
        "question": "Finde heraus, wie viele Haustiere die Schüler/innen besitzen, die älter als 20 sind.",
        "question_toks": [
            "Finde",
            "heraus",
            ",",
            "wie",
            "viele",
            "Haustiere",
            "die",
            "Schüler/innen",
            "besitzen",
            ",",
            "die",
            "älter",
            "als",
            "20",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "How many pets are owned by students that have an age greater than 20?",
        "query": "SELECT count(*) FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id WHERE T1.alter > 20",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.alter",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.alter",
            ">",
            "value"
        ],
        "question": "Wie viele Haustiere besitzen Schüler, die älter als 20 Jahre sind?",
        "question_toks": [
            "Wie",
            "viele",
            "Haustiere",
            "besitzen",
            "Schüler",
            ",",
            "die",
            "älter",
            "als",
            "20",
            "Jahre",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the number of dog pets that are raised by female students (with sex F).",
        "query": "SELECT count(*) FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T2.haustier_id = T3.haustier_id WHERE T1.geschlecht = 'F' AND T3.haustier_typ = 'dog'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T2.haustier_id",
            "=",
            "T3.haustier_id",
            "WHERE",
            "T1.geschlecht",
            "=",
            "'",
            "F",
            "'",
            "AND",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T2.haustier_id",
            "=",
            "T3.haustier_id",
            "WHERE",
            "T1.geschlecht",
            "=",
            "value",
            "AND",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Finde die Anzahl der \"dog\", die von weiblichen Schülern gehalten werden (mit Geschlecht \"F\").",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "``",
            "dog",
            "''",
            ",",
            "die",
            "von",
            "weiblichen",
            "Schülern",
            "gehalten",
            "werden",
            "(",
            "mit",
            "Geschlecht",
            "``",
            "F",
            "''",
            ")",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "How many dog pets are raised by female students?",
        "query": "SELECT count(*) FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T2.haustier_id = T3.haustier_id WHERE T1.geschlecht = 'F' AND T3.haustier_typ = 'dog'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T2.haustier_id",
            "=",
            "T3.haustier_id",
            "WHERE",
            "T1.geschlecht",
            "=",
            "'",
            "F",
            "'",
            "AND",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T2.haustier_id",
            "=",
            "T3.haustier_id",
            "WHERE",
            "T1.geschlecht",
            "=",
            "value",
            "AND",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Wie viele \"dog\" werden von Studentinnen aufgezogen?",
        "question_toks": [
            "Wie",
            "viele",
            "``",
            "dog",
            "''",
            "werden",
            "von",
            "Studentinnen",
            "aufgezogen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the number of distinct type of pets.",
        "query": "SELECT count(DISTINCT haustier_typ) FROM haustiere",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "haustier_typ",
            ")",
            "FROM",
            "haustiere"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT haustier_typ) FROM haustiere",
        "question": "Finde die Anzahl der verschiedenen Arten von Haustieren.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Arten",
            "von",
            "Haustieren",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "How many different types of pet are there?",
        "query": "SELECT count(DISTINCT haustier_typ) FROM haustiere",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "haustier_typ",
            ")",
            "FROM",
            "haustiere"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT haustier_typ) FROM haustiere",
        "question": "Wie viele verschiedene Arten von Haustieren gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Arten",
            "von",
            "Haustieren",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the first name of students who have cat or dog pet.",
        "query": "SELECT DISTINCT T1.vorname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat' OR T3.haustier_typ = 'dog'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            "OR",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            "OR",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Finde die Vornamen der Schüler, die eine \"cat\" oder einen \"dog\" als Haustier haben.",
        "question_toks": [
            "Finde",
            "die",
            "Vornamen",
            "der",
            "Schüler",
            ",",
            "die",
            "eine",
            "``",
            "cat",
            "''",
            "oder",
            "einen",
            "``",
            "dog",
            "''",
            "als",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What are the first names of every student who has a cat or dog as a pet?",
        "query": "SELECT DISTINCT T1.vorname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat' OR T3.haustier_typ = 'dog'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            "OR",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            "OR",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vornamen aller Schüler, die eine \"cat\" oder einen \"dog\" als Haustier haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "aller",
            "Schüler",
            ",",
            "die",
            "eine",
            "``",
            "cat",
            "''",
            "oder",
            "einen",
            "``",
            "dog",
            "''",
            "als",
            "Haustier",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the first name of students who have both cat and dog pets .",
        "query": "select t1.vorname from schüler as t1 join hat_haustier as t2 on t1.student_id = t2.student_id join haustiere as t3 on t3.haustier_id = t2.haustier_id where t3.haustier_typ = 'cat' intersect select t1.vorname from schüler as t1 join hat_haustier as t2 on t1.student_id = t2.student_id join haustiere as t3 on t3.haustier_id = t2.haustier_id where t3.haustier_typ = 'dog'",
        "query_toks": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "hat_haustier",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "join",
            "haustiere",
            "as",
            "t3",
            "on",
            "t3.haustier_id",
            "=",
            "t2.haustier_id",
            "where",
            "t3.haustier_typ",
            "=",
            "'cat",
            "'",
            "intersect",
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "hat_haustier",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "join",
            "haustiere",
            "as",
            "t3",
            "on",
            "t3.haustier_id",
            "=",
            "t2.haustier_id",
            "where",
            "t3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "hat_haustier",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "join",
            "haustiere",
            "as",
            "t3",
            "on",
            "t3.haustier_id",
            "=",
            "t2.haustier_id",
            "where",
            "t3.haustier_typ",
            "=",
            "value",
            "intersect",
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "hat_haustier",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "join",
            "haustiere",
            "as",
            "t3",
            "on",
            "t3.haustier_id",
            "=",
            "t2.haustier_id",
            "where",
            "t3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Finde die Vornamen der Schüler, die sowohl \"cat\" als auch \"dog\" als Haustiere haben.",
        "question_toks": [
            "Finde",
            "die",
            "Vornamen",
            "der",
            "Schüler",
            ",",
            "die",
            "sowohl",
            "``",
            "cat",
            "''",
            "als",
            "auch",
            "``",
            "dog",
            "''",
            "als",
            "Haustiere",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"dog\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What are the students' first names who have both cats and dogs as pets?",
        "query": "SELECT T1.vorname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat' INTERSECT SELECT T1.vorname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'dog'",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.vorname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vornamen der Schüler, die sowohl \"cat\" als auch \"dog\" als Haustiere haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "der",
            "Schüler",
            ",",
            "die",
            "sowohl",
            "``",
            "cat",
            "''",
            "als",
            "auch",
            "``",
            "dog",
            "''",
            "als",
            "Haustiere",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"dog\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the major and age of students who do not have a cat pet.",
        "query": "SELECT hauptfach , alter FROM schüler WHERE student_id NOT IN (SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat')",
        "query_toks": [
            "SELECT",
            "hauptfach",
            ",",
            "alter",
            "FROM",
            "schüler",
            "WHERE",
            "student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "hauptfach",
            ",",
            "alter",
            "FROM",
            "schüler",
            "WHERE",
            "student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            ")"
        ],
        "question": "Finde die Hauptfächer und das Alter der Schüler/innen, die keine \"cat\" als Haustier haben.",
        "question_toks": [
            "Finde",
            "die",
            "Hauptfächer",
            "und",
            "das",
            "Alter",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "keine",
            "``",
            "cat",
            "''",
            "als",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        13,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        14,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What major is every student who does not own a cat as a pet, and also how old are they?",
        "query": "SELECT hauptfach , alter FROM schüler WHERE student_id NOT IN (SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat')",
        "query_toks": [
            "SELECT",
            "hauptfach",
            ",",
            "alter",
            "FROM",
            "schüler",
            "WHERE",
            "student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "hauptfach",
            ",",
            "alter",
            "FROM",
            "schüler",
            "WHERE",
            "student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            ")"
        ],
        "question": "Welchen Studiengang hat jeder Student, der keine \"cat\" als Haustier besitzt, und wie alt sind sie?",
        "question_toks": [
            "Welchen",
            "Studiengang",
            "hat",
            "jeder",
            "Student",
            ",",
            "der",
            "keine",
            "``",
            "cat",
            "''",
            "als",
            "Haustier",
            "besitzt",
            ",",
            "und",
            "wie",
            "alt",
            "sind",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        13,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        14,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the id of students who do not have a cat pet.",
        "query": "SELECT student_id FROM schüler EXCEPT SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat'",
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "schüler",
            "EXCEPT",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "student_id",
            "FROM",
            "schüler",
            "EXCEPT",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Finde die ID der Schüler/innen, die keine \"cat\" als Haustier haben.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "keine",
            "``",
            "cat",
            "''",
            "als",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"cat\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "pets_1",
        "match": "What are the ids of the students who do not own cats as pets?",
        "query": "SELECT student_id FROM schüler EXCEPT SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat'",
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "schüler",
            "EXCEPT",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "student_id",
            "FROM",
            "schüler",
            "EXCEPT",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Schüler, die keine \"cat\" als Haustiere besitzen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Schüler",
            ",",
            "die",
            "keine",
            "``",
            "cat",
            "''",
            "als",
            "Haustiere",
            "besitzen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"cat\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "query": "SELECT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'dog' AND T1.student_id NOT IN (SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat')",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'",
            "AND",
            "T1.student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            "AND",
            "T1.student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            ")"
        ],
        "question": "Finde den Vornamen und das Alter der Schüler/innen, die einen \"dog\", aber keine \"cat\" als Haustier haben.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "und",
            "das",
            "Alter",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "einen",
            "``",
            "dog",
            "''",
            ",",
            "aber",
            "keine",
            "``",
            "cat",
            "''",
            "als",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        13,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        14,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the first name of every student who has a dog but does not have a cat?",
        "query": "SELECT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'dog' AND T1.student_id NOT IN (SELECT T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_typ = 'cat')",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'dog",
            "'",
            "AND",
            "T1.student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            "AND",
            "T1.student_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_typ",
            "=",
            "value",
            ")"
        ],
        "question": "Wie lautet der Vorname eines jeden Schülers, der einen \"dog\", aber keine \"cat\" hat?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorname",
            "eines",
            "jeden",
            "Schülers",
            ",",
            "der",
            "einen",
            "``",
            "dog",
            "''",
            ",",
            "aber",
            "keine",
            "``",
            "cat",
            "''",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        13,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        14,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the type and weight of the youngest pet.",
        "query": "SELECT haustier_typ , gewicht FROM haustiere ORDER BY haustier_alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "haustier_typ",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "haustier_typ",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Art und das Gewicht deines jüngsten Haustiers heraus.",
        "question_toks": [
            "Finde",
            "die",
            "Art",
            "und",
            "das",
            "Gewicht",
            "deines",
            "jüngsten",
            "Haustiers",
            "heraus",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What type of pet is the youngest animal, and how much does it weigh?",
        "query": "SELECT haustier_typ , gewicht FROM haustiere ORDER BY haustier_alter LIMIT 1",
        "query_toks": [
            "SELECT",
            "haustier_typ",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "haustier_typ",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "ORDER",
            "BY",
            "haustier_alter",
            "LIMIT",
            "value"
        ],
        "question": "Welche Art von Haustier ist das jüngste Tier und wie viel wiegt es?",
        "question_toks": [
            "Welche",
            "Art",
            "von",
            "Haustier",
            "ist",
            "das",
            "jüngste",
            "Tier",
            "und",
            "wie",
            "viel",
            "wiegt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the id and weight of all pets whose age is older than 1.",
        "query": "SELECT haustier_id , gewicht FROM haustiere WHERE haustier_alter > 1",
        "query_toks": [
            "SELECT",
            "haustier_id",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "WHERE",
            "haustier_alter",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "haustier_id",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "WHERE",
            "haustier_alter",
            ">",
            "value"
        ],
        "question": "Finde die ID und das Gewicht aller Haustiere, die älter als 1 Jahr sind.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            "und",
            "das",
            "Gewicht",
            "aller",
            "Haustiere",
            ",",
            "die",
            "älter",
            "als",
            "1",
            "Jahr",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the id and weight of every pet who is older than 1?",
        "query": "SELECT haustier_id , gewicht FROM haustiere WHERE haustier_alter > 1",
        "query_toks": [
            "SELECT",
            "haustier_id",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "WHERE",
            "haustier_alter",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "haustier_id",
            ",",
            "gewicht",
            "FROM",
            "haustiere",
            "WHERE",
            "haustier_alter",
            ">",
            "value"
        ],
        "question": "Wie lautet die Kennung und das Gewicht eines jeden Haustiers, das älter als 1 Jahr ist?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Kennung",
            "und",
            "das",
            "Gewicht",
            "eines",
            "jeden",
            "Haustiers",
            ",",
            "das",
            "älter",
            "als",
            "1",
            "Jahr",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the average and maximum age for each type of pet.",
        "query": "SELECT avg(haustier_alter) , max(haustier_alter) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "haustier_alter",
            ")",
            ",",
            "max",
            "(",
            "haustier_alter",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT avg(haustier_alter) , max(haustier_alter) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Finde das Durchschnitts- und Höchstalter für jede Art von Haustier.",
        "question_toks": [
            "Finde",
            "das",
            "Durchschnitts-",
            "und",
            "Höchstalter",
            "für",
            "jede",
            "Art",
            "von",
            "Haustier",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the average and maximum age for each pet type?",
        "query": "SELECT avg(haustier_alter) , max(haustier_alter) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "haustier_alter",
            ")",
            ",",
            "max",
            "(",
            "haustier_alter",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT avg(haustier_alter) , max(haustier_alter) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Wie hoch ist das Durchschnitts- und Höchstalter für jede Tierart?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnitts-",
            "und",
            "Höchstalter",
            "für",
            "jede",
            "Tierart",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the average weight for each pet type.",
        "query": "SELECT avg(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT avg(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Finde das Durchschnittsgewicht für jede Tierart.",
        "question_toks": [
            "Finde",
            "das",
            "Durchschnittsgewicht",
            "für",
            "jede",
            "Tierart",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the average weight for each type of pet?",
        "query": "SELECT avg(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            ",",
            "haustier_typ",
            "FROM",
            "haustiere",
            "GROUP",
            "BY",
            "haustier_typ"
        ],
        "query_toks_no_value": "SELECT avg(gewicht) , haustier_typ FROM haustiere GROUP BY haustier_typ",
        "question": "Wie hoch ist das Durchschnittsgewicht der einzelnen Haustierarten?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnittsgewicht",
            "der",
            "einzelnen",
            "Haustierarten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the first name and age of students who have a pet.",
        "query": "SELECT DISTINCT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id",
        "question": "Finde den Vornamen und das Alter der Schüler, die ein Haustier haben.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "und",
            "das",
            "Alter",
            "der",
            "Schüler",
            ",",
            "die",
            "ein",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What are the different first names and ages of the students who do have pets?",
        "query": "SELECT DISTINCT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.alter",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T1.alter FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id",
        "question": "Wie lauten die verschiedenen Vornamen und das Alter der Schüler, die Haustiere haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "verschiedenen",
            "Vornamen",
            "und",
            "das",
            "Alter",
            "der",
            "Schüler",
            ",",
            "die",
            "Haustiere",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the id of the pet owned by student whose last name is ‘Smith’.",
        "query": "SELECT T2.haustier_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id WHERE T1.nachname = 'Smith'",
        "query_toks": [
            "SELECT",
            "T2.haustier_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.nachname",
            "=",
            "'Smith",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.haustier_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.nachname",
            "=",
            "value"
        ],
        "question": "Finde die Kennung des Haustiers des Schülers mit dem Nachnamen \"\"Smith\"\".",
        "question_toks": [
            "Finde",
            "die",
            "Kennung",
            "des",
            "Haustiers",
            "des",
            "Schülers",
            "mit",
            "dem",
            "Nachnamen",
            "``",
            "''",
            "Smith",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Smith\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "query": "SELECT T2.haustier_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id WHERE T1.nachname = 'Smith'",
        "query_toks": [
            "SELECT",
            "T2.haustier_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.nachname",
            "=",
            "'Smith",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.haustier_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "WHERE",
            "T1.nachname",
            "=",
            "value"
        ],
        "question": "Wie lautet die Kennung des Haustiers des Schülers mit dem Nachnamen \"\"Smith\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Kennung",
            "des",
            "Haustiers",
            "des",
            "Schülers",
            "mit",
            "dem",
            "Nachnamen",
            "``",
            "''",
            "Smith",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Smith\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the number of pets for each student who has any pet and student id.",
        "query": "SELECT count(*) , T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id"
        ],
        "query_toks_no_value": "SELECT count(*) , T1.student_id FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
        "question": "Finde die Anzahl der Haustiere für jeden Schüler, der ein Haustier und eine Schüler-ID hat.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Haustiere",
            "für",
            "jeden",
            "Schüler",
            ",",
            "der",
            "ein",
            "Haustier",
            "und",
            "eine",
            "Schüler-ID",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
        "query": "select count(*) , t1.student_id from schüler as t1 join hat_haustier as t2 on t1.student_id = t2.student_id group by t1.student_id",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.student_id",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "hat_haustier",
            "as",
            "t2",
            "on",
            "t1.student_id",
            "=",
            "t2.student_id",
            "group",
            "by",
            "t1.student_id"
        ],
        "query_toks_no_value": "select count(*) , t1.student_id from schüler as t1 join hat_haustier as t2 on t1.student_id = t2.student_id group by t1.student_id",
        "question": "Bei Schülern, die Haustiere haben, gib an, wie viele Haustiere jeder Schüler hat.",
        "question_toks": [
            "Bei",
            "Schülern",
            ",",
            "die",
            "Haustiere",
            "haben",
            ",",
            "gib",
            "an",
            ",",
            "wie",
            "viele",
            "Haustiere",
            "jeder",
            "Schüler",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the first name and gender of student who have more than one pet.",
        "query": "SELECT T1.vorname , T1.geschlecht FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.geschlecht",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.geschlecht",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde den Vornamen und das Geschlecht der Schüler, die mehr als ein Haustier haben.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "und",
            "das",
            "Geschlecht",
            "der",
            "Schüler",
            ",",
            "die",
            "mehr",
            "als",
            "ein",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the first name and gender of the all the students who have more than one pet?",
        "query": "SELECT T1.vorname , T1.geschlecht FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.geschlecht",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.geschlecht",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie lauten die Vornamen und das Geschlecht aller Schüler, die mehr als ein Haustier haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "und",
            "das",
            "Geschlecht",
            "aller",
            "Schüler",
            ",",
            "die",
            "mehr",
            "als",
            "ein",
            "Haustier",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the last name of the student who has a cat that is age 3.",
        "query": "SELECT T1.nachname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_alter = 3 AND T3.haustier_typ = 'cat'",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_alter",
            "=",
            "3",
            "AND",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_alter",
            "=",
            "value",
            "AND",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Finde den Nachnamen des Schülers, der \"cat\" hat, die 3 Jahre alt ist.",
        "question_toks": [
            "Finde",
            "den",
            "Nachnamen",
            "des",
            "Schülers",
            ",",
            "der",
            "``",
            "cat",
            "''",
            "hat",
            ",",
            "die",
            "3",
            "Jahre",
            "alt",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the last name of the student who has a cat that is 3 years old?",
        "query": "SELECT T1.nachname FROM schüler AS T1 JOIN hat_haustier AS T2 ON T1.student_id = T2.student_id JOIN haustiere AS T3 ON T3.haustier_id = T2.haustier_id WHERE T3.haustier_alter = 3 AND T3.haustier_typ = 'cat'",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_alter",
            "=",
            "3",
            "AND",
            "T3.haustier_typ",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "hat_haustier",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "haustiere",
            "AS",
            "T3",
            "ON",
            "T3.haustier_id",
            "=",
            "T2.haustier_id",
            "WHERE",
            "T3.haustier_alter",
            "=",
            "value",
            "AND",
            "T3.haustier_typ",
            "=",
            "value"
        ],
        "question": "Wie lautet der Nachname des Schülers, der \"cat\" hat, die 3 Jahre alt ist?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Nachname",
            "des",
            "Schülers",
            ",",
            "der",
            "``",
            "cat",
            "''",
            "hat",
            ",",
            "die",
            "3",
            "Jahre",
            "alt",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "Find the average age of students who do not have any pet .",
        "query": "select avg(alter) from schüler where student_id not in (select student_id from hat_haustier)",
        "query_toks": [
            "select",
            "avg",
            "(",
            "alter",
            ")",
            "from",
            "schüler",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "hat_haustier",
            ")"
        ],
        "query_toks_no_value": "select avg(alter) from schüler where student_id not in (select student_id from hat_haustier)",
        "question": "Finde das Durchschnittsalter der Schüler, die kein Haustier haben.",
        "question_toks": [
            "Finde",
            "das",
            "Durchschnittsalter",
            "der",
            "Schüler",
            ",",
            "die",
            "kein",
            "Haustier",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "match": "What is the average age for all students who do not own any pets ?",
        "query": "select avg(alter) from schüler where student_id not in (select student_id from hat_haustier)",
        "query_toks": [
            "select",
            "avg",
            "(",
            "alter",
            ")",
            "from",
            "schüler",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "hat_haustier",
            ")"
        ],
        "query_toks_no_value": "select avg(alter) from schüler where student_id not in (select student_id from hat_haustier)",
        "question": "Wie hoch ist das Durchschnittsalter aller Schüler, die keine Haustiere besitzen?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnittsalter",
            "aller",
            "Schüler",
            ",",
            "die",
            "keine",
            "Haustiere",
            "besitzen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many continents are there?",
        "query": "SELECT count(*) FROM kontinente;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            ";"
        ],
        "query_toks_no_value": "SELECT count(*) FROM kontinente;",
        "question": "Wie viele Kontinente gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Kontinente",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of continents?",
        "query": "SELECT count(*) FROM kontinente;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            ";"
        ],
        "query_toks_no_value": "SELECT count(*) FROM kontinente;",
        "question": "Wie hoch ist die Anzahl der Kontinente?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Anzahl",
            "der",
            "Kontinente",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "query": "SELECT T1.cont_id , T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent GROUP BY T1.cont_id;",
        "query_toks": [
            "SELECT",
            "T1.cont_id",
            ",",
            "T1.kontinent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.cont_id",
            "=",
            "T2.kontinent",
            "GROUP",
            "BY",
            "T1.cont_id",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.cont_id , T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent GROUP BY T1.cont_id;",
        "question": "Wie viele Länder hat jeder Kontinent? Gib die Kontinent-ID, den Namen des Kontinents und die Anzahl der Länder an.",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "hat",
            "jeder",
            "Kontinent",
            "?",
            "Gib",
            "die",
            "Kontinent-ID",
            ",",
            "den",
            "Namen",
            "des",
            "Kontinents",
            "und",
            "die",
            "Anzahl",
            "der",
            "Länder",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "For each continent, list its id, name, and how many countries it has?",
        "query": "SELECT T1.cont_id , T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent GROUP BY T1.cont_id;",
        "query_toks": [
            "SELECT",
            "T1.cont_id",
            ",",
            "T1.kontinent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.cont_id",
            "=",
            "T2.kontinent",
            "GROUP",
            "BY",
            "T1.cont_id",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.cont_id , T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent GROUP BY T1.cont_id;",
        "question": "Nenne für jeden Kontinent seine Kennung, seinen Namen und wie viele Länder er hat?",
        "question_toks": [
            "Nenne",
            "für",
            "jeden",
            "Kontinent",
            "seine",
            "Kennung",
            ",",
            "seinen",
            "Namen",
            "und",
            "wie",
            "viele",
            "Länder",
            "er",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many countries are listed?",
        "query": "SELECT count(*) FROM länder;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "länder",
            ";"
        ],
        "query_toks_no_value": "SELECT count(*) FROM länder;",
        "question": "Wie viele Länder sind aufgelistet?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "sind",
            "aufgelistet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many countries exist?",
        "query": "SELECT count(*) FROM länder;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "länder",
            ";"
        ],
        "query_toks_no_value": "SELECT count(*) FROM länder;",
        "question": "Wie viele Länder gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many models does each car maker produce? List maker full name, id and the number.",
        "query": "SELECT T1.vollständiger_name , T1.id , count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id;",
        "query_toks": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.vollständiger_name , T1.id , count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id;",
        "question": "Wie viele Modelle produziert jeder Autohersteller? Nenne den vollen Namen des Herstellers, die Kennung und die Nummer.",
        "question_toks": [
            "Wie",
            "viele",
            "Modelle",
            "produziert",
            "jeder",
            "Autohersteller",
            "?",
            "Nenne",
            "den",
            "vollen",
            "Namen",
            "des",
            "Herstellers",
            ",",
            "die",
            "Kennung",
            "und",
            "die",
            "Nummer",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the full name of each car maker, along with its id and how many models it produces?",
        "query": "SELECT T1.vollständiger_name , T1.id , count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id;",
        "query_toks": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.vollständiger_name , T1.id , count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id;",
        "question": "Wie lautet der vollständige Name jedes Autoherstellers, seine Kennung und wie viele Modelle er produziert?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "vollständige",
            "Name",
            "jedes",
            "Autoherstellers",
            ",",
            "seine",
            "Kennung",
            "und",
            "wie",
            "viele",
            "Modelle",
            "er",
            "produziert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which model of the car has the minimum horsepower?",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id ORDER BY T2.ps ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.ps",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.ps",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Automodell hat die wenigsten Pferdestärken?",
        "question_toks": [
            "Welches",
            "Automodell",
            "hat",
            "die",
            "wenigsten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the model of the car with the smallest amount of horsepower?",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id ORDER BY T2.ps ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.ps",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.ps",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches ist das Automodell mit den wenigsten Pferdestärken?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Automodell",
            "mit",
            "den",
            "wenigsten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Find the model of the car whose weight is below the average weight.",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.gewicht < (SELECT avg(gewicht) FROM autos_daten)",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.gewicht",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            "FROM",
            "autos_daten",
            ")"
        ],
        "query_toks_no_value": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.gewicht < (SELECT avg(gewicht) FROM autos_daten)",
        "question": "Finde das Modell des Autos, dessen Gewicht unter dem Durchschnittsgewicht liegt.",
        "question_toks": [
            "Finde",
            "das",
            "Modell",
            "des",
            "Autos",
            ",",
            "dessen",
            "Gewicht",
            "unter",
            "dem",
            "Durchschnittsgewicht",
            "liegt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the model for the car with a weight smaller than the average?",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.gewicht < (SELECT avg(gewicht) FROM autos_daten)",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.gewicht",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            "FROM",
            "autos_daten",
            ")"
        ],
        "query_toks_no_value": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.gewicht < (SELECT avg(gewicht) FROM autos_daten)",
        "question": "Welches ist das Modell für das Auto mit einem geringeren Gewicht als der Durchschnitt?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Modell",
            "für",
            "das",
            "Auto",
            "mit",
            "einem",
            "geringeren",
            "Gewicht",
            "als",
            "der",
            "Durchschnitt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Find the name of the makers that produced some cars in the year of 1970?",
        "query": "SELECT DISTINCT T1.hersteller FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller JOIN autonamen AS T3 ON T2.modell = T3.modell JOIN autos_daten AS T4 ON T3.marke_id = T4.id WHERE T4.jahr = '1970';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T3.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T4.jahr",
            "=",
            "'1970",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T3.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T4.jahr",
            "=",
            "value",
            ";"
        ],
        "question": "Finde die Namen der Hersteller, die im Jahr \"1970\" einige Autos produziert haben.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Hersteller",
            ",",
            "die",
            "im",
            "Jahr",
            "``",
            "1970",
            "''",
            "einige",
            "Autos",
            "produziert",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"1970\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the name of the different car makers who produced a car in 1970?",
        "query": "SELECT DISTINCT T1.hersteller FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller JOIN autonamen AS T3 ON T2.modell = T3.modell JOIN autos_daten AS T4 ON T3.marke_id = T4.id WHERE T4.jahr = '1970';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T3.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T4.jahr",
            "=",
            "'1970",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T3.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T4.jahr",
            "=",
            "value",
            ";"
        ],
        "question": "Wie heißen die verschiedenen Autohersteller, die \"1970\" ein Auto produziert haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "verschiedenen",
            "Autohersteller",
            ",",
            "die",
            "``",
            "1970",
            "''",
            "ein",
            "Auto",
            "produziert",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"1970\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Find the make and production time of the cars that were produced in the earliest year?",
        "query": "SELECT T2.marke , T1.jahr FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T1.jahr = (SELECT min(jahr) FROM autos_daten);",
        "query_toks": [
            "SELECT",
            "T2.marke",
            ",",
            "T1.jahr",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T1.jahr",
            "=",
            "(",
            "SELECT",
            "min",
            "(",
            "jahr",
            ")",
            "FROM",
            "autos_daten",
            ")",
            ";"
        ],
        "query_toks_no_value": "SELECT T2.marke , T1.jahr FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T1.jahr = (SELECT min(jahr) FROM autos_daten);",
        "question": "Finde die Marke und die Produktionszeit der Autos, die im frühesten Jahr produziert wurden?",
        "question_toks": [
            "Finde",
            "die",
            "Marke",
            "und",
            "die",
            "Produktionszeit",
            "der",
            "Autos",
            ",",
            "die",
            "im",
            "frühesten",
            "Jahr",
            "produziert",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maker of the carr produced in the earliest year and what year was it?",
        "query": "SELECT T2.marke , T1.jahr FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T1.jahr = (SELECT min(jahr) FROM autos_daten);",
        "query_toks": [
            "SELECT",
            "T2.marke",
            ",",
            "T1.jahr",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T1.jahr",
            "=",
            "(",
            "SELECT",
            "min",
            "(",
            "jahr",
            ")",
            "FROM",
            "autos_daten",
            ")",
            ";"
        ],
        "query_toks_no_value": "SELECT T2.marke , T1.jahr FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T1.jahr = (SELECT min(jahr) FROM autos_daten);",
        "question": "Wie heißt der Hersteller des Wagens, der im frühesten Jahr produziert wurde und welches Jahr war es?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Hersteller",
            "des",
            "Wagens",
            ",",
            "der",
            "im",
            "frühesten",
            "Jahr",
            "produziert",
            "wurde",
            "und",
            "welches",
            "Jahr",
            "war",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which distinct car models are the produced after 1980?",
        "query": "SELECT DISTINCT T1.modell FROM modellliste AS T1 JOIN autonamen AS T2 ON T1.modell = T2.modell JOIN autos_daten AS T3 ON T2.marke_id = T3.id WHERE T3.jahr > 1980;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "WHERE",
            "T3.jahr",
            ">",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "WHERE",
            "T3.jahr",
            ">",
            "value",
            ";"
        ],
        "question": "Welche verschiedenen Automodelle wurden nach 1980 hergestellt?",
        "question_toks": [
            "Welche",
            "verschiedenen",
            "Automodelle",
            "wurden",
            "nach",
            "1980",
            "hergestellt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the different models for the cards produced after 1980?",
        "query": "SELECT DISTINCT T1.modell FROM modellliste AS T1 JOIN autonamen AS T2 ON T1.modell = T2.modell JOIN autos_daten AS T3 ON T2.marke_id = T3.id WHERE T3.jahr > 1980;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "WHERE",
            "T3.jahr",
            ">",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "WHERE",
            "T3.jahr",
            ">",
            "value",
            ";"
        ],
        "question": "Welche verschiedenen Modelle gibt es für die Karten, die nach 1980 hergestellt wurden?",
        "question_toks": [
            "Welche",
            "verschiedenen",
            "Modelle",
            "gibt",
            "es",
            "für",
            "die",
            "Karten",
            ",",
            "die",
            "nach",
            "1980",
            "hergestellt",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many car makers are there in each continents? List the continent name and the count.",
        "query": "SELECT T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent JOIN autohersteller AS T3 ON T2.land_id = T3.land GROUP BY T1.kontinent;",
        "query_toks": [
            "SELECT",
            "T1.kontinent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.cont_id",
            "=",
            "T2.kontinent",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.land_id",
            "=",
            "T3.land",
            "GROUP",
            "BY",
            "T1.kontinent",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent JOIN autohersteller AS T3 ON T2.land_id = T3.land GROUP BY T1.kontinent;",
        "question": "Wie viele Autohersteller gibt es auf jedem Kontinent? Nenne den Namen des Kontinents und die Anzahl.",
        "question_toks": [
            "Wie",
            "viele",
            "Autohersteller",
            "gibt",
            "es",
            "auf",
            "jedem",
            "Kontinent",
            "?",
            "Nenne",
            "den",
            "Namen",
            "des",
            "Kontinents",
            "und",
            "die",
            "Anzahl",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the name of each continent and how many car makers are there in each one?",
        "query": "SELECT T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent JOIN autohersteller AS T3 ON T2.land_id = T3.land GROUP BY T1.kontinent;",
        "query_toks": [
            "SELECT",
            "T1.kontinent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kontinente",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.cont_id",
            "=",
            "T2.kontinent",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.land_id",
            "=",
            "T3.land",
            "GROUP",
            "BY",
            "T1.kontinent",
            ";"
        ],
        "query_toks_no_value": "SELECT T1.kontinent , count(*) FROM kontinente AS T1 JOIN länder AS T2 ON T1.cont_id = T2.kontinent JOIN autohersteller AS T3 ON T2.land_id = T3.land GROUP BY T1.kontinent;",
        "question": "Wie heißt jeder Kontinent und wie viele Autohersteller gibt es auf jedem Kontinent?",
        "question_toks": [
            "Wie",
            "heißt",
            "jeder",
            "Kontinent",
            "und",
            "wie",
            "viele",
            "Autohersteller",
            "gibt",
            "es",
            "auf",
            "jedem",
            "Kontinent",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which of the countries has the most car makers? List the country name.",
        "query": "SELECT T2.landesname FROM autohersteller AS T1 JOIN länder AS T2 ON T1.land = T2.land_id GROUP BY T1.land ORDER BY Count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.landesname",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "GROUP",
            "BY",
            "T1.land",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.landesname",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "GROUP",
            "BY",
            "T1.land",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches der Länder hat die meisten Autohersteller? Nenne den Namen des Landes.",
        "question_toks": [
            "Welches",
            "der",
            "Länder",
            "hat",
            "die",
            "meisten",
            "Autohersteller",
            "?",
            "Nenne",
            "den",
            "Namen",
            "des",
            "Landes",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the name of the country with the most car makers?",
        "query": "SELECT T2.landesname FROM autohersteller AS T1 JOIN länder AS T2 ON T1.land = T2.land_id GROUP BY T1.land ORDER BY Count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.landesname",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "GROUP",
            "BY",
            "T1.land",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.landesname",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "GROUP",
            "BY",
            "T1.land",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie heißt das Land mit den meisten Autoherstellern?",
        "question_toks": [
            "Wie",
            "heißt",
            "das",
            "Land",
            "mit",
            "den",
            "meisten",
            "Autoherstellern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many car models are produced by each maker ? Only list the count and the maker full name .",
        "query": "select count(*) , t2.vollständiger_name from modellliste as t1 join autohersteller as t2 on t1.hersteller = t2.id group by t2.id;",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.vollständiger_name",
            "from",
            "modellliste",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.hersteller",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            ";"
        ],
        "query_toks_no_value": "select count(*) , t2.vollständiger_name from modellliste as t1 join autohersteller as t2 on t1.hersteller = t2.id group by t2.id;",
        "question": "Wie viele Automodelle werden von jedem Hersteller produziert? Gib nur die Anzahl und den vollen Namen des Herstellers an.",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "werden",
            "von",
            "jedem",
            "Hersteller",
            "produziert",
            "?",
            "Gib",
            "nur",
            "die",
            "Anzahl",
            "und",
            "den",
            "vollen",
            "Namen",
            "des",
            "Herstellers",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "query": "SELECT Count(*) , T2.vollständiger_name , T2.id FROM modellliste AS T1 JOIN autohersteller AS T2 ON T1.hersteller = T2.id GROUP BY T2.id;",
        "query_toks": [
            "SELECT",
            "Count",
            "(",
            "*",
            ")",
            ",",
            "T2.vollständiger_name",
            ",",
            "T2.id",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.hersteller",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            ";"
        ],
        "query_toks_no_value": "SELECT Count(*) , T2.vollständiger_name , T2.id FROM modellliste AS T1 JOIN autohersteller AS T2 ON T1.hersteller = T2.id GROUP BY T2.id;",
        "question": "Wie viele Automodelle werden von jedem Hersteller produziert und wie lautet der vollständige Name des jeweiligen Herstellers?",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "werden",
            "von",
            "jedem",
            "Hersteller",
            "produziert",
            "und",
            "wie",
            "lautet",
            "der",
            "vollständige",
            "Name",
            "des",
            "jeweiligen",
            "Herstellers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "query": "SELECT T1.beschleunigung FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T2.marke = 'amc hornet sportabout (sw)';",
        "query_toks": [
            "SELECT",
            "T1.beschleunigung",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.marke",
            "=",
            "'amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.beschleunigung",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.marke",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Beschleunigung der Automarke amc hornet sportabout (sw)?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Beschleunigung",
            "der",
            "Automarke",
            "amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"amc hornet sportabout (sw)\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "query": "SELECT T1.beschleunigung FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T2.marke = 'amc hornet sportabout (sw)';",
        "query_toks": [
            "SELECT",
            "T1.beschleunigung",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.marke",
            "=",
            "'amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.beschleunigung",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.marke",
            "=",
            "value",
            ";"
        ],
        "question": "Wie stark beschleunigt das Auto, das amc hornet sportabout (sw) macht?",
        "question_toks": [
            "Wie",
            "stark",
            "beschleunigt",
            "das",
            "Auto",
            ",",
            "das",
            "amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "macht",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"amc hornet sportabout (sw)\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many car makers are there in france?",
        "query": "SELECT count(*) FROM autohersteller AS T1 JOIN länder AS T2 ON T1.land = T2.land_id WHERE T2.landesname = 'france';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "WHERE",
            "T2.landesname",
            "=",
            "'france",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "WHERE",
            "T2.landesname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Autohersteller gibt es in \"france\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Autohersteller",
            "gibt",
            "es",
            "in",
            "``",
            "france",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"france\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of makers of care in France?",
        "query": "SELECT count(*) FROM autohersteller AS T1 JOIN länder AS T2 ON T1.land = T2.land_id WHERE T2.landesname = 'france';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "WHERE",
            "T2.landesname",
            "=",
            "'france",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "länder",
            "AS",
            "T2",
            "ON",
            "T1.land",
            "=",
            "T2.land_id",
            "WHERE",
            "T2.landesname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Zahl der Pflegekräfte in Frankreich?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Pflegekräfte",
            "in",
            "Frankreich",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"france\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many car models are produced in the usa?",
        "query": "SELECT count(*) FROM modellliste AS T1 JOIN autohersteller AS T2 ON T1.hersteller = T2.id JOIN länder AS T3 ON T2.land = T3.land_id WHERE T3.landesname = 'usa';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.hersteller",
            "=",
            "T2.id",
            "JOIN",
            "länder",
            "AS",
            "T3",
            "ON",
            "T2.land",
            "=",
            "T3.land_id",
            "WHERE",
            "T3.landesname",
            "=",
            "'usa",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.hersteller",
            "=",
            "T2.id",
            "JOIN",
            "länder",
            "AS",
            "T3",
            "ON",
            "T2.land",
            "=",
            "T3.land_id",
            "WHERE",
            "T3.landesname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Automodelle werden in den \"usa\" produziert?",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "werden",
            "in",
            "den",
            "``",
            "usa",
            "''",
            "produziert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"usa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the count of the car models produced in the United States?",
        "query": "SELECT count(*) FROM modellliste AS T1 JOIN autohersteller AS T2 ON T1.hersteller = T2.id JOIN länder AS T3 ON T2.land = T3.land_id WHERE T3.landesname = 'usa';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.hersteller",
            "=",
            "T2.id",
            "JOIN",
            "länder",
            "AS",
            "T3",
            "ON",
            "T2.land",
            "=",
            "T3.land_id",
            "WHERE",
            "T3.landesname",
            "=",
            "'usa",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.hersteller",
            "=",
            "T2.id",
            "JOIN",
            "länder",
            "AS",
            "T3",
            "ON",
            "T2.land",
            "=",
            "T3.land_id",
            "WHERE",
            "T3.landesname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Automodelle werden in den Vereinigten Staaten hergestellt?",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "werden",
            "in",
            "den",
            "Vereinigten",
            "Staaten",
            "hergestellt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"usa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "query": "SELECT avg(mpg) FROM autos_daten WHERE zylinder = 4;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            "=",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist der durchschnittliche Benzinverbrauch der Autos mit 4 Zylindern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "durchschnittliche",
            "Benzinverbrauch",
            "der",
            "Autos",
            "mit",
            "4",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average miles per gallon of all the cards with 4 cylinders?",
        "query": "SELECT avg(mpg) FROM autos_daten WHERE zylinder = 4;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            "=",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist der durchschnittliche Benzinverbrauch aller Karten mit 4 Zylindern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "durchschnittliche",
            "Benzinverbrauch",
            "aller",
            "Karten",
            "mit",
            "4",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
        "query": "select min(gewicht) from autos_daten where zylinder = 8 and jahr = 1974",
        "query_toks": [
            "select",
            "min",
            "(",
            "gewicht",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "8",
            "and",
            "jahr",
            "=",
            "1974"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "gewicht",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "value",
            "and",
            "jahr",
            "=",
            "value"
        ],
        "question": "Was ist das kleinste Gewicht des 1974 hergestellten Autos mit 8 Zylindern?",
        "question_toks": [
            "Was",
            "ist",
            "das",
            "kleinste",
            "Gewicht",
            "des",
            "1974",
            "hergestellten",
            "Autos",
            "mit",
            "8",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1974.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
        "query": "select min(gewicht) from autos_daten where zylinder = 8 and jahr = 1974",
        "query_toks": [
            "select",
            "min",
            "(",
            "gewicht",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "8",
            "and",
            "jahr",
            "=",
            "1974"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "gewicht",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "value",
            "and",
            "jahr",
            "=",
            "value"
        ],
        "question": "Was ist das Mindestgewicht des 1974 hergestellten Autos mit 8 Zylindern?",
        "question_toks": [
            "Was",
            "ist",
            "das",
            "Mindestgewicht",
            "des",
            "1974",
            "hergestellten",
            "Autos",
            "mit",
            "8",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1974.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are all the makers and models?",
        "query": "SELECT hersteller , modell FROM modellliste;",
        "query_toks": [
            "SELECT",
            "hersteller",
            ",",
            "modell",
            "FROM",
            "modellliste",
            ";"
        ],
        "query_toks_no_value": "SELECT hersteller , modell FROM modellliste;",
        "question": "Welche Hersteller und Modelle gibt es?",
        "question_toks": [
            "Welche",
            "Hersteller",
            "und",
            "Modelle",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the makers and models?",
        "query": "SELECT hersteller , modell FROM modellliste;",
        "query_toks": [
            "SELECT",
            "hersteller",
            ",",
            "modell",
            "FROM",
            "modellliste",
            ";"
        ],
        "query_toks_no_value": "SELECT hersteller , modell FROM modellliste;",
        "question": "Was sind die Hersteller und Modelle?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "Hersteller",
            "und",
            "Modelle",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the countries having at least one car maker? List name and id.",
        "query": "SELECT T1.landesname , T1.land_id FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land GROUP BY T1.land_id HAVING count(*) >= 1;",
        "query_toks": [
            "SELECT",
            "T1.landesname",
            ",",
            "T1.land_id",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.landesname",
            ",",
            "T1.land_id",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ";"
        ],
        "question": "In welchen Ländern gibt es mindestens einen Autohersteller? Nenne den Namen und die Bezeichnung.",
        "question_toks": [
            "In",
            "welchen",
            "Ländern",
            "gibt",
            "es",
            "mindestens",
            "einen",
            "Autohersteller",
            "?",
            "Nenne",
            "den",
            "Namen",
            "und",
            "die",
            "Bezeichnung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the names and ids of all countries with at least one car maker?",
        "query": "SELECT T1.landesname , T1.land_id FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land GROUP BY T1.land_id HAVING count(*) >= 1;",
        "query_toks": [
            "SELECT",
            "T1.landesname",
            ",",
            "T1.land_id",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.landesname",
            ",",
            "T1.land_id",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die Namen und Kennungen aller Länder mit mindestens einem Autohersteller?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Kennungen",
            "aller",
            "Länder",
            "mit",
            "mindestens",
            "einem",
            "Autohersteller",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of the cars with horsepower more than 150?",
        "query": "SELECT count(*) FROM autos_daten WHERE ps > 150;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "ps",
            ">",
            "150",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "ps",
            ">",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Zahl der Autos mit mehr als 150 Pferdestärken?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Autos",
            "mit",
            "mehr",
            "als",
            "150",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of cars with a horsepower greater than 150?",
        "query": "SELECT count(*) FROM autos_daten WHERE ps > 150;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "ps",
            ">",
            "150",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "ps",
            ">",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Anzahl der Autos mit mehr als 150 PS?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Anzahl",
            "der",
            "Autos",
            "mit",
            "mehr",
            "als",
            "150",
            "PS",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average weight of cars each year?",
        "query": "SELECT avg(gewicht) , jahr FROM autos_daten GROUP BY jahr;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            ",",
            "jahr",
            "FROM",
            "autos_daten",
            "GROUP",
            "BY",
            "jahr",
            ";"
        ],
        "query_toks_no_value": "SELECT avg(gewicht) , jahr FROM autos_daten GROUP BY jahr;",
        "question": "Wie hoch ist das durchschnittliche Gewicht der Autos pro Jahr?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "durchschnittliche",
            "Gewicht",
            "der",
            "Autos",
            "pro",
            "Jahr",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average weight and year for each year?",
        "query": "SELECT avg(gewicht) , jahr FROM autos_daten GROUP BY jahr;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewicht",
            ")",
            ",",
            "jahr",
            "FROM",
            "autos_daten",
            "GROUP",
            "BY",
            "jahr",
            ";"
        ],
        "query_toks_no_value": "SELECT avg(gewicht) , jahr FROM autos_daten GROUP BY jahr;",
        "question": "Wie hoch ist das durchschnittliche Gewicht und das Jahr für jedes Jahr?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "durchschnittliche",
            "Gewicht",
            "und",
            "das",
            "Jahr",
            "für",
            "jedes",
            "Jahr",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which countries in europe have at least 3 car manufacturers?",
        "query": "SELECT T1.landesname FROM länder AS T1 JOIN kontinente AS T2 ON T1.kontinent = T2.cont_id JOIN autohersteller AS T3 ON T1.land_id = T3.land WHERE T2.kontinent = 'europe' GROUP BY T1.landesname HAVING count(*) >= 3;",
        "query_toks": [
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "kontinente",
            "AS",
            "T2",
            "ON",
            "T1.kontinent",
            "=",
            "T2.cont_id",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T1.land_id",
            "=",
            "T3.land",
            "WHERE",
            "T2.kontinent",
            "=",
            "'europe",
            "'",
            "GROUP",
            "BY",
            "T1.landesname",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "kontinente",
            "AS",
            "T2",
            "ON",
            "T1.kontinent",
            "=",
            "T2.cont_id",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T1.land_id",
            "=",
            "T3.land",
            "WHERE",
            "T2.kontinent",
            "=",
            "value",
            "GROUP",
            "BY",
            "T1.landesname",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ";"
        ],
        "question": "Welche Länder in \"europe\" haben mindestens 3 Autohersteller?",
        "question_toks": [
            "Welche",
            "Länder",
            "in",
            "``",
            "europe",
            "''",
            "haben",
            "mindestens",
            "3",
            "Autohersteller",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"europe\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the names of all European countries with at least 3 manufacturers?",
        "query": "SELECT T1.landesname FROM länder AS T1 JOIN kontinente AS T2 ON T1.kontinent = T2.cont_id JOIN autohersteller AS T3 ON T1.land_id = T3.land WHERE T2.kontinent = 'europe' GROUP BY T1.landesname HAVING count(*) >= 3;",
        "query_toks": [
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "kontinente",
            "AS",
            "T2",
            "ON",
            "T1.kontinent",
            "=",
            "T2.cont_id",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T1.land_id",
            "=",
            "T3.land",
            "WHERE",
            "T2.kontinent",
            "=",
            "'europe",
            "'",
            "GROUP",
            "BY",
            "T1.landesname",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "kontinente",
            "AS",
            "T2",
            "ON",
            "T1.kontinent",
            "=",
            "T2.cont_id",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T1.land_id",
            "=",
            "T3.land",
            "WHERE",
            "T2.kontinent",
            "=",
            "value",
            "GROUP",
            "BY",
            "T1.landesname",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die Namen aller europäischen Länder mit mindestens 3 Herstellern?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "aller",
            "europäischen",
            "Länder",
            "mit",
            "mindestens",
            "3",
            "Herstellern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"europe\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "query": "SELECT T2.ps , T1.marke FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.zylinder = 3 ORDER BY T2.ps DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.ps",
            ",",
            "T1.marke",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "3",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.ps",
            ",",
            "T1.marke",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "value",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die maximale Pferdestärke und welche Marke haben die 3-Zylinder-Automodelle?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "maximale",
            "Pferdestärke",
            "und",
            "welche",
            "Marke",
            "haben",
            "die",
            "3-Zylinder-Automodelle",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "query": "SELECT T2.ps , T1.marke FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.zylinder = 3 ORDER BY T2.ps DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.ps",
            ",",
            "T1.marke",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "3",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.ps",
            ",",
            "T1.marke",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "value",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie viel PS haben die Modelle mit 3 Zylindern am meisten und welche Marke ist es?",
        "question_toks": [
            "Wie",
            "viel",
            "PS",
            "haben",
            "die",
            "Modelle",
            "mit",
            "3",
            "Zylindern",
            "am",
            "meisten",
            "und",
            "welche",
            "Marke",
            "ist",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id ORDER BY T2.mpg DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.mpg",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "ORDER",
            "BY",
            "T2.mpg",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Modell spart am meisten Sprit? Das heißt, es hat die meisten Meilen pro Gallone.",
        "question_toks": [
            "Welches",
            "Modell",
            "spart",
            "am",
            "meisten",
            "Sprit",
            "?",
            "Das",
            "heißt",
            ",",
            "es",
            "hat",
            "die",
            "meisten",
            "Meilen",
            "pro",
            "Gallone",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the car model with the highest mpg ?",
        "query": "select t1.modell from autonamen as t1 join autos_daten as t2 on t1.marke_id = t2.id order by t2.mpg desc limit 1;",
        "query_toks": [
            "select",
            "t1.modell",
            "from",
            "autonamen",
            "as",
            "t1",
            "join",
            "autos_daten",
            "as",
            "t2",
            "on",
            "t1.marke_id",
            "=",
            "t2.id",
            "order",
            "by",
            "t2.mpg",
            "desc",
            "limit",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1.modell",
            "from",
            "autonamen",
            "as",
            "t1",
            "join",
            "autos_daten",
            "as",
            "t2",
            "on",
            "t1.marke_id",
            "=",
            "t2.id",
            "order",
            "by",
            "t2.mpg",
            "desc",
            "limit",
            "value",
            ";"
        ],
        "question": "Welches ist das Automodell mit dem höchsten Benzinverbrauch?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Automodell",
            "mit",
            "dem",
            "höchsten",
            "Benzinverbrauch",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average horsepower of the cars before 1980?",
        "query": "SELECT avg(ps) FROM autos_daten WHERE jahr < 1980;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "ps",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "<",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "ps",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "<",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die durchschnittliche PS-Zahl der Autos vor 1980?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "PS-Zahl",
            "der",
            "Autos",
            "vor",
            "1980",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average horsepower for all cars produced before 1980 ?",
        "query": "select avg(ps) from autos_daten where jahr < 1980;",
        "query_toks": [
            "select",
            "avg",
            "(",
            "ps",
            ")",
            "from",
            "autos_daten",
            "where",
            "jahr",
            "<",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "ps",
            ")",
            "from",
            "autos_daten",
            "where",
            "jahr",
            "<",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die durchschnittliche PS-Zahl aller Autos, die vor 1980 hergestellt wurden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "PS-Zahl",
            "aller",
            "Autos",
            ",",
            "die",
            "vor",
            "1980",
            "hergestellt",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average edispl of the cars of model volvo?",
        "query": "SELECT avg(T2.edispl) FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T1.modell = 'volvo';",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T1.modell",
            "=",
            "'volvo",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T1.modell",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist der Durchschnittsedispl der Autos des Modells \"volvo\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Durchschnittsedispl",
            "der",
            "Autos",
            "des",
            "Modells",
            "``",
            "volvo",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the average edispl for all volvos?",
        "query": "SELECT avg(T2.edispl) FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T1.modell = 'volvo';",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T1.modell",
            "=",
            "'volvo",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T1.modell",
            "=",
            "value",
            ";"
        ],
        "question": "Wie hoch ist der durchschnittliche Edispl für alle \"volvo\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "durchschnittliche",
            "Edispl",
            "für",
            "alle",
            "``",
            "volvo",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maximum accelerate for different number of cylinders?",
        "query": "SELECT max(beschleunigung) , zylinder FROM autos_daten GROUP BY zylinder;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "beschleunigung",
            ")",
            ",",
            "zylinder",
            "FROM",
            "autos_daten",
            "GROUP",
            "BY",
            "zylinder",
            ";"
        ],
        "query_toks_no_value": "SELECT max(beschleunigung) , zylinder FROM autos_daten GROUP BY zylinder;",
        "question": "Wie hoch ist die maximale Beschleunigung bei verschiedenen Zylinderzahlen?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "maximale",
            "Beschleunigung",
            "bei",
            "verschiedenen",
            "Zylinderzahlen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maximum accelerate for all the different cylinders?",
        "query": "SELECT max(beschleunigung) , zylinder FROM autos_daten GROUP BY zylinder;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "beschleunigung",
            ")",
            ",",
            "zylinder",
            "FROM",
            "autos_daten",
            "GROUP",
            "BY",
            "zylinder",
            ";"
        ],
        "query_toks_no_value": "SELECT max(beschleunigung) , zylinder FROM autos_daten GROUP BY zylinder;",
        "question": "Wie hoch ist die maximale Beschleunigung für die verschiedenen Zylinder?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "maximale",
            "Beschleunigung",
            "für",
            "die",
            "verschiedenen",
            "Zylinder",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which model has the most version(make) of cars?",
        "query": "SELECT modell FROM autonamen GROUP BY modell ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "modell",
            "FROM",
            "autonamen",
            "GROUP",
            "BY",
            "modell",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "modell",
            "FROM",
            "autonamen",
            "GROUP",
            "BY",
            "modell",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Modell hat die meisten Versionen (Marken) von Autos?",
        "question_toks": [
            "Welches",
            "Modell",
            "hat",
            "die",
            "meisten",
            "Versionen",
            "(",
            "Marken",
            ")",
            "von",
            "Autos",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What model has the most different versions?",
        "query": "SELECT modell FROM autonamen GROUP BY modell ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "modell",
            "FROM",
            "autonamen",
            "GROUP",
            "BY",
            "modell",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "modell",
            "FROM",
            "autonamen",
            "GROUP",
            "BY",
            "modell",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Modell hat die meisten verschiedenen Versionen?",
        "question_toks": [
            "Welches",
            "Modell",
            "hat",
            "die",
            "meisten",
            "verschiedenen",
            "Versionen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many cars have more than 4 cylinders?",
        "query": "SELECT count(*) FROM autos_daten WHERE zylinder > 4;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "value",
            ";"
        ],
        "question": "Wie viele Autos haben mehr als 4 Zylinder?",
        "question_toks": [
            "Wie",
            "viele",
            "Autos",
            "haben",
            "mehr",
            "als",
            "4",
            "Zylinder",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of cars with more than 4 cylinders?",
        "query": "SELECT count(*) FROM autos_daten WHERE zylinder > 4;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Zahl der Autos mit mehr als 4 Zylindern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Autos",
            "mit",
            "mehr",
            "als",
            "4",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "how many cars were produced in 1980?",
        "query": "SELECT count(*) FROM autos_daten WHERE jahr = 1980;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "=",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "=",
            "value",
            ";"
        ],
        "question": "wie viele Autos wurden 1980 produziert?",
        "question_toks": [
            "wie",
            "viele",
            "Autos",
            "wurden",
            "1980",
            "produziert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "In 1980, how many cars were made?",
        "query": "SELECT count(*) FROM autos_daten WHERE jahr = 1980;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "=",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "jahr",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Autos wurden im Jahr 1980 hergestellt?",
        "question_toks": [
            "Wie",
            "viele",
            "Autos",
            "wurden",
            "im",
            "Jahr",
            "1980",
            "hergestellt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many car models were produced by the maker with full name American Motor Company?",
        "query": "SELECT count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller WHERE T1.vollständiger_name = 'American Motor Company';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "WHERE",
            "T1.vollständiger_name",
            "=",
            "'American",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "WHERE",
            "T1.vollständiger_name",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Automodelle wurden von dem Hersteller mit dem vollen Namen \"American Motor Company\" produziert?",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "wurden",
            "von",
            "dem",
            "Hersteller",
            "mit",
            "dem",
            "vollen",
            "Namen",
            "``",
            "American",
            "Motor",
            "Company",
            "''",
            "produziert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"American Motor Company\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of car models created by the car maker American Motor Company?",
        "query": "SELECT count(*) FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller WHERE T1.vollständiger_name = 'American Motor Company';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "WHERE",
            "T1.vollständiger_name",
            "=",
            "'American",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "WHERE",
            "T1.vollständiger_name",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Automodelle hat der Autohersteller \"American Motor Company\" entwickelt?",
        "question_toks": [
            "Wie",
            "viele",
            "Automodelle",
            "hat",
            "der",
            "Autohersteller",
            "``",
            "American",
            "Motor",
            "Company",
            "''",
            "entwickelt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"American Motor Company\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which makers designed more than 3 car models? List full name and the id.",
        "query": "SELECT T1.vollständiger_name , T1.id FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id HAVING count(*) > 3;",
        "query_toks": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            ";"
        ],
        "question": "Welche Hersteller haben mehr als 3 Automodelle entworfen? Nenne den vollständigen Namen und die Kennung.",
        "question_toks": [
            "Welche",
            "Hersteller",
            "haben",
            "mehr",
            "als",
            "3",
            "Automodelle",
            "entworfen",
            "?",
            "Nenne",
            "den",
            "vollständigen",
            "Namen",
            "und",
            "die",
            "Kennung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the names and ids of all makers with more than 3 models?",
        "query": "SELECT T1.vollständiger_name , T1.id FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id HAVING count(*) > 3;",
        "query_toks": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vollständiger_name",
            ",",
            "T1.id",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            ";"
        ],
        "question": "Wie lauten die Namen und Kennungen aller Hersteller mit mehr als 3 Modellen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Kennungen",
            "aller",
            "Hersteller",
            "mit",
            "mehr",
            "als",
            "3",
            "Modellen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "query": "SELECT DISTINCT T2.modell FROM autonamen AS T1 JOIN modellliste AS T2 ON T1.modell = T2.modell JOIN autohersteller AS T3 ON T2.hersteller = T3.id JOIN autos_daten AS T4 ON T1.marke_id = T4.id WHERE T3.vollständiger_name = 'General Motors' OR T4.gewicht > 3500;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.hersteller",
            "=",
            "T3.id",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T1.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T3.vollständiger_name",
            "=",
            "'General",
            "Motors",
            "'",
            "OR",
            "T4.gewicht",
            ">",
            "3500",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.hersteller",
            "=",
            "T3.id",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T1.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T3.vollständiger_name",
            "=",
            "value",
            "OR",
            "T4.gewicht",
            ">",
            "value",
            ";"
        ],
        "question": "Welche markanten Modelle werden vom Hersteller mit dem vollen Namen \"General Motors\" produziert oder wiegen mehr als 3500?",
        "question_toks": [
            "Welche",
            "markanten",
            "Modelle",
            "werden",
            "vom",
            "Hersteller",
            "mit",
            "dem",
            "vollen",
            "Namen",
            "``",
            "General",
            "Motors",
            "''",
            "produziert",
            "oder",
            "wiegen",
            "mehr",
            "als",
            "3500",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"General Motors\"",
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "query": "SELECT DISTINCT T2.modell FROM autonamen AS T1 JOIN modellliste AS T2 ON T1.modell = T2.modell JOIN autohersteller AS T3 ON T2.hersteller = T3.id JOIN autos_daten AS T4 ON T1.marke_id = T4.id WHERE T3.vollständiger_name = 'General Motors' OR T4.gewicht > 3500;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.hersteller",
            "=",
            "T3.id",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T1.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T3.vollständiger_name",
            "=",
            "'General",
            "Motors",
            "'",
            "OR",
            "T4.gewicht",
            ">",
            "3500",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autohersteller",
            "AS",
            "T3",
            "ON",
            "T2.hersteller",
            "=",
            "T3.id",
            "JOIN",
            "autos_daten",
            "AS",
            "T4",
            "ON",
            "T1.marke_id",
            "=",
            "T4.id",
            "WHERE",
            "T3.vollständiger_name",
            "=",
            "value",
            "OR",
            "T4.gewicht",
            ">",
            "value",
            ";"
        ],
        "question": "Was sind die verschiedenen Modelle, die entweder vom Autohersteller \"General Motors\" entwickelt wurden oder mehr als 3500 kg wiegen?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "verschiedenen",
            "Modelle",
            ",",
            "die",
            "entweder",
            "vom",
            "Autohersteller",
            "``",
            "General",
            "Motors",
            "''",
            "entwickelt",
            "wurden",
            "oder",
            "mehr",
            "als",
            "3500",
            "kg",
            "wiegen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"General Motors\"",
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
        "query": "select distinct jahr from autos_daten where gewicht between 3000 and 4000;",
        "query_toks": [
            "select",
            "distinct",
            "jahr",
            "from",
            "autos_daten",
            "where",
            "gewicht",
            "between",
            "3000",
            "and",
            "4000",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "jahr",
            "from",
            "autos_daten",
            "where",
            "gewicht",
            "between",
            "value",
            "and",
            "value",
            ";"
        ],
        "question": "In welchen Jahren wurden Autos produziert, die nicht weniger als 3000 und nicht mehr als 4000 wiegen?",
        "question_toks": [
            "In",
            "welchen",
            "Jahren",
            "wurden",
            "Autos",
            "produziert",
            ",",
            "die",
            "nicht",
            "weniger",
            "als",
            "3000",
            "und",
            "nicht",
            "mehr",
            "als",
            "4000",
            "wiegen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    4000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
        "query": "select distinct jahr from autos_daten where gewicht between 3000 and 4000;",
        "query_toks": [
            "select",
            "distinct",
            "jahr",
            "from",
            "autos_daten",
            "where",
            "gewicht",
            "between",
            "3000",
            "and",
            "4000",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "jahr",
            "from",
            "autos_daten",
            "where",
            "gewicht",
            "between",
            "value",
            "and",
            "value",
            ";"
        ],
        "question": "In welchen Jahren wurden Autos produziert, die weniger als 4000 wiegen, und in welchen Jahren wurden Autos produziert, die mehr als 3000 wiegen?",
        "question_toks": [
            "In",
            "welchen",
            "Jahren",
            "wurden",
            "Autos",
            "produziert",
            ",",
            "die",
            "weniger",
            "als",
            "4000",
            "wiegen",
            ",",
            "und",
            "in",
            "welchen",
            "Jahren",
            "wurden",
            "Autos",
            "produziert",
            ",",
            "die",
            "mehr",
            "als",
            "3000",
            "wiegen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    4000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the horsepower of the car with the largest accelerate?",
        "query": "SELECT T1.ps FROM autos_daten AS T1 ORDER BY T1.beschleunigung DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.ps",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ps",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie viel PS hat das Auto mit der größten Beschleunigung?",
        "question_toks": [
            "Wie",
            "viel",
            "PS",
            "hat",
            "das",
            "Auto",
            "mit",
            "der",
            "größten",
            "Beschleunigung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the horsepower of the car with the greatest accelerate?",
        "query": "SELECT T1.ps FROM autos_daten AS T1 ORDER BY T1.beschleunigung DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.ps",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ps",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie viel PS hat das Auto mit der höchsten Beschleunigung?",
        "question_toks": [
            "Wie",
            "viel",
            "PS",
            "hat",
            "das",
            "Auto",
            "mit",
            "der",
            "höchsten",
            "Beschleunigung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "query": "SELECT T1.zylinder FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T2.modell = 'volvo' ORDER BY T1.beschleunigung ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.zylinder",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.modell",
            "=",
            "'volvo",
            "'",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.zylinder",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.modell",
            "=",
            "value",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie viele Zylinder hat das Auto mit der geringsten Beschleunigung beim Modell \"volvo\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Zylinder",
            "hat",
            "das",
            "Auto",
            "mit",
            "der",
            "geringsten",
            "Beschleunigung",
            "beim",
            "Modell",
            "``",
            "volvo",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "query": "SELECT T1.zylinder FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T2.modell = 'volvo' ORDER BY T1.beschleunigung ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.zylinder",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.modell",
            "=",
            "'volvo",
            "'",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.zylinder",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T2.modell",
            "=",
            "value",
            "ORDER",
            "BY",
            "T1.beschleunigung",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Wie viele Zylinder hat bei einem \"volvo\" die Version mit der geringsten Beschleunigung?",
        "question_toks": [
            "Wie",
            "viele",
            "Zylinder",
            "hat",
            "bei",
            "einem",
            "``",
            "volvo",
            "''",
            "die",
            "Version",
            "mit",
            "der",
            "geringsten",
            "Beschleunigung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "query": "SELECT COUNT(*) FROM autos_daten WHERE beschleunigung > ( SELECT beschleunigung FROM autos_daten ORDER BY ps DESC LIMIT 1 );",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "beschleunigung",
            ">",
            "(",
            "SELECT",
            "beschleunigung",
            "FROM",
            "autos_daten",
            "ORDER",
            "BY",
            "ps",
            "DESC",
            "LIMIT",
            "1",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "beschleunigung",
            ">",
            "(",
            "SELECT",
            "beschleunigung",
            "FROM",
            "autos_daten",
            "ORDER",
            "BY",
            "ps",
            "DESC",
            "LIMIT",
            "value",
            ")",
            ";"
        ],
        "question": "Wie viele Autos haben eine größere Beschleunigung als das Auto mit den meisten Pferdestärken?",
        "question_toks": [
            "Wie",
            "viele",
            "Autos",
            "haben",
            "eine",
            "größere",
            "Beschleunigung",
            "als",
            "das",
            "Auto",
            "mit",
            "den",
            "meisten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        20,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "query": "SELECT COUNT(*) FROM autos_daten WHERE beschleunigung > ( SELECT beschleunigung FROM autos_daten ORDER BY ps DESC LIMIT 1 );",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "beschleunigung",
            ">",
            "(",
            "SELECT",
            "beschleunigung",
            "FROM",
            "autos_daten",
            "ORDER",
            "BY",
            "ps",
            "DESC",
            "LIMIT",
            "1",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "beschleunigung",
            ">",
            "(",
            "SELECT",
            "beschleunigung",
            "FROM",
            "autos_daten",
            "ORDER",
            "BY",
            "ps",
            "DESC",
            "LIMIT",
            "value",
            ")",
            ";"
        ],
        "question": "Wie viele Autos sind schneller als das mit den meisten Pferdestärken?",
        "question_toks": [
            "Wie",
            "viele",
            "Autos",
            "sind",
            "schneller",
            "als",
            "das",
            "mit",
            "den",
            "meisten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        20,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many countries has more than 2 car makers ?",
        "query": "select count(*) from länder as t1 join autohersteller as t2 on t1.land_id = t2.land group by t1.land_id having count(*) > 2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie viele Länder haben mehr als 2 Autohersteller?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "haben",
            "mehr",
            "als",
            "2",
            "Autohersteller",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of countries with more than 2 car makers ?",
        "query": "select count(*) from länder as t1 join autohersteller as t2 on t1.land_id = t2.land group by t1.land_id having count(*) > 2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie hoch ist die Zahl der Länder mit mehr als 2 Autoherstellern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Länder",
            "mit",
            "mehr",
            "als",
            "2",
            "Autoherstellern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "How many cars has over 6 cylinders?",
        "query": "SELECT COUNT(*) FROM autos_daten WHERE zylinder > 6;",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "6",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "value",
            ";"
        ],
        "question": "Wie viele Autos haben mehr als 6 Zylinder?",
        "question_toks": [
            "Wie",
            "viele",
            "Autos",
            "haben",
            "mehr",
            "als",
            "6",
            "Zylinder",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the number of carsw ith over 6 cylinders?",
        "query": "SELECT COUNT(*) FROM autos_daten WHERE zylinder > 6;",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "6",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "autos_daten",
            "WHERE",
            "zylinder",
            ">",
            "value",
            ";"
        ],
        "question": "Wie hoch ist die Zahl der Autos mit mehr als 6 Zylindern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Autos",
            "mit",
            "mehr",
            "als",
            "6",
            "Zylindern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.zylinder = 4 ORDER BY T2.ps DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "4",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "value",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Modell hat bei den Autos mit 4 Zylindern die meisten Pferdestärken?",
        "question_toks": [
            "Welches",
            "Modell",
            "hat",
            "bei",
            "den",
            "Autos",
            "mit",
            "4",
            "Zylindern",
            "die",
            "meisten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "query": "SELECT T1.modell FROM autonamen AS T1 JOIN autos_daten AS T2 ON T1.marke_id = T2.id WHERE T2.zylinder = 4 ORDER BY T2.ps DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "4",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.modell",
            "FROM",
            "autonamen",
            "AS",
            "T1",
            "JOIN",
            "autos_daten",
            "AS",
            "T2",
            "ON",
            "T1.marke_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.zylinder",
            "=",
            "value",
            "ORDER",
            "BY",
            "T2.ps",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Modell hat von allen 4-Zylinder-Autos die meisten Pferdestärken?",
        "question_toks": [
            "Welches",
            "Modell",
            "hat",
            "von",
            "allen",
            "4-Zylinder-Autos",
            "die",
            "meisten",
            "Pferdestärken",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "query": "SELECT T2.marke_id , T2.marke FROM autos_daten AS T1 JOIN autonamen AS T2 ON T1.id = T2.marke_id WHERE T1.ps > (SELECT min(ps) FROM autos_daten) AND T1.zylinder <= 3;",
        "query_toks": [
            "SELECT",
            "T2.marke_id",
            ",",
            "T2.marke",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T1.ps",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "ps",
            ")",
            "FROM",
            "autos_daten",
            ")",
            "AND",
            "T1.zylinder",
            "<",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.marke_id",
            ",",
            "T2.marke",
            "FROM",
            "autos_daten",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.marke_id",
            "WHERE",
            "T1.ps",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "ps",
            ")",
            "FROM",
            "autos_daten",
            ")",
            "AND",
            "T1.zylinder",
            "<",
            "=",
            "value",
            ";"
        ],
        "question": "Welche der Autos mit mehr als der niedrigsten PS-Leistung haben nicht mehr als 3 Zylinder? Nenne die Automarke und den Markennamen.",
        "question_toks": [
            "Welche",
            "der",
            "Autos",
            "mit",
            "mehr",
            "als",
            "der",
            "niedrigsten",
            "PS-Leistung",
            "haben",
            "nicht",
            "mehr",
            "als",
            "3",
            "Zylinder",
            "?",
            "Nenne",
            "die",
            "Automarke",
            "und",
            "den",
            "Markennamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ],
                "and",
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
        "query": "select t2.marke_id , t2.marke from autos_daten as t1 join autonamen as t2 on t1.id = t2.marke_id where t1.ps > (select min(ps) from autos_daten) and t1.zylinder < 4;",
        "query_toks": [
            "select",
            "t2.marke_id",
            ",",
            "t2.marke",
            "from",
            "autos_daten",
            "as",
            "t1",
            "join",
            "autonamen",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.marke_id",
            "where",
            "t1.ps",
            ">",
            "(",
            "select",
            "min",
            "(",
            "ps",
            ")",
            "from",
            "autos_daten",
            ")",
            "and",
            "t1.zylinder",
            "<",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2.marke_id",
            ",",
            "t2.marke",
            "from",
            "autos_daten",
            "as",
            "t1",
            "join",
            "autonamen",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.marke_id",
            "where",
            "t1.ps",
            ">",
            "(",
            "select",
            "min",
            "(",
            "ps",
            ")",
            "from",
            "autos_daten",
            ")",
            "and",
            "t1.zylinder",
            "<",
            "value",
            ";"
        ],
        "question": "Wie lauten die Marken und Namen der Autos, die nicht die Mindest-PS haben und die weniger als 4 Zylinder haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Marken",
            "und",
            "Namen",
            "der",
            "Autos",
            ",",
            "die",
            "nicht",
            "die",
            "Mindest-PS",
            "haben",
            "und",
            "die",
            "weniger",
            "als",
            "4",
            "Zylinder",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
        "query": "select max(mpg) from autos_daten where zylinder = 8 or jahr < 1980",
        "query_toks": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "8",
            "or",
            "jahr",
            "<",
            "1980"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "value",
            "or",
            "jahr",
            "<",
            "value"
        ],
        "question": "Wie hoch ist die maximale Kilometerleistung eines Autos mit 8 Zylindern, das vor 1980 hergestellt wurde?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "maximale",
            "Kilometerleistung",
            "eines",
            "Autos",
            "mit",
            "8",
            "Zylindern",
            ",",
            "das",
            "vor",
            "1980",
            "hergestellt",
            "wurde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
        "query": "select max(mpg) from autos_daten where zylinder = 8 or jahr < 1980",
        "query_toks": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "8",
            "or",
            "jahr",
            "<",
            "1980"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "autos_daten",
            "where",
            "zylinder",
            "=",
            "value",
            "or",
            "jahr",
            "<",
            "value"
        ],
        "question": "Wie hoch ist der maximale Benzinverbrauch der Autos, die 8 Zylinder hatten oder vor 1980 produziert wurden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "maximale",
            "Benzinverbrauch",
            "der",
            "Autos",
            ",",
            "die",
            "8",
            "Zylinder",
            "hatten",
            "oder",
            "vor",
            "1980",
            "produziert",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "query": "SELECT DISTINCT T1.modell FROM modellliste AS T1 JOIN autonamen AS T2 ON T1.modell = T2.modell JOIN autos_daten AS T3 ON T2.marke_id = T3.id JOIN autohersteller AS T4 ON T1.hersteller = T4.id WHERE T3.gewicht < 3500 AND T4.vollständiger_name != 'Ford Motor Company';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "JOIN",
            "autohersteller",
            "AS",
            "T4",
            "ON",
            "T1.hersteller",
            "=",
            "T4.id",
            "WHERE",
            "T3.gewicht",
            "<",
            "3500",
            "AND",
            "T4.vollständiger_name",
            "!",
            "=",
            "'Ford",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "JOIN",
            "autohersteller",
            "AS",
            "T4",
            "ON",
            "T1.hersteller",
            "=",
            "T4.id",
            "WHERE",
            "T3.gewicht",
            "<",
            "value",
            "AND",
            "T4.vollständiger_name",
            "!",
            "=",
            "value",
            ";"
        ],
        "question": "Welche Modelle sind leichter als 3500, werden aber nicht von der \"\"Ford Motor Company\"\" gebaut?",
        "question_toks": [
            "Welche",
            "Modelle",
            "sind",
            "leichter",
            "als",
            "3500",
            ",",
            "werden",
            "aber",
            "nicht",
            "von",
            "der",
            "``",
            "''",
            "Ford",
            "Motor",
            "Company",
            "''",
            "''",
            "gebaut",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Ford Motor Company\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "query": "SELECT DISTINCT T1.modell FROM modellliste AS T1 JOIN autonamen AS T2 ON T1.modell = T2.modell JOIN autos_daten AS T3 ON T2.marke_id = T3.id JOIN autohersteller AS T4 ON T1.hersteller = T4.id WHERE T3.gewicht < 3500 AND T4.vollständiger_name != 'Ford Motor Company';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "JOIN",
            "autohersteller",
            "AS",
            "T4",
            "ON",
            "T1.hersteller",
            "=",
            "T4.id",
            "WHERE",
            "T3.gewicht",
            "<",
            "3500",
            "AND",
            "T4.vollständiger_name",
            "!",
            "=",
            "'Ford",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.modell",
            "FROM",
            "modellliste",
            "AS",
            "T1",
            "JOIN",
            "autonamen",
            "AS",
            "T2",
            "ON",
            "T1.modell",
            "=",
            "T2.modell",
            "JOIN",
            "autos_daten",
            "AS",
            "T3",
            "ON",
            "T2.marke_id",
            "=",
            "T3.id",
            "JOIN",
            "autohersteller",
            "AS",
            "T4",
            "ON",
            "T1.hersteller",
            "=",
            "T4.id",
            "WHERE",
            "T3.gewicht",
            "<",
            "value",
            "AND",
            "T4.vollständiger_name",
            "!",
            "=",
            "value",
            ";"
        ],
        "question": "Welche verschiedenen Modelle, die leichter sind als der 3500, wurden nicht von der \"Ford Motor Company\" gebaut?",
        "question_toks": [
            "Welche",
            "verschiedenen",
            "Modelle",
            ",",
            "die",
            "leichter",
            "sind",
            "als",
            "der",
            "3500",
            ",",
            "wurden",
            "nicht",
            "von",
            "der",
            "``",
            "Ford",
            "Motor",
            "Company",
            "''",
            "gebaut",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Ford Motor Company\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the name of the countries where there is not a single car maker?",
        "query": "SELECT landesname FROM länder EXCEPT SELECT T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land;",
        "query_toks": [
            "SELECT",
            "landesname",
            "FROM",
            "länder",
            "EXCEPT",
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            ";"
        ],
        "query_toks_no_value": "SELECT landesname FROM länder EXCEPT SELECT T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land;",
        "question": "Wie heißen die Länder, in denen es keinen einzigen Autohersteller gibt?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Länder",
            ",",
            "in",
            "denen",
            "es",
            "keinen",
            "einzigen",
            "Autohersteller",
            "gibt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the names of the countries with no car makers?",
        "query": "SELECT landesname FROM länder EXCEPT SELECT T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land;",
        "query_toks": [
            "SELECT",
            "landesname",
            "FROM",
            "länder",
            "EXCEPT",
            "SELECT",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            ";"
        ],
        "query_toks_no_value": "SELECT landesname FROM länder EXCEPT SELECT T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land;",
        "question": "Wie lauten die Namen der Länder, in denen es keine Autohersteller gibt?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Länder",
            ",",
            "in",
            "denen",
            "es",
            "keine",
            "Autohersteller",
            "gibt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "car_1",
        "match": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
        "query": "select t1.id , t1.hersteller from autohersteller as t1 join modellliste as t2 on t1.id = t2.hersteller group by t1.id having count(*) >= 2 intersect select t1.id , t1.hersteller from autohersteller as t1 join modellliste as t2 on t1.id = t2.hersteller join autonamen as t3 on t2.modell = t3.modell group by t1.id having count(*) > 3;",
        "query_toks": [
            "select",
            "t1.id",
            ",",
            "t1.hersteller",
            "from",
            "autohersteller",
            "as",
            "t1",
            "join",
            "modellliste",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.hersteller",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2",
            "intersect",
            "select",
            "t1.id",
            ",",
            "t1.hersteller",
            "from",
            "autohersteller",
            "as",
            "t1",
            "join",
            "modellliste",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.hersteller",
            "join",
            "autonamen",
            "as",
            "t3",
            "on",
            "t2.modell",
            "=",
            "t3.modell",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1.id",
            ",",
            "t1.hersteller",
            "from",
            "autohersteller",
            "as",
            "t1",
            "join",
            "modellliste",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.hersteller",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            "intersect",
            "select",
            "t1.id",
            ",",
            "t1.hersteller",
            "from",
            "autohersteller",
            "as",
            "t1",
            "join",
            "modellliste",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.hersteller",
            "join",
            "autonamen",
            "as",
            "t3",
            "on",
            "t2.modell",
            "=",
            "t3.modell",
            "group",
            "by",
            "t1.id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            ";"
        ],
        "question": "Welche sind die Autohersteller, die mindestens 2 Modelle und mehr als 3 Autohersteller produzieren? Nenne die ID und den Hersteller.",
        "question_toks": [
            "Welche",
            "sind",
            "die",
            "Autohersteller",
            ",",
            "die",
            "mindestens",
            "2",
            "Modelle",
            "und",
            "mehr",
            "als",
            "3",
            "Autohersteller",
            "produzieren",
            "?",
            "Nenne",
            "die",
            "ID",
            "und",
            "den",
            "Hersteller",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        6,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "query": "SELECT T1.id , T1.hersteller FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller GROUP BY T1.id HAVING count(*) >= 2 INTERSECT SELECT T1.id , T1.hersteller FROM autohersteller AS T1 JOIN modellliste AS T2 ON T1.id = T2.hersteller JOIN autonamen AS T3 ON T2.modell = T3.modell GROUP BY T1.id HAVING count(*) > 3;",
        "query_toks": [
            "SELECT",
            "T1.id",
            ",",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2",
            "INTERSECT",
            "SELECT",
            "T1.id",
            ",",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.id",
            ",",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.id",
            ",",
            "T1.hersteller",
            "FROM",
            "autohersteller",
            "AS",
            "T1",
            "JOIN",
            "modellliste",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.hersteller",
            "JOIN",
            "autonamen",
            "AS",
            "T3",
            "ON",
            "T2.modell",
            "=",
            "T3.modell",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            ";"
        ],
        "question": "Wie lauten die Kennungen und Hersteller aller Autohersteller, die mindestens 2 Modelle und mehr als 3 Autos herstellen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Kennungen",
            "und",
            "Hersteller",
            "aller",
            "Autohersteller",
            ",",
            "die",
            "mindestens",
            "2",
            "Modelle",
            "und",
            "mehr",
            "als",
            "3",
            "Autos",
            "herstellen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        6,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "query": "SELECT T1.land_id , T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land GROUP BY T1.land_id HAVING count(*) > 3 UNION SELECT T1.land_id , T1.landesname FROM länder AS T1 JOIN autohersteller AS T2 ON T1.land_id = T2.land JOIN modellliste AS T3 ON T2.id = T3.hersteller WHERE T3.modell = 'fiat';",
        "query_toks": [
            "SELECT",
            "T1.land_id",
            ",",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            "UNION",
            "SELECT",
            "T1.land_id",
            ",",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "JOIN",
            "modellliste",
            "AS",
            "T3",
            "ON",
            "T2.id",
            "=",
            "T3.hersteller",
            "WHERE",
            "T3.modell",
            "=",
            "'fiat",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.land_id",
            ",",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "GROUP",
            "BY",
            "T1.land_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            "UNION",
            "SELECT",
            "T1.land_id",
            ",",
            "T1.landesname",
            "FROM",
            "länder",
            "AS",
            "T1",
            "JOIN",
            "autohersteller",
            "AS",
            "T2",
            "ON",
            "T1.land_id",
            "=",
            "T2.land",
            "JOIN",
            "modellliste",
            "AS",
            "T3",
            "ON",
            "T2.id",
            "=",
            "T3.hersteller",
            "WHERE",
            "T3.modell",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die Namen der Länder, die mehr als 3 Autohersteller haben oder das Modell \"\"fiat\"\" produzieren?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Länder",
            ",",
            "die",
            "mehr",
            "als",
            "3",
            "Autohersteller",
            "haben",
            "oder",
            "das",
            "Modell",
            "``",
            "''",
            "fiat",
            "''",
            "''",
            "produzieren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"fiat\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "match": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
        "query": "select t1.land_id , t1.landesname from länder as t1 join autohersteller as t2 on t1.land_id = t2.land group by t1.land_id having count(*) > 3 union select t1.land_id , t1.landesname from länder as t1 join autohersteller as t2 on t1.land_id = t2.land join modellliste as t3 on t2.id = t3.hersteller where t3.modell = 'fiat';",
        "query_toks": [
            "select",
            "t1.land_id",
            ",",
            "t1.landesname",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            "union",
            "select",
            "t1.land_id",
            ",",
            "t1.landesname",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "join",
            "modellliste",
            "as",
            "t3",
            "on",
            "t2.id",
            "=",
            "t3.hersteller",
            "where",
            "t3.modell",
            "=",
            "'fiat",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1.land_id",
            ",",
            "t1.landesname",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "group",
            "by",
            "t1.land_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            "union",
            "select",
            "t1.land_id",
            ",",
            "t1.landesname",
            "from",
            "länder",
            "as",
            "t1",
            "join",
            "autohersteller",
            "as",
            "t2",
            "on",
            "t1.land_id",
            "=",
            "t2.land",
            "join",
            "modellliste",
            "as",
            "t3",
            "on",
            "t2.id",
            "=",
            "t3.hersteller",
            "where",
            "t3.modell",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die IDs und Namen aller Länder, die entweder mehr als 3 Autohersteller haben oder \"fiat\" produzieren?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "und",
            "Namen",
            "aller",
            "Länder",
            ",",
            "die",
            "entweder",
            "mehr",
            "als",
            "3",
            "Autohersteller",
            "haben",
            "oder",
            "``",
            "fiat",
            "''",
            "produzieren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"fiat\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which country does Airline \"JetBlue Airways\" belong to?",
        "query": "SELECT land FROM fluggesellschaften WHERE name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "land",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Zu welchem Land gehört die Fluggesellschaft \"\"JetBlue Airways\"\"?",
        "question_toks": [
            "Zu",
            "welchem",
            "Land",
            "gehört",
            "die",
            "Fluggesellschaft",
            "``",
            "''",
            "JetBlue",
            "Airways",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What country is Jetblue Airways affiliated with?",
        "query": "SELECT land FROM fluggesellschaften WHERE name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "land",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Mit welchem Land ist Jetblue Airways verbunden?",
        "question_toks": [
            "Mit",
            "welchem",
            "Land",
            "ist",
            "Jetblue",
            "Airways",
            "verbunden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "query": "SELECT abkürzung FROM fluggesellschaften WHERE name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Wie lautet die Abkürzung für die Fluggesellschaft \"\"JetBlue Airways\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Abkürzung",
            "für",
            "die",
            "Fluggesellschaft",
            "``",
            "''",
            "JetBlue",
            "Airways",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which abbreviation corresponds to Jetblue Airways?",
        "query": "SELECT abkürzung FROM fluggesellschaften WHERE name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Welche Abkürzung steht für Jetblue Airways?",
        "question_toks": [
            "Welche",
            "Abkürzung",
            "steht",
            "für",
            "Jetblue",
            "Airways",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "List all airline names and their abbreviations in \"USA\".",
        "query": "SELECT name_der_fluggesellschaft , abkürzung FROM fluggesellschaften WHERE land = \"USA\"",
        "query_toks": [
            "SELECT",
            "name_der_fluggesellschaft",
            ",",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_der_fluggesellschaft",
            ",",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Liste alle Namen der Fluggesellschaften und ihre Abkürzungen in \"\"USA\"\" auf.",
        "question_toks": [
            "Liste",
            "alle",
            "Namen",
            "der",
            "Fluggesellschaften",
            "und",
            "ihre",
            "Abkürzungen",
            "in",
            "``",
            "''",
            "USA",
            "''",
            "''",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are the airline names and abbreviations for airlines in the USA?",
        "query": "SELECT name_der_fluggesellschaft , abkürzung FROM fluggesellschaften WHERE land = \"USA\"",
        "query_toks": [
            "SELECT",
            "name_der_fluggesellschaft",
            ",",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_der_fluggesellschaft",
            ",",
            "abkürzung",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Wie heißen die Fluggesellschaften und welche Abkürzungen gibt es für Fluggesellschaften in den \"USA\"?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Fluggesellschaften",
            "und",
            "welche",
            "Abkürzungen",
            "gibt",
            "es",
            "für",
            "Fluggesellschaften",
            "in",
            "den",
            "``",
            "USA",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "List the airport code and name in the city of Anthony.",
        "query": "SELECT flughafen_code , flughafen_name FROM flughäfen WHERE stadt = \"Anthony\"",
        "query_toks": [
            "SELECT",
            "flughafen_code",
            ",",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "``",
            "Anthony",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_code",
            ",",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Gib den Flughafencode und -namen in der Stadt \"Anthony\" an.",
        "question_toks": [
            "Gib",
            "den",
            "Flughafencode",
            "und",
            "-namen",
            "in",
            "der",
            "Stadt",
            "``",
            "Anthony",
            "''",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Anthony\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the airport code and airport name corresonding to the city Anthony.",
        "query": "SELECT flughafen_code , flughafen_name FROM flughäfen WHERE stadt = \"Anthony\"",
        "query_toks": [
            "SELECT",
            "flughafen_code",
            ",",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "``",
            "Anthony",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_code",
            ",",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Gib den Flughafencode und den Namen des Flughafens an, der der Stadt \"Anthony\" entspricht.",
        "question_toks": [
            "Gib",
            "den",
            "Flughafencode",
            "und",
            "den",
            "Namen",
            "des",
            "Flughafens",
            "an",
            ",",
            "der",
            "der",
            "Stadt",
            "``",
            "Anthony",
            "''",
            "entspricht",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Anthony\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many airlines do we have?",
        "query": "SELECT count(*) FROM fluggesellschaften",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften"
        ],
        "query_toks_no_value": "SELECT count(*) FROM fluggesellschaften",
        "question": "Wie viele Fluggesellschaften haben wir?",
        "question_toks": [
            "Wie",
            "viele",
            "Fluggesellschaften",
            "haben",
            "wir",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What is the total number of airlines?",
        "query": "SELECT count(*) FROM fluggesellschaften",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften"
        ],
        "query_toks_no_value": "SELECT count(*) FROM fluggesellschaften",
        "question": "Wie hoch ist die Gesamtzahl der Fluggesellschaften?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtzahl",
            "der",
            "Fluggesellschaften",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many airports do we have?",
        "query": "SELECT count(*) FROM flughäfen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flughäfen"
        ],
        "query_toks_no_value": "SELECT count(*) FROM flughäfen",
        "question": "Wie viele Flughäfen gibt es bei uns?",
        "question_toks": [
            "Wie",
            "viele",
            "Flughäfen",
            "gibt",
            "es",
            "bei",
            "uns",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of  airports.",
        "query": "SELECT count(*) FROM flughäfen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flughäfen"
        ],
        "query_toks_no_value": "SELECT count(*) FROM flughäfen",
        "question": "Gib die Anzahl der Flughäfen zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Flughäfen",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights do we have?",
        "query": "SELECT count(*) FROM flüge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge"
        ],
        "query_toks_no_value": "SELECT count(*) FROM flüge",
        "question": "Wie viele Flüge haben wir?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "haben",
            "wir",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of flights.",
        "query": "SELECT count(*) FROM flüge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge"
        ],
        "query_toks_no_value": "SELECT count(*) FROM flüge",
        "question": "Gib die Anzahl der Flüge zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airline has abbreviation 'UAL'?",
        "query": "SELECT name_der_fluggesellschaft FROM fluggesellschaften WHERE abkürzung = \"UAL\"",
        "query_toks": [
            "SELECT",
            "name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "abkürzung",
            "=",
            "``",
            "UAL",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "abkürzung",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaft hat die Abkürzung \"\"UAL\"\"?",
        "question_toks": [
            "Welche",
            "Fluggesellschaft",
            "hat",
            "die",
            "Abkürzung",
            "``",
            "''",
            "UAL",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"UAL\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the airline with abbreviation 'UAL'.",
        "query": "SELECT name_der_fluggesellschaft FROM fluggesellschaften WHERE abkürzung = \"UAL\"",
        "query_toks": [
            "SELECT",
            "name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "abkürzung",
            "=",
            "``",
            "UAL",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "abkürzung",
            "=",
            "value"
        ],
        "question": "Gib die Fluggesellschaft mit der Abkürzung \"\"UAL\"\" an.",
        "question_toks": [
            "Gib",
            "die",
            "Fluggesellschaft",
            "mit",
            "der",
            "Abkürzung",
            "``",
            "''",
            "UAL",
            "''",
            "''",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"UAL\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many airlines are from USA?",
        "query": "SELECT count(*) FROM fluggesellschaften WHERE land = \"USA\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Wie viele Fluggesellschaften sind aus den \"USA\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Fluggesellschaften",
            "sind",
            "aus",
            "den",
            "``",
            "USA",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of airlines in the USA.",
        "query": "SELECT count(*) FROM fluggesellschaften WHERE land = \"USA\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "WHERE",
            "land",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der Fluggesellschaften in den \"USA\" an.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Fluggesellschaften",
            "in",
            "den",
            "``",
            "USA",
            "''",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which city and country is the Alton airport at?",
        "query": "SELECT stadt , land FROM flughäfen WHERE flughafen_name = \"Alton\"",
        "query_toks": [
            "SELECT",
            "stadt",
            ",",
            "land",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_name",
            "=",
            "``",
            "Alton",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "stadt",
            ",",
            "land",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_name",
            "=",
            "value"
        ],
        "question": "In welcher Stadt und in welchem Land befindet sich der Flughafen \"Alton\"?",
        "question_toks": [
            "In",
            "welcher",
            "Stadt",
            "und",
            "in",
            "welchem",
            "Land",
            "befindet",
            "sich",
            "der",
            "Flughafen",
            "``",
            "Alton",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Alton\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the city and country for the Alton airport.",
        "query": "SELECT stadt , land FROM flughäfen WHERE flughafen_name = \"Alton\"",
        "query_toks": [
            "SELECT",
            "stadt",
            ",",
            "land",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_name",
            "=",
            "``",
            "Alton",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "stadt",
            ",",
            "land",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_name",
            "=",
            "value"
        ],
        "question": "Gib die Stadt und das Land an, in dem der Flughafen \"Alton\" liegt.",
        "question_toks": [
            "Gib",
            "die",
            "Stadt",
            "und",
            "das",
            "Land",
            "an",
            ",",
            "in",
            "dem",
            "der",
            "Flughafen",
            "``",
            "Alton",
            "''",
            "liegt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Alton\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What is the airport name for airport 'AKO'?",
        "query": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code = \"AKO\"",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "=",
            "``",
            "AKO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "=",
            "value"
        ],
        "question": "Wie lautet der Name des Flughafens \"\"AKO\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Flughafens",
            "``",
            "''",
            "AKO",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"AKO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the name of the airport with code 'AKO'.",
        "query": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code = \"AKO\"",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "=",
            "``",
            "AKO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "=",
            "value"
        ],
        "question": "Gib den Namen des Flughafens mit dem Code '\"AKO\"' zurück.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            "des",
            "Flughafens",
            "mit",
            "dem",
            "Code",
            "'",
            "''",
            "AKO",
            "''",
            "'",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"AKO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are airport names at City 'Aberdeen'?",
        "query": "SELECT flughafen_name FROM flughäfen WHERE stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Wie heißen die Flughäfen in der Stadt '\"Aberdeen\"'?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Flughäfen",
            "in",
            "der",
            "Stadt",
            "'",
            "''",
            "Aberdeen",
            "''",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are the names of airports in Aberdeen?",
        "query": "SELECT flughafen_name FROM flughäfen WHERE stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Flughäfen in \"Aberdeen\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Flughäfen",
            "in",
            "``",
            "Aberdeen",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights depart from 'APG'?",
        "query": "SELECT count(*) FROM flüge WHERE quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge gehen von \"\"APG\"\" aus?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "gehen",
            "von",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "aus",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Count the number of flights departing from 'APG'.",
        "query": "SELECT count(*) FROM flüge WHERE quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Flüge, die von \"\"APG\"\" abfliegen.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            ",",
            "die",
            "von",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "abfliegen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights have destination ATO?",
        "query": "SELECT count(*) FROM flüge WHERE zielflughafen = \"ATO\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "``",
            "ATO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge haben das Ziel \"ATO\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "haben",
            "das",
            "Ziel",
            "``",
            "ATO",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ATO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Count the number of flights into ATO.",
        "query": "SELECT count(*) FROM flüge WHERE zielflughafen = \"ATO\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "``",
            "ATO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Flüge nach \"ATO\".",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "nach",
            "``",
            "ATO",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ATO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights depart from City Aberdeen?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.quellflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge gehen von der Stadt \"Aberdeen\" aus?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "gehen",
            "von",
            "der",
            "Stadt",
            "``",
            "Aberdeen",
            "''",
            "aus",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of flights departing from Aberdeen.",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.quellflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der Flüge zurück, die von \"Aberdeen\" abfliegen.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "zurück",
            ",",
            "die",
            "von",
            "``",
            "Aberdeen",
            "''",
            "abfliegen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights arriving in Aberdeen city?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge kommen in der Stadt \"Aberdeen\" an?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "kommen",
            "in",
            "der",
            "Stadt",
            "``",
            "Aberdeen",
            "''",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of flights arriving in Aberdeen.",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der Flüge zurück, die in \"Aberdeen\" ankommen.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "zurück",
            ",",
            "die",
            "in",
            "``",
            "Aberdeen",
            "''",
            "ankommen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code JOIN flughäfen AS T3 ON T1.quellflughafen = T3.flughafen_code WHERE T2.stadt = \"Ashley\" AND T3.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "flughäfen",
            "AS",
            "T3",
            "ON",
            "T1.quellflughafen",
            "=",
            "T3.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Ashley",
            "''",
            "AND",
            "T3.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "flughäfen",
            "AS",
            "T3",
            "ON",
            "T1.quellflughafen",
            "=",
            "T3.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "AND",
            "T3.stadt",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge starten von der Stadt \"\"Aberdeen\"\" und haben als Ziel die Stadt \"\"Ashley\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "starten",
            "von",
            "der",
            "Stadt",
            "``",
            "''",
            "Aberdeen",
            "''",
            "''",
            "und",
            "haben",
            "als",
            "Ziel",
            "die",
            "Stadt",
            "``",
            "''",
            "Ashley",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Ashley\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights fly from Aberdeen to Ashley?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code JOIN flughäfen AS T3 ON T1.quellflughafen = T3.flughafen_code WHERE T2.stadt = \"Ashley\" AND T3.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "flughäfen",
            "AS",
            "T3",
            "ON",
            "T1.quellflughafen",
            "=",
            "T3.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Ashley",
            "''",
            "AND",
            "T3.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "flughäfen",
            "AS",
            "T3",
            "ON",
            "T1.quellflughafen",
            "=",
            "T3.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "AND",
            "T3.stadt",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge gehen von \"Aberdeen\" nach \"Ashley\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "gehen",
            "von",
            "``",
            "Aberdeen",
            "''",
            "nach",
            "``",
            "Ashley",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Ashley\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights does airline 'JetBlue Airways' have?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN fluggesellschaften AS T2 ON T1.fluggesellschaft = T2.fluggesellschaft_id WHERE T2.name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft",
            "=",
            "T2.fluggesellschaft_id",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft",
            "=",
            "T2.fluggesellschaft_id",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge hat die Fluggesellschaft \"\"JetBlue Airways\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "hat",
            "die",
            "Fluggesellschaft",
            "``",
            "''",
            "JetBlue",
            "Airways",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the number of Jetblue Airways flights.",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN fluggesellschaften AS T2 ON T1.fluggesellschaft = T2.fluggesellschaft_id WHERE T2.name_der_fluggesellschaft = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft",
            "=",
            "T2.fluggesellschaft_id",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft",
            "=",
            "T2.fluggesellschaft_id",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der Flüge von Jetblue Airways an.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "von",
            "Jetblue",
            "Airways",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "query": "SELECT count(*) FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T2.fluggesellschaft = T1.fluggesellschaft_id WHERE T1.name_der_fluggesellschaft = \"United Airlines\" AND T2.zielflughafen = \"ASY\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.zielflughafen",
            "=",
            "``",
            "ASY",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "value",
            "AND",
            "T2.zielflughafen",
            "=",
            "value"
        ],
        "question": "Wie viele \"United Airlines\"-Flüge gehen zum Flughafen \"\"ASY\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "``",
            "United",
            "Airlines",
            "''",
            "-Flüge",
            "gehen",
            "zum",
            "Flughafen",
            "``",
            "''",
            "ASY",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ASY\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Count the number of United Airlines flights arriving in ASY Airport.",
        "query": "SELECT count(*) FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T2.fluggesellschaft = T1.fluggesellschaft_id WHERE T1.name_der_fluggesellschaft = \"United Airlines\" AND T2.zielflughafen = \"ASY\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.zielflughafen",
            "=",
            "``",
            "ASY",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "value",
            "AND",
            "T2.zielflughafen",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Flüge von \"United Airlines\", die am Flughafen \"ASY\" ankommen.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            "von",
            "``",
            "United",
            "Airlines",
            "''",
            ",",
            "die",
            "am",
            "Flughafen",
            "``",
            "ASY",
            "''",
            "ankommen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ASY\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "query": "SELECT count(*) FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T2.fluggesellschaft = T1.fluggesellschaft_id WHERE T1.name_der_fluggesellschaft = \"United Airlines\" AND T2.quellflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.quellflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "value",
            "AND",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Wie viele \"United Airlines\"-Flüge starten vom Flughafen \"\"AHD\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "``",
            "United",
            "Airlines",
            "''",
            "-Flüge",
            "starten",
            "vom",
            "Flughafen",
            "``",
            "''",
            "AHD",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Return the number of United Airlines flights leaving from AHD Airport.",
        "query": "SELECT count(*) FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T2.fluggesellschaft = T1.fluggesellschaft_id WHERE T1.name_der_fluggesellschaft = \"United Airlines\" AND T2.quellflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.quellflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft",
            "=",
            "T1.fluggesellschaft_id",
            "WHERE",
            "T1.name_der_fluggesellschaft",
            "=",
            "value",
            "AND",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der \"United Airlines\" Flüge zurück, die vom Flughafen \"AHD\" abfliegen.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "``",
            "United",
            "Airlines",
            "''",
            "Flüge",
            "zurück",
            ",",
            "die",
            "vom",
            "Flughafen",
            "``",
            "AHD",
            "''",
            "abfliegen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many United Airlines flights go to City 'Aberdeen'?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code JOIN fluggesellschaften AS T3 ON T3.fluggesellschaft_id = T1.fluggesellschaft WHERE T2.stadt = \"Aberdeen\" AND T3.name_der_fluggesellschaft = \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T3",
            "ON",
            "T3.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''",
            "AND",
            "T3.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T3",
            "ON",
            "T3.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "AND",
            "T3.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Wie viele \"United Airlines\" gehen in die Stadt \"\"Aberdeen\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "``",
            "United",
            "Airlines",
            "''",
            "gehen",
            "in",
            "die",
            "Stadt",
            "``",
            "''",
            "Aberdeen",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code JOIN fluggesellschaften AS T3 ON T3.fluggesellschaft_id = T1.fluggesellschaft WHERE T2.stadt = \"Aberdeen\" AND T3.name_der_fluggesellschaft = \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T3",
            "ON",
            "T3.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''",
            "AND",
            "T3.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T3",
            "ON",
            "T3.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "AND",
            "T3.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der \"United Airlines\" Flüge, die in \"Aberdeen\" ankommen.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "``",
            "United",
            "Airlines",
            "''",
            "Flüge",
            ",",
            "die",
            "in",
            "``",
            "Aberdeen",
            "''",
            "ankommen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which city has most number of arriving flights?",
        "query": "SELECT T1.stadt FROM flughäfen AS T1 JOIN flüge AS T2 ON T1.flughafen_code = T2.zielflughafen GROUP BY T1.stadt ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.zielflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.zielflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Stadt hat die meisten ankommenden Flüge?",
        "question_toks": [
            "Welche",
            "Stadt",
            "hat",
            "die",
            "meisten",
            "ankommenden",
            "Flüge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which city has the most frequent destination airport?",
        "query": "SELECT T1.stadt FROM flughäfen AS T1 JOIN flüge AS T2 ON T1.flughafen_code = T2.zielflughafen GROUP BY T1.stadt ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.zielflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.zielflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Stadt hat den am meisten frequentierten Zielflughafen?",
        "question_toks": [
            "Welche",
            "Stadt",
            "hat",
            "den",
            "am",
            "meisten",
            "frequentierten",
            "Zielflughafen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which city has most number of departing flights?",
        "query": "SELECT T1.stadt FROM flughäfen AS T1 JOIN flüge AS T2 ON T1.flughafen_code = T2.quellflughafen GROUP BY T1.stadt ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.quellflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.quellflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Stadt hat die meisten Abflüge?",
        "question_toks": [
            "Welche",
            "Stadt",
            "hat",
            "die",
            "meisten",
            "Abflüge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which city is the most frequent source airport?",
        "query": "SELECT T1.stadt FROM flughäfen AS T1 JOIN flüge AS T2 ON T1.flughafen_code = T2.quellflughafen GROUP BY T1.stadt ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.quellflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.stadt",
            "FROM",
            "flughäfen",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.flughafen_code",
            "=",
            "T2.quellflughafen",
            "GROUP",
            "BY",
            "T1.stadt",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Stadt ist der häufigste Quellflughafen?",
        "question_toks": [
            "Welche",
            "Stadt",
            "ist",
            "der",
            "häufigste",
            "Quellflughafen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airline has most number of flights?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Fluggesellschaft bietet die meisten Flüge an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaft",
            "bietet",
            "die",
            "meisten",
            "Flüge",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What airline serves the most flights?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Fluggesellschaft bietet die meisten Flüge an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaft",
            "bietet",
            "die",
            "meisten",
            "Flüge",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "query": "SELECT T1.abkürzung , T1.land FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.abkürzung",
            ",",
            "T1.land",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.abkürzung",
            ",",
            "T1.land",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Abkürzung und das Land der Fluggesellschaft, die die wenigsten Flüge hat?",
        "question_toks": [
            "Finde",
            "die",
            "Abkürzung",
            "und",
            "das",
            "Land",
            "der",
            "Fluggesellschaft",
            ",",
            "die",
            "die",
            "wenigsten",
            "Flüge",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "query": "SELECT T1.abkürzung , T1.land FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.abkürzung",
            ",",
            "T1.land",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.abkürzung",
            ",",
            "T1.land",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Abkürzung für die Airline mit den wenigsten Flügen und in welchem Land liegt sie?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Abkürzung",
            "für",
            "die",
            "Airline",
            "mit",
            "den",
            "wenigsten",
            "Flügen",
            "und",
            "in",
            "welchem",
            "Land",
            "liegt",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are airlines that have some flight departing from airport 'AHD'?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften bieten Flüge ab dem Flughafen \"\"AHD\"\" an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "bieten",
            "Flüge",
            "ab",
            "dem",
            "Flughafen",
            "``",
            "''",
            "AHD",
            "''",
            "''",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have a flight with source airport AHD?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften haben einen Flug mit dem Quellflughafen \"AHD\"?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "haben",
            "einen",
            "Flug",
            "mit",
            "dem",
            "Quellflughafen",
            "``",
            "AHD",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are airlines that have flights arriving at airport 'AHD'?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.zielflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.zielflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.zielflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften haben Flüge, die am Flughafen \"\"AHD\"\" ankommen?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "haben",
            "Flüge",
            ",",
            "die",
            "am",
            "Flughafen",
            "``",
            "''",
            "AHD",
            "''",
            "''",
            "ankommen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have a flight with destination airport AHD?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.zielflughafen = \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.zielflughafen",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.zielflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften bieten einen Flug mit Zielflughafen \"AHD\" an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "bieten",
            "einen",
            "Flug",
            "mit",
            "Zielflughafen",
            "``",
            "AHD",
            "''",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"APG\" INTERSECT SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"CVO\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "APG",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "CVO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Finde alle Fluggesellschaften, die Flüge von den beiden Flughäfen \"\"APG\"\" und \"\"CVO\"\" anbieten.",
        "question_toks": [
            "Finde",
            "alle",
            "Fluggesellschaften",
            ",",
            "die",
            "Flüge",
            "von",
            "den",
            "beiden",
            "Flughäfen",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "und",
            "``",
            "''",
            "CVO",
            "''",
            "''",
            "anbieten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"CVO\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have departing flights from both APG and CVO airports?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"APG\" INTERSECT SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"CVO\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "APG",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "CVO",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften bieten Abflüge von den Flughäfen \"APG\" und \"CVO\" an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "bieten",
            "Abflüge",
            "von",
            "den",
            "Flughäfen",
            "``",
            "APG",
            "''",
            "und",
            "``",
            "CVO",
            "''",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"CVO\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"CVO\" EXCEPT SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "CVO",
            "''",
            "EXCEPT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Finde alle Fluggesellschaften, die Flüge vom Flughafen \"\"CVO\"\" anbieten, aber nicht von \"\"APG\"\".",
        "question_toks": [
            "Finde",
            "alle",
            "Fluggesellschaften",
            ",",
            "die",
            "Flüge",
            "vom",
            "Flughafen",
            "``",
            "''",
            "CVO",
            "''",
            "''",
            "anbieten",
            ",",
            "aber",
            "nicht",
            "von",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"CVO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"APG\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have departures from CVO but not from APG airports?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"CVO\" EXCEPT SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft WHERE T2.quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "CVO",
            "''",
            "EXCEPT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "WHERE",
            "T2.quellflughafen",
            "=",
            "value"
        ],
        "question": "Welche Fluggesellschaften bieten Abflüge von \"CVO\", aber nicht von den \"APG\" Flughäfen an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "bieten",
            "Abflüge",
            "von",
            "``",
            "CVO",
            "''",
            ",",
            "aber",
            "nicht",
            "von",
            "den",
            "``",
            "APG",
            "''",
            "Flughäfen",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"CVO\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"APG\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find all airlines that have at least 10 flights.",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft HAVING count(*) > 10",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde alle Fluggesellschaften, die mindestens 10 Flüge haben.",
        "question_toks": [
            "Finde",
            "alle",
            "Fluggesellschaften",
            ",",
            "die",
            "mindestens",
            "10",
            "Flüge",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have at least 10 flights?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft HAVING count(*) > 10",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Welche Fluggesellschaften bieten mindestens 10 Flüge an?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "bieten",
            "mindestens",
            "10",
            "Flüge",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find all airlines that have fewer than 200 flights.",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft HAVING count(*) < 200",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "200"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "question": "Finde alle Fluggesellschaften, die weniger als 200 Flüge haben.",
        "question_toks": [
            "Finde",
            "alle",
            "Fluggesellschaften",
            ",",
            "die",
            "weniger",
            "als",
            "200",
            "Flüge",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airlines have less than 200 flights?",
        "query": "SELECT T1.name_der_fluggesellschaft FROM fluggesellschaften AS T1 JOIN flüge AS T2 ON T1.fluggesellschaft_id = T2.fluggesellschaft GROUP BY T1.name_der_fluggesellschaft HAVING count(*) < 200",
        "query_toks": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "200"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name_der_fluggesellschaft",
            "FROM",
            "fluggesellschaften",
            "AS",
            "T1",
            "JOIN",
            "flüge",
            "AS",
            "T2",
            "ON",
            "T1.fluggesellschaft_id",
            "=",
            "T2.fluggesellschaft",
            "GROUP",
            "BY",
            "T1.name_der_fluggesellschaft",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "question": "Welche Fluggesellschaften haben weniger als 200 Flüge?",
        "question_toks": [
            "Welche",
            "Fluggesellschaften",
            "haben",
            "weniger",
            "als",
            "200",
            "Flüge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are flight numbers of Airline \"United Airlines\"?",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN fluggesellschaften AS T2 ON T2.fluggesellschaft_id = T1.fluggesellschaft WHERE T2.name_der_fluggesellschaft = \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Wie lauten die Flugnummern der Fluggesellschaft \"\"United Airlines\"\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Flugnummern",
            "der",
            "Fluggesellschaft",
            "``",
            "''",
            "United",
            "Airlines",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which flight numbers correspond to United Airlines flights?",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN fluggesellschaften AS T2 ON T2.fluggesellschaft_id = T1.fluggesellschaft WHERE T2.name_der_fluggesellschaft = \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "fluggesellschaften",
            "AS",
            "T2",
            "ON",
            "T2.fluggesellschaft_id",
            "=",
            "T1.fluggesellschaft",
            "WHERE",
            "T2.name_der_fluggesellschaft",
            "=",
            "value"
        ],
        "question": "Welche Flugnummern entsprechen den Flügen von \"United Airlines\"?",
        "question_toks": [
            "Welche",
            "Flugnummern",
            "entsprechen",
            "den",
            "Flügen",
            "von",
            "``",
            "United",
            "Airlines",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are flight numbers of flights departing from Airport \"APG\"?",
        "query": "SELECT flugnummer FROM flüge WHERE quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "value"
        ],
        "question": "Wie lauten die Flugnummern von Flügen, die vom Flughafen \"\"APG\"\" abfliegen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Flugnummern",
            "von",
            "Flügen",
            ",",
            "die",
            "vom",
            "Flughafen",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "abfliegen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the flight numbers of flights leaving from APG.",
        "query": "SELECT flugnummer FROM flüge WHERE quellflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "quellflughafen",
            "=",
            "value"
        ],
        "question": "Gib die Flugnummern der Flüge an, die von \"APG\" aus starten.",
        "question_toks": [
            "Gib",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            "an",
            ",",
            "die",
            "von",
            "``",
            "APG",
            "''",
            "aus",
            "starten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "query": "SELECT flugnummer FROM flüge WHERE zielflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "value"
        ],
        "question": "Wie lauten die Flugnummern der Flüge, die auf dem Flughafen \"\"APG\"\" ankommen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            ",",
            "die",
            "auf",
            "dem",
            "Flughafen",
            "``",
            "''",
            "APG",
            "''",
            "''",
            "ankommen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the flight numbers of flights landing at APG.",
        "query": "SELECT flugnummer FROM flüge WHERE zielflughafen = \"APG\"",
        "query_toks": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "flugnummer",
            "FROM",
            "flüge",
            "WHERE",
            "zielflughafen",
            "=",
            "value"
        ],
        "question": "Gib die Flugnummern der Flüge an, die auf der \"APG\" landen.",
        "question_toks": [
            "Gib",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            "an",
            ",",
            "die",
            "auf",
            "der",
            "``",
            "APG",
            "''",
            "landen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.quellflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Wie lauten die Flugnummern der Flüge, die von der Stadt \"\"Aberdeen\"\" abfliegen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            ",",
            "die",
            "von",
            "der",
            "Stadt",
            "``",
            "''",
            "Aberdeen",
            "''",
            "''",
            "abfliegen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the flight numbers of flights leaving from Aberdeen.",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.quellflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.quellflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Gib die Flugnummern der Flüge an, die von \"Aberdeen\" aus starten.",
        "question_toks": [
            "Gib",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            "an",
            ",",
            "die",
            "von",
            "``",
            "Aberdeen",
            "''",
            "aus",
            "starten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Wie lauten die Flugnummern der Flüge, die in der Stadt \"\"Aberdeen\"\" ankommen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            ",",
            "die",
            "in",
            "der",
            "Stadt",
            "``",
            "''",
            "Aberdeen",
            "''",
            "''",
            "ankommen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Give the flight numbers of flights arriving in Aberdeen.",
        "query": "SELECT T1.flugnummer FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.flugnummer",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Gib die Flugnummern der Flüge an, die in \"Aberdeen\" ankommen.",
        "question_toks": [
            "Gib",
            "die",
            "Flugnummern",
            "der",
            "Flüge",
            "an",
            ",",
            "die",
            "in",
            "``",
            "Aberdeen",
            "''",
            "ankommen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\" OR T2.stadt = \"Abilene\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''",
            "OR",
            "T2.stadt",
            "=",
            "``",
            "Abilene",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "OR",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Finde die Anzahl der Flüge, die in der Stadt \"Aberdeen\" oder \"Abilene\" landen.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Flüge",
            ",",
            "die",
            "in",
            "der",
            "Stadt",
            "``",
            "Aberdeen",
            "''",
            "oder",
            "``",
            "Abilene",
            "''",
            "landen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Abilene\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "How many flights land in Aberdeen or Abilene?",
        "query": "SELECT count(*) FROM flüge AS T1 JOIN flughäfen AS T2 ON T1.zielflughafen = T2.flughafen_code WHERE T2.stadt = \"Aberdeen\" OR T2.stadt = \"Abilene\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "``",
            "Aberdeen",
            "''",
            "OR",
            "T2.stadt",
            "=",
            "``",
            "Abilene",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "flüge",
            "AS",
            "T1",
            "JOIN",
            "flughäfen",
            "AS",
            "T2",
            "ON",
            "T1.zielflughafen",
            "=",
            "T2.flughafen_code",
            "WHERE",
            "T2.stadt",
            "=",
            "value",
            "OR",
            "T2.stadt",
            "=",
            "value"
        ],
        "question": "Wie viele Flüge landen in \"Aberdeen\" oder \"Abilene\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Flüge",
            "landen",
            "in",
            "``",
            "Aberdeen",
            "''",
            "oder",
            "``",
            "Abilene",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Abilene\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Find the name of airports which do not have any flight in and out.",
        "query": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code NOT IN (SELECT quellflughafen FROM flüge UNION SELECT zielflughafen FROM flüge)",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "quellflughafen",
            "FROM",
            "flüge",
            "UNION",
            "SELECT",
            "zielflughafen",
            "FROM",
            "flüge",
            ")"
        ],
        "query_toks_no_value": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code NOT IN (SELECT quellflughafen FROM flüge UNION SELECT zielflughafen FROM flüge)",
        "question": "Finde die Namen der Flughäfen, die keine An- und Abflüge haben.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Flughäfen",
            ",",
            "die",
            "keine",
            "An-",
            "und",
            "Abflüge",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": {
                            "from": {
                                "table_units": [
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ],
                                "conds": []
                            },
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                13,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "where": [],
                            "groupBy": [],
                            "having": [],
                            "orderBy": [],
                            "limit": null,
                            "intersect": null,
                            "union": null,
                            "except": null
                        },
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "match": "Which airports do not have departing or arriving flights?",
        "query": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code NOT IN (SELECT quellflughafen FROM flüge UNION SELECT zielflughafen FROM flüge)",
        "query_toks": [
            "SELECT",
            "flughafen_name",
            "FROM",
            "flughäfen",
            "WHERE",
            "flughafen_code",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "quellflughafen",
            "FROM",
            "flüge",
            "UNION",
            "SELECT",
            "zielflughafen",
            "FROM",
            "flüge",
            ")"
        ],
        "query_toks_no_value": "SELECT flughafen_name FROM flughäfen WHERE flughafen_code NOT IN (SELECT quellflughafen FROM flüge UNION SELECT zielflughafen FROM flüge)",
        "question": "An welchen Flughäfen gibt es keine abfliegenden oder ankommenden Flüge?",
        "question_toks": [
            "An",
            "welchen",
            "Flughäfen",
            "gibt",
            "es",
            "keine",
            "abfliegenden",
            "oder",
            "ankommenden",
            "Flüge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": {
                            "from": {
                                "table_units": [
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ],
                                "conds": []
                            },
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                13,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "where": [],
                            "groupBy": [],
                            "having": [],
                            "orderBy": [],
                            "limit": null,
                            "intersect": null,
                            "union": null,
                            "except": null
                        },
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "How many employees are there?",
        "query": "SELECT count(*) FROM mitarbeiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "mitarbeiter"
        ],
        "query_toks_no_value": "SELECT count(*) FROM mitarbeiter",
        "question": "Wie viele Mitarbeiter gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Mitarbeiter",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Count the number of employees",
        "query": "SELECT count(*) FROM mitarbeiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "mitarbeiter"
        ],
        "query_toks_no_value": "SELECT count(*) FROM mitarbeiter",
        "question": "Zähle die Anzahl der Mitarbeiter",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Mitarbeiter"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Sort employee names by their age in ascending order.",
        "query": "SELECT name FROM mitarbeiter ORDER BY alter",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "mitarbeiter",
            "ORDER",
            "BY",
            "alter"
        ],
        "query_toks_no_value": "SELECT name FROM mitarbeiter ORDER BY alter",
        "question": "Sortiere die Namen der Mitarbeiter nach ihrem Alter in aufsteigender Reihenfolge.",
        "question_toks": [
            "Sortiere",
            "die",
            "Namen",
            "der",
            "Mitarbeiter",
            "nach",
            "ihrem",
            "Alter",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "List the names of employees and sort in ascending order of age.",
        "query": "SELECT name FROM mitarbeiter ORDER BY alter",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "mitarbeiter",
            "ORDER",
            "BY",
            "alter"
        ],
        "query_toks_no_value": "SELECT name FROM mitarbeiter ORDER BY alter",
        "question": "Liste die Namen der Mitarbeiter auf und sortiere sie in aufsteigender Reihenfolge nach Alter.",
        "question_toks": [
            "Liste",
            "die",
            "Namen",
            "der",
            "Mitarbeiter",
            "auf",
            "und",
            "sortiere",
            "sie",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "nach",
            "Alter",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What is the number of employees from each city?",
        "query": "SELECT count(*) , stadt FROM mitarbeiter GROUP BY stadt",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "stadt",
            "FROM",
            "mitarbeiter",
            "GROUP",
            "BY",
            "stadt"
        ],
        "query_toks_no_value": "SELECT count(*) , stadt FROM mitarbeiter GROUP BY stadt",
        "question": "Wie hoch ist die Zahl der Beschäftigten in jeder Stadt?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Zahl",
            "der",
            "Beschäftigten",
            "in",
            "jeder",
            "Stadt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Count the number of employees for each city.",
        "query": "SELECT count(*) , stadt FROM mitarbeiter GROUP BY stadt",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "stadt",
            "FROM",
            "mitarbeiter",
            "GROUP",
            "BY",
            "stadt"
        ],
        "query_toks_no_value": "SELECT count(*) , stadt FROM mitarbeiter GROUP BY stadt",
        "question": "Zähle die Anzahl der Beschäftigten für jede Stadt.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Beschäftigten",
            "für",
            "jede",
            "Stadt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which cities do more than one employee under age 30 come from?",
        "query": "SELECT stadt FROM mitarbeiter WHERE alter < 30 GROUP BY stadt HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "stadt",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "alter",
            "<",
            "30",
            "GROUP",
            "BY",
            "stadt",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "stadt",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "alter",
            "<",
            "value",
            "GROUP",
            "BY",
            "stadt",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Aus welchen Städten kommen mehr als ein Arbeitnehmer unter 30 Jahren?",
        "question_toks": [
            "Aus",
            "welchen",
            "Städten",
            "kommen",
            "mehr",
            "als",
            "ein",
            "Arbeitnehmer",
            "unter",
            "30",
            "Jahren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the cities that have more than one employee under age 30.",
        "query": "SELECT stadt FROM mitarbeiter WHERE alter < 30 GROUP BY stadt HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "stadt",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "alter",
            "<",
            "30",
            "GROUP",
            "BY",
            "stadt",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "stadt",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "alter",
            "<",
            "value",
            "GROUP",
            "BY",
            "stadt",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde die Städte, die mehr als einen Arbeitnehmer unter 30 Jahren haben.",
        "question_toks": [
            "Finde",
            "die",
            "Städte",
            ",",
            "die",
            "mehr",
            "als",
            "einen",
            "Arbeitnehmer",
            "unter",
            "30",
            "Jahren",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the number of shops in each location.",
        "query": "SELECT count(*) , ort FROM shop GROUP BY ort",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "ort",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "ort"
        ],
        "query_toks_no_value": "SELECT count(*) , ort FROM shop GROUP BY ort",
        "question": "Finde die Anzahl der Geschäfte in jedem Ort.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Geschäfte",
            "in",
            "jedem",
            "Ort",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "How many shops are there in each location?",
        "query": "SELECT count(*) , ort FROM shop GROUP BY ort",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "ort",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "ort"
        ],
        "query_toks_no_value": "SELECT count(*) , ort FROM shop GROUP BY ort",
        "question": "Wie viele Läden gibt es an jedem Standort?",
        "question_toks": [
            "Wie",
            "viele",
            "Läden",
            "gibt",
            "es",
            "an",
            "jedem",
            "Standort",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the manager name and district of the shop whose number of products is the largest.",
        "query": "SELECT name_des_geschäftsführers , bezirk FROM shop ORDER BY anzahl_produkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name_des_geschäftsführers",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_des_geschäftsführers",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen des Geschäftsführers und den Bezirk des Ladens mit der größten Anzahl von Produkten.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "des",
            "Geschäftsführers",
            "und",
            "den",
            "Bezirk",
            "des",
            "Ladens",
            "mit",
            "der",
            "größten",
            "Anzahl",
            "von",
            "Produkten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What are the manager name and district of the shop that sells the largest number of products?",
        "query": "SELECT name_des_geschäftsführers , bezirk FROM shop ORDER BY anzahl_produkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name_des_geschäftsführers",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name_des_geschäftsführers",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißen der Manager und der Bezirk des Geschäfts, das die meisten Produkte verkauft?",
        "question_toks": [
            "Wie",
            "heißen",
            "der",
            "Manager",
            "und",
            "der",
            "Bezirk",
            "des",
            "Geschäfts",
            ",",
            "das",
            "die",
            "meisten",
            "Produkte",
            "verkauft",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "find the minimum and maximum number of products of all stores.",
        "query": "SELECT min(anzahl_produkte) , max(anzahl_produkte) FROM shop",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "anzahl_produkte",
            ")",
            ",",
            "max",
            "(",
            "anzahl_produkte",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": "SELECT min(anzahl_produkte) , max(anzahl_produkte) FROM shop",
        "question": "die minimale und maximale Anzahl von Produkten in allen Geschäften zu finden.",
        "question_toks": [
            "die",
            "minimale",
            "und",
            "maximale",
            "Anzahl",
            "von",
            "Produkten",
            "in",
            "allen",
            "Geschäften",
            "zu",
            "finden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What are the minimum and maximum number of products across all the shops?",
        "query": "SELECT min(anzahl_produkte) , max(anzahl_produkte) FROM shop",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "anzahl_produkte",
            ")",
            ",",
            "max",
            "(",
            "anzahl_produkte",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": "SELECT min(anzahl_produkte) , max(anzahl_produkte) FROM shop",
        "question": "Wie hoch ist die Mindest- und Höchstzahl der Produkte in allen Läden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Mindest-",
            "und",
            "Höchstzahl",
            "der",
            "Produkte",
            "in",
            "allen",
            "Läden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Return the name, location and district of all shops in descending order of number of products.",
        "query": "SELECT name , ort , bezirk FROM shop ORDER BY anzahl_produkte DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "ort",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name , ort , bezirk FROM shop ORDER BY anzahl_produkte DESC",
        "question": "Liefert den Namen, den Ort und den Bezirk aller Geschäfte in absteigender Reihenfolge der Anzahl der Produkte.",
        "question_toks": [
            "Liefert",
            "den",
            "Namen",
            ",",
            "den",
            "Ort",
            "und",
            "den",
            "Bezirk",
            "aller",
            "Geschäfte",
            "in",
            "absteigender",
            "Reihenfolge",
            "der",
            "Anzahl",
            "der",
            "Produkte",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "query": "SELECT name , ort , bezirk FROM shop ORDER BY anzahl_produkte DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "ort",
            ",",
            "bezirk",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "anzahl_produkte",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name , ort , bezirk FROM shop ORDER BY anzahl_produkte DESC",
        "question": "Sortiere alle Geschäfte nach der Anzahl der Produkte in absteigender Reihenfolge und gib den Namen, den Ort und den Bezirk jedes Geschäfts zurück.",
        "question_toks": [
            "Sortiere",
            "alle",
            "Geschäfte",
            "nach",
            "der",
            "Anzahl",
            "der",
            "Produkte",
            "in",
            "absteigender",
            "Reihenfolge",
            "und",
            "gib",
            "den",
            "Namen",
            ",",
            "den",
            "Ort",
            "und",
            "den",
            "Bezirk",
            "jedes",
            "Geschäfts",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the names of stores whose number products is more than the average number of products.",
        "query": "SELECT name FROM shop WHERE anzahl_produkte > (SELECT avg(anzahl_produkte) FROM shop)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "anzahl_produkte",
            ")",
            "FROM",
            "shop",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM shop WHERE anzahl_produkte > (SELECT avg(anzahl_produkte) FROM shop)",
        "question": "Finde die Namen der Geschäfte, deren Anzahl der Produkte größer ist als die durchschnittliche Anzahl der Produkte.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Geschäfte",
            ",",
            "deren",
            "Anzahl",
            "der",
            "Produkte",
            "größer",
            "ist",
            "als",
            "die",
            "durchschnittliche",
            "Anzahl",
            "der",
            "Produkte",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which shops' number products is above the average? Give me the shop names.",
        "query": "SELECT name FROM shop WHERE anzahl_produkte > (SELECT avg(anzahl_produkte) FROM shop)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "anzahl_produkte",
            ")",
            "FROM",
            "shop",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM shop WHERE anzahl_produkte > (SELECT avg(anzahl_produkte) FROM shop)",
        "question": "Bei welchen Geschäften liegt die Anzahl der Produkte über dem Durchschnitt? Gib mir die Namen der Läden.",
        "question_toks": [
            "Bei",
            "welchen",
            "Geschäften",
            "liegt",
            "die",
            "Anzahl",
            "der",
            "Produkte",
            "über",
            "dem",
            "Durchschnitt",
            "?",
            "Gib",
            "mir",
            "die",
            "Namen",
            "der",
            "Läden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "find the name of employee who was awarded the most times in the evaluation.",
        "query": "SELECT t1.name FROM mitarbeiter AS t1 JOIN auswertung AS t2 ON t1.mitarbeiter_id = t2.mitarbeiter_id GROUP BY t2.mitarbeiter_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "GROUP",
            "BY",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "GROUP",
            "BY",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen des Mitarbeiters, der in der Bewertung die meisten Auszeichnungen erhalten hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "des",
            "Mitarbeiters",
            ",",
            "der",
            "in",
            "der",
            "Bewertung",
            "die",
            "meisten",
            "Auszeichnungen",
            "erhalten",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which employee received the most awards in evaluations? Give me the employee name.",
        "query": "SELECT t1.name FROM mitarbeiter AS t1 JOIN auswertung AS t2 ON t1.mitarbeiter_id = t2.mitarbeiter_id GROUP BY t2.mitarbeiter_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "GROUP",
            "BY",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "GROUP",
            "BY",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Mitarbeiter hat die meisten Auszeichnungen in den Bewertungen erhalten? Gib mir den Namen des Mitarbeiters.",
        "question_toks": [
            "Welcher",
            "Mitarbeiter",
            "hat",
            "die",
            "meisten",
            "Auszeichnungen",
            "in",
            "den",
            "Bewertungen",
            "erhalten",
            "?",
            "Gib",
            "mir",
            "den",
            "Namen",
            "des",
            "Mitarbeiters",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the name of the employee who got the highest one time bonus.",
        "query": "SELECT t1.name FROM mitarbeiter AS t1 JOIN auswertung AS t2 ON t1.mitarbeiter_id = t2.mitarbeiter_id ORDER BY t2.bonus DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen des Mitarbeiters, der die höchste einmalige Prämie erhalten hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "des",
            "Mitarbeiters",
            ",",
            "der",
            "die",
            "höchste",
            "einmalige",
            "Prämie",
            "erhalten",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which employee received the biggest bonus? Give me the employee name.",
        "query": "SELECT t1.name FROM mitarbeiter AS t1 JOIN auswertung AS t2 ON t1.mitarbeiter_id = t2.mitarbeiter_id ORDER BY t2.bonus DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            "FROM",
            "mitarbeiter",
            "AS",
            "t1",
            "JOIN",
            "auswertung",
            "AS",
            "t2",
            "ON",
            "t1.mitarbeiter_id",
            "=",
            "t2.mitarbeiter_id",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Mitarbeiter hat den größten Bonus erhalten? Gib mir den Namen des Mitarbeiters.",
        "question_toks": [
            "Welcher",
            "Mitarbeiter",
            "hat",
            "den",
            "größten",
            "Bonus",
            "erhalten",
            "?",
            "Gib",
            "mir",
            "den",
            "Namen",
            "des",
            "Mitarbeiters",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the names of employees who never won any award in the evaluation.",
        "query": "SELECT name FROM mitarbeiter WHERE mitarbeiter_id NOT IN (SELECT mitarbeiter_id FROM auswertung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "mitarbeiter_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "mitarbeiter_id",
            "FROM",
            "auswertung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM mitarbeiter WHERE mitarbeiter_id NOT IN (SELECT mitarbeiter_id FROM auswertung)",
        "question": "Finde die Namen der Mitarbeiter, die in der Bewertung nie eine Auszeichnung erhalten haben.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Mitarbeiter",
            ",",
            "die",
            "in",
            "der",
            "Bewertung",
            "nie",
            "eine",
            "Auszeichnung",
            "erhalten",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What are the names of the employees who never received any evaluation?",
        "query": "SELECT name FROM mitarbeiter WHERE mitarbeiter_id NOT IN (SELECT mitarbeiter_id FROM auswertung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "mitarbeiter",
            "WHERE",
            "mitarbeiter_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "mitarbeiter_id",
            "FROM",
            "auswertung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM mitarbeiter WHERE mitarbeiter_id NOT IN (SELECT mitarbeiter_id FROM auswertung)",
        "question": "Wie lauten die Namen der Angestellten, die nie eine Beurteilung erhalten haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Angestellten",
            ",",
            "die",
            "nie",
            "eine",
            "Beurteilung",
            "erhalten",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What is the name of the shop that is hiring the largest number of employees?",
        "query": "SELECT t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Laden, der die meisten Mitarbeiter einstellt?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Laden",
            ",",
            "der",
            "die",
            "meisten",
            "Mitarbeiter",
            "einstellt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which shop has the most employees? Give me the shop name.",
        "query": "SELECT t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Laden hat die meisten Mitarbeiter? Gib mir den Namen des Ladens.",
        "question_toks": [
            "Welcher",
            "Laden",
            "hat",
            "die",
            "meisten",
            "Mitarbeiter",
            "?",
            "Gib",
            "mir",
            "den",
            "Namen",
            "des",
            "Ladens",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the name of the shops that do not hire any employee.",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM einstellung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "shop_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "shop_id",
            "FROM",
            "einstellung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM einstellung)",
        "question": "Finde die Namen der Geschäfte, die keine Mitarbeiter einstellen.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Geschäfte",
            ",",
            "die",
            "keine",
            "Mitarbeiter",
            "einstellen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which shops run with no employees? Find the shop names",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM einstellung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "shop_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "shop_id",
            "FROM",
            "einstellung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM einstellung)",
        "question": "Welche Läden arbeiten ohne Angestellte? Finde die Namen der Läden",
        "question_toks": [
            "Welche",
            "Läden",
            "arbeiten",
            "ohne",
            "Angestellte",
            "?",
            "Finde",
            "die",
            "Namen",
            "der",
            "Läden"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the number of employees hired in each shop; show the shop name as well.",
        "query": "SELECT count(*) , t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t2.name"
        ],
        "query_toks_no_value": "SELECT count(*) , t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",
        "question": "Finde die Anzahl der Mitarbeiter, die in jedem Geschäft eingestellt wurden; gib auch den Namen des Geschäfts an.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Mitarbeiter",
            ",",
            "die",
            "in",
            "jedem",
            "Geschäft",
            "eingestellt",
            "wurden",
            ";",
            "gib",
            "auch",
            "den",
            "Namen",
            "des",
            "Geschäfts",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "For each shop, return the number of employees working there and the name of the shop.",
        "query": "SELECT count(*) , t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.name",
            "FROM",
            "einstellung",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t2.name"
        ],
        "query_toks_no_value": "SELECT count(*) , t2.name FROM einstellung AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",
        "question": "Gib für jeden Laden die Anzahl der dort beschäftigten Mitarbeiter und den Namen des Ladens an.",
        "question_toks": [
            "Gib",
            "für",
            "jeden",
            "Laden",
            "die",
            "Anzahl",
            "der",
            "dort",
            "beschäftigten",
            "Mitarbeiter",
            "und",
            "den",
            "Namen",
            "des",
            "Ladens",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What is total bonus given in all evaluations?",
        "query": "SELECT sum(bonus) FROM auswertung",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bonus",
            ")",
            "FROM",
            "auswertung"
        ],
        "query_toks_no_value": "SELECT sum(bonus) FROM auswertung",
        "question": "Wie hoch ist der Gesamtbonus, der bei allen Bewertungen vergeben wird?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Gesamtbonus",
            ",",
            "der",
            "bei",
            "allen",
            "Bewertungen",
            "vergeben",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the total amount of bonus given in all the evaluations.",
        "query": "SELECT sum(bonus) FROM auswertung",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bonus",
            ")",
            "FROM",
            "auswertung"
        ],
        "query_toks_no_value": "SELECT sum(bonus) FROM auswertung",
        "question": "Finde den Gesamtbetrag der Prämie, die in allen Bewertungen vergeben wurde.",
        "question_toks": [
            "Finde",
            "den",
            "Gesamtbetrag",
            "der",
            "Prämie",
            ",",
            "die",
            "in",
            "allen",
            "Bewertungen",
            "vergeben",
            "wurde",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Give me all the information about hiring.",
        "query": "SELECT * FROM einstellung",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "einstellung"
        ],
        "query_toks_no_value": "SELECT * FROM einstellung",
        "question": "Gib mir alle Informationen über die Anstellung.",
        "question_toks": [
            "Gib",
            "mir",
            "alle",
            "Informationen",
            "über",
            "die",
            "Anstellung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "What is all the information about hiring?",
        "query": "SELECT * FROM einstellung",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "einstellung"
        ],
        "query_toks_no_value": "SELECT * FROM einstellung",
        "question": "Was sind all die Informationen über die Einstellung?",
        "question_toks": [
            "Was",
            "sind",
            "all",
            "die",
            "Informationen",
            "über",
            "die",
            "Einstellung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "query": "SELECT bezirk FROM shop WHERE anzahl_produkte < 3000 INTERSECT SELECT bezirk FROM shop WHERE anzahl_produkte > 10000",
        "query_toks": [
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            "<",
            "3000",
            "INTERSECT",
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "value"
        ],
        "question": "In welchem Bezirk gibt es sowohl Geschäfte mit weniger als 3000 Produkten als auch Geschäfte mit mehr als 10000 Produkten?",
        "question_toks": [
            "In",
            "welchem",
            "Bezirk",
            "gibt",
            "es",
            "sowohl",
            "Geschäfte",
            "mit",
            "weniger",
            "als",
            "3000",
            "Produkten",
            "als",
            "auch",
            "Geschäfte",
            "mit",
            "mehr",
            "als",
            "10000",
            "Produkten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        10000.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "query": "SELECT bezirk FROM shop WHERE anzahl_produkte < 3000 INTERSECT SELECT bezirk FROM shop WHERE anzahl_produkte > 10000",
        "query_toks": [
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            "<",
            "3000",
            "INTERSECT",
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "bezirk",
            "FROM",
            "shop",
            "WHERE",
            "anzahl_produkte",
            ">",
            "value"
        ],
        "question": "Finde die Bezirke, in denen es sowohl Geschäfte gibt, die weniger als 3000 Produkte verkaufen, als auch Geschäfte, die mehr als 10000 Produkte verkaufen.",
        "question_toks": [
            "Finde",
            "die",
            "Bezirke",
            ",",
            "in",
            "denen",
            "es",
            "sowohl",
            "Geschäfte",
            "gibt",
            ",",
            "die",
            "weniger",
            "als",
            "3000",
            "Produkte",
            "verkaufen",
            ",",
            "als",
            "auch",
            "Geschäfte",
            ",",
            "die",
            "mehr",
            "als",
            "10000",
            "Produkte",
            "verkaufen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        10000.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "How many different store locations are there?",
        "query": "SELECT count(DISTINCT ort) FROM shop",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "ort",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT ort) FROM shop",
        "question": "Wie viele verschiedene Filialen gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Filialen",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                7,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "match": "Count the number of distinct store locations.",
        "query": "SELECT count(DISTINCT ort) FROM shop",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "ort",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT ort) FROM shop",
        "question": "Zähle die Anzahl der verschiedenen Filialen.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Filialen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                7,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many documents do we have?",
        "query": "SELECT count(*) FROM dokumente",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT count(*) FROM dokumente",
        "question": "Wie viele Dokumente haben wir?",
        "question_toks": [
            "Wie",
            "viele",
            "Dokumente",
            "haben",
            "wir",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of documents.",
        "query": "SELECT count(*) FROM dokumente",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT count(*) FROM dokumente",
        "question": "Zähle die Anzahl der Dokumente.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Dokumente",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "List document IDs, document names, and document descriptions for all documents.",
        "query": "SELECT dokument_id , dokumentenname , dokumentenbeschreibung FROM dokumente",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "dokumentenname",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT dokument_id , dokumentenname , dokumentenbeschreibung FROM dokumente",
        "question": "Liste die Dokument-IDs, Dokumentnamen und Dokumentbeschreibungen für alle Dokumente auf.",
        "question_toks": [
            "Liste",
            "die",
            "Dokument-IDs",
            ",",
            "Dokumentnamen",
            "und",
            "Dokumentbeschreibungen",
            "für",
            "alle",
            "Dokumente",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids, names, and descriptions for all documents?",
        "query": "SELECT dokument_id , dokumentenname , dokumentenbeschreibung FROM dokumente",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "dokumentenname",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT dokument_id , dokumentenname , dokumentenbeschreibung FROM dokumente",
        "question": "Wie lauten die IDs, Namen und Beschreibungen für alle Dokumente?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            ",",
            "Namen",
            "und",
            "Beschreibungen",
            "für",
            "alle",
            "Dokumente",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the document name and template id for document with description with the letter 'w' in it?",
        "query": "SELECT dokumentenname , vorlage_id FROM dokumente WHERE dokumentenbeschreibung LIKE \"%w%\"",
        "query_toks": [
            "SELECT",
            "dokumentenname",
            ",",
            "vorlage_id",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenbeschreibung",
            "LIKE",
            "``",
            "%",
            "w",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokumentenname",
            ",",
            "vorlage_id",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenbeschreibung",
            "LIKE",
            "value"
        ],
        "question": "Wie lautet der Dokumentenname und die Vorlagen-ID für ein Dokument mit einer Beschreibung, die den Buchstaben \"w\" enthält?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Dokumentenname",
            "und",
            "die",
            "Vorlagen-ID",
            "für",
            "ein",
            "Dokument",
            "mit",
            "einer",
            "Beschreibung",
            ",",
            "die",
            "den",
            "Buchstaben",
            "``",
            "w",
            "''",
            "enthält",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"%w%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the names and template ids for documents that contain the letter w in their description.",
        "query": "SELECT dokumentenname , vorlage_id FROM dokumente WHERE dokumentenbeschreibung LIKE \"%w%\"",
        "query_toks": [
            "SELECT",
            "dokumentenname",
            ",",
            "vorlage_id",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenbeschreibung",
            "LIKE",
            "``",
            "%",
            "w",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokumentenname",
            ",",
            "vorlage_id",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenbeschreibung",
            "LIKE",
            "value"
        ],
        "question": "Gibt die Namen und Vorlagen-IDs für Dokumente zurück, die den Buchstaben w in ihrer Beschreibung enthalten.",
        "question_toks": [
            "Gibt",
            "die",
            "Namen",
            "und",
            "Vorlagen-IDs",
            "für",
            "Dokumente",
            "zurück",
            ",",
            "die",
            "den",
            "Buchstaben",
            "w",
            "in",
            "ihrer",
            "Beschreibung",
            "enthalten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"%w%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "query": "SELECT dokument_id , vorlage_id , dokumentenbeschreibung FROM dokumente WHERE dokumentenname = \"Robbin CV\"",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "vorlage_id",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenname",
            "=",
            "``",
            "Robbin",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            ",",
            "vorlage_id",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenname",
            "=",
            "value"
        ],
        "question": "Wie lauten die Dokument-ID, die Vorlagen-ID und die Beschreibung für das Dokument mit dem Namen \"\"Robbin CV\"\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Dokument-ID",
            ",",
            "die",
            "Vorlagen-ID",
            "und",
            "die",
            "Beschreibung",
            "für",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Robbin",
            "CV",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Robbin CV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "query": "SELECT dokument_id , vorlage_id , dokumentenbeschreibung FROM dokumente WHERE dokumentenname = \"Robbin CV\"",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "vorlage_id",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenname",
            "=",
            "``",
            "Robbin",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            ",",
            "vorlage_id",
            ",",
            "dokumentenbeschreibung",
            "FROM",
            "dokumente",
            "WHERE",
            "dokumentenname",
            "=",
            "value"
        ],
        "question": "Gib die Dokument-ID, die Vorlagen-ID und die Beschreibung für das Dokument mit dem Namen \"Robbin CV\" zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Dokument-ID",
            ",",
            "die",
            "Vorlagen-ID",
            "und",
            "die",
            "Beschreibung",
            "für",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "Robbin",
            "CV",
            "''",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Robbin CV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many different templates do all document use?",
        "query": "SELECT count(DISTINCT vorlage_id) FROM dokumente",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "vorlage_id",
            ")",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT vorlage_id) FROM dokumente",
        "question": "Wie viele verschiedene Vorlagen werden für alle Dokumente verwendet?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Vorlagen",
            "werden",
            "für",
            "alle",
            "Dokumente",
            "verwendet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of different templates used for documents.",
        "query": "SELECT count(DISTINCT vorlage_id) FROM dokumente",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "vorlage_id",
            ")",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT vorlage_id) FROM dokumente",
        "question": "Zähle die Anzahl der verschiedenen Vorlagen, die für Dokumente verwendet werden.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Vorlagen",
            ",",
            "die",
            "für",
            "Dokumente",
            "verwendet",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many documents are using the template with type code 'PPT'?",
        "query": "SELECT count(*) FROM dokumente AS T1 JOIN vorlagen AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T2.vorlagentyp_code = 'PPT'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.vorlagentyp_code",
            "=",
            "'PPT",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Wie viele Dokumente verwenden die Vorlage mit dem Typcode \"\"PPT\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Dokumente",
            "verwenden",
            "die",
            "Vorlage",
            "mit",
            "dem",
            "Typcode",
            "``",
            "''",
            "PPT",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of documents that use the PPT template type.",
        "query": "SELECT count(*) FROM dokumente AS T1 JOIN vorlagen AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T2.vorlagentyp_code = 'PPT'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.vorlagentyp_code",
            "=",
            "'PPT",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Dokumente, die den Vorlagentyp \"PPT\" verwenden.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Dokumente",
            ",",
            "die",
            "den",
            "Vorlagentyp",
            "``",
            "PPT",
            "''",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template ids and number of documents using each template.",
        "query": "SELECT vorlage_id , count(*) FROM dokumente GROUP BY vorlage_id",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id"
        ],
        "query_toks_no_value": "SELECT vorlage_id , count(*) FROM dokumente GROUP BY vorlage_id",
        "question": "Zeige alle Vorlagennummern und die Anzahl der Dokumente, die jede Vorlage verwenden.",
        "question_toks": [
            "Zeige",
            "alle",
            "Vorlagennummern",
            "und",
            "die",
            "Anzahl",
            "der",
            "Dokumente",
            ",",
            "die",
            "jede",
            "Vorlage",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are all different template ids used for documents, and how many times were each of them used?",
        "query": "SELECT vorlage_id , count(*) FROM dokumente GROUP BY vorlage_id",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id"
        ],
        "query_toks_no_value": "SELECT vorlage_id , count(*) FROM dokumente GROUP BY vorlage_id",
        "question": "Wie lauten die verschiedenen Vorlagen-IDs, die für Dokumente verwendet werden, und wie oft wurde jede von ihnen verwendet?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "verschiedenen",
            "Vorlagen-IDs",
            ",",
            "die",
            "für",
            "Dokumente",
            "verwendet",
            "werden",
            ",",
            "und",
            "wie",
            "oft",
            "wurde",
            "jede",
            "von",
            "ihnen",
            "verwendet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the id and type code for the template used by the most documents?",
        "query": "SELECT T1.vorlage_id , T2.vorlagentyp_code FROM dokumente AS T1 JOIN vorlagen AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlage_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorlage_id",
            ",",
            "T2.vorlagentyp_code",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlage_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlage_id",
            ",",
            "T2.vorlagentyp_code",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlage_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die ID und der Typcode für die Vorlage, die von den meisten Dokumenten verwendet wird?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "ID",
            "und",
            "der",
            "Typcode",
            "für",
            "die",
            "Vorlage",
            ",",
            "die",
            "von",
            "den",
            "meisten",
            "Dokumenten",
            "verwendet",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the id and type code of the template that is used for the greatest number of documents.",
        "query": "SELECT T1.vorlage_id , T2.vorlagentyp_code FROM dokumente AS T1 JOIN vorlagen AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlage_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorlage_id",
            ",",
            "T2.vorlagentyp_code",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlage_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlage_id",
            ",",
            "T2.vorlagentyp_code",
            "FROM",
            "dokumente",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlage_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gibt die ID und den Typcode der Vorlage zurück, die für die meisten Dokumente verwendet wird.",
        "question_toks": [
            "Gibt",
            "die",
            "ID",
            "und",
            "den",
            "Typcode",
            "der",
            "Vorlage",
            "zurück",
            ",",
            "die",
            "für",
            "die",
            "meisten",
            "Dokumente",
            "verwendet",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show ids for all templates that are used by more than one document.",
        "query": "SELECT vorlage_id FROM dokumente GROUP BY vorlage_id HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Zeige die IDs für alle Vorlagen, die von mehr als einem Dokument verwendet werden.",
        "question_toks": [
            "Zeige",
            "die",
            "IDs",
            "für",
            "alle",
            "Vorlagen",
            ",",
            "die",
            "von",
            "mehr",
            "als",
            "einem",
            "Dokument",
            "verwendet",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the template ids of any templates used in more than a single document?",
        "query": "SELECT vorlage_id FROM dokumente GROUP BY vorlage_id HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente",
            "GROUP",
            "BY",
            "vorlage_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie lauten die Vorlagen-IDs von Vorlagen, die in mehr als einem Dokument verwendet werden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vorlagen-IDs",
            "von",
            "Vorlagen",
            ",",
            "die",
            "in",
            "mehr",
            "als",
            "einem",
            "Dokument",
            "verwendet",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show ids for all templates not used by any document.",
        "query": "SELECT vorlage_id FROM vorlagen EXCEPT SELECT vorlage_id FROM dokumente",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "EXCEPT",
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT vorlage_id FROM vorlagen EXCEPT SELECT vorlage_id FROM dokumente",
        "question": "Zeige die IDs für alle Vorlagen, die von keinem Dokument verwendet werden.",
        "question_toks": [
            "Zeige",
            "die",
            "IDs",
            "für",
            "alle",
            "Vorlagen",
            ",",
            "die",
            "von",
            "keinem",
            "Dokument",
            "verwendet",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids for templates that are not used in any documents?",
        "query": "SELECT vorlage_id FROM vorlagen EXCEPT SELECT vorlage_id FROM dokumente",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "EXCEPT",
            "SELECT",
            "vorlage_id",
            "FROM",
            "dokumente"
        ],
        "query_toks_no_value": "SELECT vorlage_id FROM vorlagen EXCEPT SELECT vorlage_id FROM dokumente",
        "question": "Wie lauten die IDs für Vorlagen, die in keinem Dokument verwendet werden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "für",
            "Vorlagen",
            ",",
            "die",
            "in",
            "keinem",
            "Dokument",
            "verwendet",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many templates do we have?",
        "query": "SELECT count(*) FROM vorlagen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT count(*) FROM vorlagen",
        "question": "Wie viele Vorlagen haben wir?",
        "question_toks": [
            "Wie",
            "viele",
            "Vorlagen",
            "haben",
            "wir",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of templates.",
        "query": "SELECT count(*) FROM vorlagen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT count(*) FROM vorlagen",
        "question": "Zähle die Anzahl der Vorlagen.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Vorlagen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show template ids, version numbers, and template type codes for all templates.",
        "query": "SELECT vorlage_id , versionsnummer , vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            ",",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT vorlage_id , versionsnummer , vorlagentyp_code FROM vorlagen",
        "question": "Zeigt Vorlagen-IDs, Versionsnummern und Vorlagentypcodes für alle Vorlagen an.",
        "question_toks": [
            "Zeigt",
            "Vorlagen-IDs",
            ",",
            "Versionsnummern",
            "und",
            "Vorlagentypcodes",
            "für",
            "alle",
            "Vorlagen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids, version numbers, and type codes for each template?",
        "query": "SELECT vorlage_id , versionsnummer , vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            ",",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT vorlage_id , versionsnummer , vorlagentyp_code FROM vorlagen",
        "question": "Wie lauten die IDs, Versionsnummern und Typencodes für jede Vorlage?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            ",",
            "Versionsnummern",
            "und",
            "Typencodes",
            "für",
            "jede",
            "Vorlage",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all distinct template type codes for all templates.",
        "query": "SELECT DISTINCT vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT DISTINCT vorlagentyp_code FROM vorlagen",
        "question": "Zeige alle unterschiedlichen Vorlagentypencodes für alle Vorlagen an.",
        "question_toks": [
            "Zeige",
            "alle",
            "unterschiedlichen",
            "Vorlagentypencodes",
            "für",
            "alle",
            "Vorlagen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the different template type codes?",
        "query": "SELECT DISTINCT vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT DISTINCT vorlagentyp_code FROM vorlagen",
        "question": "Was sind die verschiedenen Vorlagentypencodes?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "verschiedenen",
            "Vorlagentypencodes",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids of templates with template type code PP or PPT?",
        "query": "SELECT vorlage_id FROM vorlagen WHERE vorlagentyp_code = \"PP\" OR vorlagentyp_code = \"PPT\"",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "PP",
            "''",
            "OR",
            "vorlagentyp_code",
            "=",
            "``",
            "PPT",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value",
            "OR",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Wie lauten die IDs von Vorlagen mit dem Vorlagentyp-Code \"PP\" oder \"PPT\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "von",
            "Vorlagen",
            "mit",
            "dem",
            "Vorlagentyp-Code",
            "``",
            "PP",
            "''",
            "oder",
            "``",
            "PPT",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PP\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the ids of templates that have the code PP or PPT.",
        "query": "SELECT vorlage_id FROM vorlagen WHERE vorlagentyp_code = \"PP\" OR vorlagentyp_code = \"PPT\"",
        "query_toks": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "PP",
            "''",
            "OR",
            "vorlagentyp_code",
            "=",
            "``",
            "PPT",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlage_id",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value",
            "OR",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Gibt die IDs der Vorlagen zurück, die den Code \"PP\" oder \"PPT\" haben.",
        "question_toks": [
            "Gibt",
            "die",
            "IDs",
            "der",
            "Vorlagen",
            "zurück",
            ",",
            "die",
            "den",
            "Code",
            "``",
            "PP",
            "''",
            "oder",
            "``",
            "PPT",
            "''",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PP\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many templates have template type code CV?",
        "query": "SELECT count(*) FROM vorlagen WHERE vorlagentyp_code = \"CV\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Wie viele Vorlagen haben den Vorlagentyp Code \"CV\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Vorlagen",
            "haben",
            "den",
            "Vorlagentyp",
            "Code",
            "``",
            "CV",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"CV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of templates of the type CV.",
        "query": "SELECT count(*) FROM vorlagen WHERE vorlagentyp_code = \"CV\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Vorlagen vom Typ \"CV\".",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Vorlagen",
            "vom",
            "Typ",
            "``",
            "CV",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"CV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the version number and template type code for the template with version number later than 5?",
        "query": "SELECT versionsnummer , vorlagentyp_code FROM vorlagen WHERE versionsnummer > 5",
        "query_toks": [
            "SELECT",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "WHERE",
            "versionsnummer",
            ">",
            "5"
        ],
        "query_toks_no_value": [
            "SELECT",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "WHERE",
            "versionsnummer",
            ">",
            "value"
        ],
        "question": "Wie lauten die Versionsnummer und der Vorlagentyp-Code für die Vorlage mit einer Versionsnummer größer als 5?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Versionsnummer",
            "und",
            "der",
            "Vorlagentyp-Code",
            "für",
            "die",
            "Vorlage",
            "mit",
            "einer",
            "Versionsnummer",
            "größer",
            "als",
            "5",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "query": "SELECT versionsnummer , vorlagentyp_code FROM vorlagen WHERE versionsnummer > 5",
        "query_toks": [
            "SELECT",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "WHERE",
            "versionsnummer",
            ">",
            "5"
        ],
        "query_toks_no_value": [
            "SELECT",
            "versionsnummer",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "WHERE",
            "versionsnummer",
            ">",
            "value"
        ],
        "question": "Gibt die Versionsnummern und Vorlagentypcodes von Vorlagen mit einer Versionsnummer größer als 5 zurück.",
        "question_toks": [
            "Gibt",
            "die",
            "Versionsnummern",
            "und",
            "Vorlagentypcodes",
            "von",
            "Vorlagen",
            "mit",
            "einer",
            "Versionsnummer",
            "größer",
            "als",
            "5",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template type codes and number of templates for each.",
        "query": "SELECT vorlagentyp_code , count(*) FROM vorlagen GROUP BY vorlagentyp_code",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code , count(*) FROM vorlagen GROUP BY vorlagentyp_code",
        "question": "Zeige alle Vorlagentyp-Codes und die Anzahl der Vorlagen für jede.",
        "question_toks": [
            "Zeige",
            "alle",
            "Vorlagentyp-Codes",
            "und",
            "die",
            "Anzahl",
            "der",
            "Vorlagen",
            "für",
            "jede",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the different template type codes, and how many templates correspond to each?",
        "query": "SELECT vorlagentyp_code , count(*) FROM vorlagen GROUP BY vorlagentyp_code",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code , count(*) FROM vorlagen GROUP BY vorlagentyp_code",
        "question": "Wie lauten die verschiedenen Vorlagentypen und wie viele Vorlagen gehören jeweils dazu?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "verschiedenen",
            "Vorlagentypen",
            "und",
            "wie",
            "viele",
            "Vorlagen",
            "gehören",
            "jeweils",
            "dazu",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Which template type code has most number of templates?",
        "query": "SELECT vorlagentyp_code FROM vorlagen GROUP BY vorlagentyp_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Vorlagentyp-Code hat die meisten Vorlagen?",
        "question_toks": [
            "Welcher",
            "Vorlagentyp-Code",
            "hat",
            "die",
            "meisten",
            "Vorlagen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the type code of the template type that the most templates belong to.",
        "query": "SELECT vorlagentyp_code FROM vorlagen GROUP BY vorlagentyp_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gibt den Typcode des Vorlagentyps zurück, zu dem die meisten Vorlagen gehören.",
        "question_toks": [
            "Gibt",
            "den",
            "Typcode",
            "des",
            "Vorlagentyps",
            "zurück",
            ",",
            "zu",
            "dem",
            "die",
            "meisten",
            "Vorlagen",
            "gehören",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template type codes with less than three templates.",
        "query": "SELECT vorlagentyp_code FROM vorlagen GROUP BY vorlagentyp_code HAVING count(*) < 3",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "question": "Zeige alle Vorlagentypencodes mit weniger als drei Vorlagen an.",
        "question_toks": [
            "Zeige",
            "alle",
            "Vorlagentypencodes",
            "mit",
            "weniger",
            "als",
            "drei",
            "Vorlagen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the codes of template types that have fewer than 3 templates?",
        "query": "SELECT vorlagentyp_code FROM vorlagen GROUP BY vorlagentyp_code HAVING count(*) < 3",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "GROUP",
            "BY",
            "vorlagentyp_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "question": "Wie lauten die Codes von Vorlagentypen, die weniger als 3 Vorlagen haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "von",
            "Vorlagentypen",
            ",",
            "die",
            "weniger",
            "als",
            "3",
            "Vorlagen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What the smallest version number and its template type code?",
        "query": "SELECT min(versionsnummer) , vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "versionsnummer",
            ")",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT min(versionsnummer) , vorlagentyp_code FROM vorlagen",
        "question": "Wie lautet die kleinste Versionsnummer und der Code des Vorlagentyps?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "kleinste",
            "Versionsnummer",
            "und",
            "der",
            "Code",
            "des",
            "Vorlagentyps",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the lowest version number, along with its corresponding template type code.",
        "query": "SELECT min(versionsnummer) , vorlagentyp_code FROM vorlagen",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "versionsnummer",
            ")",
            ",",
            "vorlagentyp_code",
            "FROM",
            "vorlagen"
        ],
        "query_toks_no_value": "SELECT min(versionsnummer) , vorlagentyp_code FROM vorlagen",
        "question": "Gibt die niedrigste Versionsnummer zusammen mit dem entsprechenden Vorlagentyp-Code zurück.",
        "question_toks": [
            "Gibt",
            "die",
            "niedrigste",
            "Versionsnummer",
            "zusammen",
            "mit",
            "dem",
            "entsprechenden",
            "Vorlagentyp-Code",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the template type code of the template used by document with the name \"Data base\"?",
        "query": "SELECT T1.vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T2.dokumentenname = \"Data base\"",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "``",
            "Data",
            "base",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Wie lautet der Vorlagentyp-Code der Vorlage, die das Dokument mit dem Namen \"\"Data base\"\" verwendet?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorlagentyp-Code",
            "der",
            "Vorlage",
            ",",
            "die",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Data",
            "base",
            "''",
            "''",
            "verwendet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Data base\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the template type code of the template that is used by a document named Data base.",
        "query": "SELECT T1.vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T2.dokumentenname = \"Data base\"",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "``",
            "Data",
            "base",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Gibt den Vorlagentyp-Code der Vorlage zurück, die von einem Dokument namens \"Data base\" verwendet wird.",
        "question_toks": [
            "Gibt",
            "den",
            "Vorlagentyp-Code",
            "der",
            "Vorlage",
            "zurück",
            ",",
            "die",
            "von",
            "einem",
            "Dokument",
            "namens",
            "``",
            "Data",
            "base",
            "''",
            "verwendet",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Data base\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all document names using templates with template type code BK.",
        "query": "SELECT T2.dokumentenname FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T1.vorlagentyp_code = \"BK\"",
        "query_toks": [
            "SELECT",
            "T2.dokumentenname",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T1.vorlagentyp_code",
            "=",
            "``",
            "BK",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.dokumentenname",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T1.vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Zeige alle Dokumentnamen an, die Vorlagen mit dem Vorlagentyp-Code \"BK\" verwenden.",
        "question_toks": [
            "Zeige",
            "alle",
            "Dokumentnamen",
            "an",
            ",",
            "die",
            "Vorlagen",
            "mit",
            "dem",
            "Vorlagentyp-Code",
            "``",
            "BK",
            "''",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"BK\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the names of documents that use templates with the code BK?",
        "query": "SELECT T2.dokumentenname FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id WHERE T1.vorlagentyp_code = \"BK\"",
        "query_toks": [
            "SELECT",
            "T2.dokumentenname",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T1.vorlagentyp_code",
            "=",
            "``",
            "BK",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.dokumentenname",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "WHERE",
            "T1.vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Dokumente, die Vorlagen mit dem Code \"BK\" verwenden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dokumente",
            ",",
            "die",
            "Vorlagen",
            "mit",
            "dem",
            "Code",
            "``",
            "BK",
            "''",
            "verwenden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"BK\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template type codes and the number of documents using each type.",
        "query": "SELECT T1.vorlagentyp_code , count(*) FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code"
        ],
        "query_toks_no_value": "SELECT T1.vorlagentyp_code , count(*) FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code",
        "question": "Zeige alle Vorlagentypcodes und die Anzahl der Dokumente, die jeden Typ verwenden.",
        "question_toks": [
            "Zeige",
            "alle",
            "Vorlagentypcodes",
            "und",
            "die",
            "Anzahl",
            "der",
            "Dokumente",
            ",",
            "die",
            "jeden",
            "Typ",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the different template type codes, and how many documents use each type?",
        "query": "SELECT T1.vorlagentyp_code , count(*) FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code"
        ],
        "query_toks_no_value": "SELECT T1.vorlagentyp_code , count(*) FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code",
        "question": "Wie lauten die Codes für die verschiedenen Vorlagentypen, und wie viele Dokumente verwenden jeden Typ?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "für",
            "die",
            "verschiedenen",
            "Vorlagentypen",
            ",",
            "und",
            "wie",
            "viele",
            "Dokumente",
            "verwenden",
            "jeden",
            "Typ",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Which template type code is used by most number of documents?",
        "query": "SELECT T1.vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Vorlagentyp-Code wird von den meisten Dokumenten verwendet?",
        "question_toks": [
            "Welcher",
            "Vorlagentyp-Code",
            "wird",
            "von",
            "den",
            "meisten",
            "Dokumenten",
            "verwendet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the code of the template type that is most commonly used in documents.",
        "query": "SELECT T1.vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id GROUP BY T1.vorlagentyp_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id",
            "GROUP",
            "BY",
            "T1.vorlagentyp_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gibt den Code des Vorlagentyps zurück, der am häufigsten in Dokumenten verwendet wird.",
        "question_toks": [
            "Gibt",
            "den",
            "Code",
            "des",
            "Vorlagentyps",
            "zurück",
            ",",
            "der",
            "am",
            "häufigsten",
            "in",
            "Dokumenten",
            "verwendet",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template type codes that are not used by any document.",
        "query": "SELECT vorlagentyp_code FROM vorlagen EXCEPT SELECT vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "EXCEPT",
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code FROM vorlagen EXCEPT SELECT vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id",
        "question": "Zeige alle Vorlagentypcodes an, die von keinem Dokument verwendet werden.",
        "question_toks": [
            "Zeige",
            "alle",
            "Vorlagentypcodes",
            "an",
            ",",
            "die",
            "von",
            "keinem",
            "Dokument",
            "verwendet",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the codes of template types that are not used for any document?",
        "query": "SELECT vorlagentyp_code FROM vorlagen EXCEPT SELECT vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "EXCEPT",
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "vorlagen",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.vorlage_id",
            "=",
            "T2.vorlage_id"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code FROM vorlagen EXCEPT SELECT vorlagentyp_code FROM vorlagen AS T1 JOIN dokumente AS T2 ON T1.vorlage_id = T2.vorlage_id",
        "question": "Wie lauten die Codes der Vorlagentypen, die für kein Dokument verwendet werden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "der",
            "Vorlagentypen",
            ",",
            "die",
            "für",
            "kein",
            "Dokument",
            "verwendet",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all template type codes and descriptions.",
        "query": "SELECT vorlagentyp_code , schablonentyp_beschreibung FROM referenzvorlagentypen",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            ",",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code , schablonentyp_beschreibung FROM referenzvorlagentypen",
        "question": "Zeigt alle Vorlagentyp-Codes und Beschreibungen an.",
        "question_toks": [
            "Zeigt",
            "alle",
            "Vorlagentyp-Codes",
            "und",
            "Beschreibungen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the type codes and descriptions for all template types?",
        "query": "SELECT vorlagentyp_code , schablonentyp_beschreibung FROM referenzvorlagentypen",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            ",",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen"
        ],
        "query_toks_no_value": "SELECT vorlagentyp_code , schablonentyp_beschreibung FROM referenzvorlagentypen",
        "question": "Wie lauten die Typencodes und Beschreibungen für alle Vorlagentypen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Typencodes",
            "und",
            "Beschreibungen",
            "für",
            "alle",
            "Vorlagentypen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the template type descriptions for template type code \"AD\".",
        "query": "SELECT schablonentyp_beschreibung FROM referenzvorlagentypen WHERE vorlagentyp_code = \"AD\"",
        "query_toks": [
            "SELECT",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "AD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Wie lautet die Beschreibung des Vorlagentyps für den Vorlagentyp-Code \"\"AD\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Beschreibung",
            "des",
            "Vorlagentyps",
            "für",
            "den",
            "Vorlagentyp-Code",
            "``",
            "''",
            "AD",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"AD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the template type description of the template type with the code AD.",
        "query": "SELECT schablonentyp_beschreibung FROM referenzvorlagentypen WHERE vorlagentyp_code = \"AD\"",
        "query_toks": [
            "SELECT",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "``",
            "AD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "vorlagentyp_code",
            "=",
            "value"
        ],
        "question": "Gib die Beschreibung des Vorlagentyps mit dem Code \"AD\" zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Beschreibung",
            "des",
            "Vorlagentyps",
            "mit",
            "dem",
            "Code",
            "``",
            "AD",
            "''",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"AD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the template type code for template type description \"Book\".",
        "query": "SELECT vorlagentyp_code FROM referenzvorlagentypen WHERE schablonentyp_beschreibung = \"Book\"",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "schablonentyp_beschreibung",
            "=",
            "``",
            "Book",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "schablonentyp_beschreibung",
            "=",
            "value"
        ],
        "question": "Wie lautet der Vorlagentyp-Code für die Vorlagentyp-Beschreibung \"\"Book\"\".",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorlagentyp-Code",
            "für",
            "die",
            "Vorlagentyp-Beschreibung",
            "``",
            "''",
            "Book",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Book\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the type code of the template type with the description \"Book\".",
        "query": "SELECT vorlagentyp_code FROM referenzvorlagentypen WHERE schablonentyp_beschreibung = \"Book\"",
        "query_toks": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "schablonentyp_beschreibung",
            "=",
            "``",
            "Book",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorlagentyp_code",
            "FROM",
            "referenzvorlagentypen",
            "WHERE",
            "schablonentyp_beschreibung",
            "=",
            "value"
        ],
        "question": "Gib den Typcode des Vorlagentyps mit der Beschreibung \"\"Book\"\" zurück.",
        "question_toks": [
            "Gib",
            "den",
            "Typcode",
            "des",
            "Vorlagentyps",
            "mit",
            "der",
            "Beschreibung",
            "``",
            "''",
            "Book",
            "''",
            "''",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Book\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the distinct template type descriptions for the templates ever used by any document?",
        "query": "SELECT DISTINCT T1.schablonentyp_beschreibung FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code JOIN dokumente AS T3 ON T2.vorlage_id = T3.vorlage_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "JOIN",
            "dokumente",
            "AS",
            "T3",
            "ON",
            "T2.vorlage_id",
            "=",
            "T3.vorlage_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.schablonentyp_beschreibung FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code JOIN dokumente AS T3 ON T2.vorlage_id = T3.vorlage_id",
        "question": "Wie lauten die Beschreibungen der einzelnen Vorlagentypen für die Vorlagen, die jemals für ein Dokument verwendet wurden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Beschreibungen",
            "der",
            "einzelnen",
            "Vorlagentypen",
            "für",
            "die",
            "Vorlagen",
            ",",
            "die",
            "jemals",
            "für",
            "ein",
            "Dokument",
            "verwendet",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the different descriptions for templates that have been used in a document.",
        "query": "SELECT DISTINCT T1.schablonentyp_beschreibung FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code JOIN dokumente AS T3 ON T2.vorlage_id = T3.vorlage_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.schablonentyp_beschreibung",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "JOIN",
            "dokumente",
            "AS",
            "T3",
            "ON",
            "T2.vorlage_id",
            "=",
            "T3.vorlage_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.schablonentyp_beschreibung FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code JOIN dokumente AS T3 ON T2.vorlage_id = T3.vorlage_id",
        "question": "Gibt die verschiedenen Beschreibungen für Vorlagen zurück, die in einem Dokument verwendet wurden.",
        "question_toks": [
            "Gibt",
            "die",
            "verschiedenen",
            "Beschreibungen",
            "für",
            "Vorlagen",
            "zurück",
            ",",
            "die",
            "in",
            "einem",
            "Dokument",
            "verwendet",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the template ids with template type description \"Presentation\".",
        "query": "SELECT T2.vorlage_id FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code WHERE T1.schablonentyp_beschreibung = \"Presentation\"",
        "query_toks": [
            "SELECT",
            "T2.vorlage_id",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "WHERE",
            "T1.schablonentyp_beschreibung",
            "=",
            "``",
            "Presentation",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.vorlage_id",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "WHERE",
            "T1.schablonentyp_beschreibung",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vorlagen-IDs mit der Vorlagentypbeschreibung \"\"Presentation\"\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vorlagen-IDs",
            "mit",
            "der",
            "Vorlagentypbeschreibung",
            "``",
            "''",
            "Presentation",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Presentation\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the ids corresponding to templates with the description 'Presentation'.",
        "query": "SELECT T2.vorlage_id FROM referenzvorlagentypen AS T1 JOIN vorlagen AS T2 ON T1.vorlagentyp_code = T2.vorlagentyp_code WHERE T1.schablonentyp_beschreibung = \"Presentation\"",
        "query_toks": [
            "SELECT",
            "T2.vorlage_id",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "WHERE",
            "T1.schablonentyp_beschreibung",
            "=",
            "``",
            "Presentation",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.vorlage_id",
            "FROM",
            "referenzvorlagentypen",
            "AS",
            "T1",
            "JOIN",
            "vorlagen",
            "AS",
            "T2",
            "ON",
            "T1.vorlagentyp_code",
            "=",
            "T2.vorlagentyp_code",
            "WHERE",
            "T1.schablonentyp_beschreibung",
            "=",
            "value"
        ],
        "question": "Gibt die IDs zurück, die den Vorlagen mit der Beschreibung \"\"Presentation\"\" entsprechen.",
        "question_toks": [
            "Gibt",
            "die",
            "IDs",
            "zurück",
            ",",
            "die",
            "den",
            "Vorlagen",
            "mit",
            "der",
            "Beschreibung",
            "``",
            "''",
            "Presentation",
            "''",
            "''",
            "entsprechen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Presentation\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many paragraphs in total?",
        "query": "SELECT count(*) FROM absätze",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze"
        ],
        "query_toks_no_value": "SELECT count(*) FROM absätze",
        "question": "Wie viele Absätze sind es insgesamt?",
        "question_toks": [
            "Wie",
            "viele",
            "Absätze",
            "sind",
            "es",
            "insgesamt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of paragraphs.",
        "query": "SELECT count(*) FROM absätze",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze"
        ],
        "query_toks_no_value": "SELECT count(*) FROM absätze",
        "question": "Zähle die Anzahl der Absätze.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Absätze",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "How many paragraphs for the document with name 'Summer Show'?",
        "query": "SELECT count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = 'Summer Show'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "'Summer",
            "Show",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Wie viele Absätze hat das Dokument mit dem Namen \"\"Summer Show\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Absätze",
            "hat",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Summer",
            "Show",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Summer Show\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Count the number of paragraphs in the document named 'Summer Show'.",
        "query": "SELECT count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = 'Summer Show'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "'Summer",
            "Show",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Absätze in dem Dokument mit dem Namen \"\"Summer Show\"\".",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Absätze",
            "in",
            "dem",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Summer",
            "Show",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Summer Show\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show paragraph details for paragraph with text 'Korea ' .",
        "query": "select sonstige_angaben from absätze where absatztext like 'korea'",
        "query_toks": [
            "select",
            "sonstige_angaben",
            "from",
            "absätze",
            "where",
            "absatztext",
            "like",
            "'korea",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "sonstige_angaben",
            "from",
            "absätze",
            "where",
            "absatztext",
            "like",
            "value"
        ],
        "question": "Absatzdetails für den Absatz mit dem Text \"Korea\" anzeigen.",
        "question_toks": [
            "Absatzdetails",
            "für",
            "den",
            "Absatz",
            "mit",
            "dem",
            "Text",
            "``",
            "Korea",
            "''",
            "anzeigen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"korea\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the details for the paragraph that includes the text 'Korea ' ?",
        "query": "select sonstige_angaben from absätze where absatztext like 'korea'",
        "query_toks": [
            "select",
            "sonstige_angaben",
            "from",
            "absätze",
            "where",
            "absatztext",
            "like",
            "'korea",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "sonstige_angaben",
            "from",
            "absätze",
            "where",
            "absatztext",
            "like",
            "value"
        ],
        "question": "Wie lauten die Angaben zu dem Absatz, der den Text \"Korea\" enthält?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Angaben",
            "zu",
            "dem",
            "Absatz",
            ",",
            "der",
            "den",
            "Text",
            "``",
            "Korea",
            "''",
            "enthält",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"korea\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "query": "SELECT T1.absatz_id , T1.absatztext FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = 'Welcome to NY'",
        "query_toks": [
            "SELECT",
            "T1.absatz_id",
            ",",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "'Welcome",
            "to",
            "NY",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.absatz_id",
            ",",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Zeige alle Absatz-IDs und Texte für das Dokument mit dem Namen \"\"Welcome to NY\"\".",
        "question_toks": [
            "Zeige",
            "alle",
            "Absatz-IDs",
            "und",
            "Texte",
            "für",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Welcome",
            "to",
            "NY",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Welcome to NY\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "query": "SELECT T1.absatz_id , T1.absatztext FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = 'Welcome to NY'",
        "query_toks": [
            "SELECT",
            "T1.absatz_id",
            ",",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "'Welcome",
            "to",
            "NY",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.absatz_id",
            ",",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Wie lauten die IDs und Texte der Absätze in dem Dokument mit dem Titel \"\"Welcome to NY\"\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "und",
            "Texte",
            "der",
            "Absätze",
            "in",
            "dem",
            "Dokument",
            "mit",
            "dem",
            "Titel",
            "``",
            "''",
            "Welcome",
            "to",
            "NY",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Welcome to NY\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all paragraph texts for the document \"Customer reviews\".",
        "query": "SELECT T1.absatztext FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = \"Customer reviews\"",
        "query_toks": [
            "SELECT",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "``",
            "Customer",
            "reviews",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Zeige alle Absatztexte für das Dokument \"\"Customer reviews\"\".",
        "question_toks": [
            "Zeige",
            "alle",
            "Absatztexte",
            "für",
            "das",
            "Dokument",
            "``",
            "''",
            "Customer",
            "reviews",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Customer reviews\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "query": "SELECT T1.absatztext FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id WHERE T2.dokumentenname = \"Customer reviews\"",
        "query_toks": [
            "SELECT",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "``",
            "Customer",
            "reviews",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.absatztext",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "WHERE",
            "T2.dokumentenname",
            "=",
            "value"
        ],
        "question": "Wie lauten die Absatztexte für das Dokument mit dem Namen \"\"Customer reviews\"\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Absatztexte",
            "für",
            "das",
            "Dokument",
            "mit",
            "dem",
            "Namen",
            "``",
            "''",
            "Customer",
            "reviews",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Customer reviews\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "query": "SELECT dokument_id , count(*) FROM absätze GROUP BY dokument_id ORDER BY dokument_id",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "dokument_id"
        ],
        "query_toks_no_value": "SELECT dokument_id , count(*) FROM absätze GROUP BY dokument_id ORDER BY dokument_id",
        "question": "Zeige alle Dokumentennummern und die Anzahl der Absätze in jedem Dokument. Sortierung nach Dokument-ID.",
        "question_toks": [
            "Zeige",
            "alle",
            "Dokumentennummern",
            "und",
            "die",
            "Anzahl",
            "der",
            "Absätze",
            "in",
            "jedem",
            "Dokument",
            ".",
            "Sortierung",
            "nach",
            "Dokument-ID",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "query": "SELECT dokument_id , count(*) FROM absätze GROUP BY dokument_id ORDER BY dokument_id",
        "query_toks": [
            "SELECT",
            "dokument_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "dokument_id"
        ],
        "query_toks_no_value": "SELECT dokument_id , count(*) FROM absätze GROUP BY dokument_id ORDER BY dokument_id",
        "question": "Gibt die verschiedenen Dokument-IDs zusammen mit der Anzahl der zugehörigen Absätze zurück, geordnet nach ID.",
        "question_toks": [
            "Gibt",
            "die",
            "verschiedenen",
            "Dokument-IDs",
            "zusammen",
            "mit",
            "der",
            "Anzahl",
            "der",
            "zugehörigen",
            "Absätze",
            "zurück",
            ",",
            "geordnet",
            "nach",
            "ID",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show all document ids, names and the number of paragraphs in each document.",
        "query": "SELECT T1.dokument_id , T2.dokumentenname , count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id",
        "query_toks": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id"
        ],
        "query_toks_no_value": "SELECT T1.dokument_id , T2.dokumentenname , count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id",
        "question": "Zeige alle Dokument-IDs, Namen und die Anzahl der Absätze in jedem Dokument.",
        "question_toks": [
            "Zeige",
            "alle",
            "Dokument-IDs",
            ",",
            "Namen",
            "und",
            "die",
            "Anzahl",
            "der",
            "Absätze",
            "in",
            "jedem",
            "Dokument",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "query": "SELECT T1.dokument_id , T2.dokumentenname , count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id",
        "query_toks": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id"
        ],
        "query_toks_no_value": "SELECT T1.dokument_id , T2.dokumentenname , count(*) FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id",
        "question": "Wie lauten die IDs und Namen der einzelnen Dokumente sowie die Anzahl der Absätze in jedem Dokument?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "und",
            "Namen",
            "der",
            "einzelnen",
            "Dokumente",
            "sowie",
            "die",
            "Anzahl",
            "der",
            "Absätze",
            "in",
            "jedem",
            "Dokument",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "List all document ids with at least two paragraphs.",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Liste alle Dokumentennummern mit mindestens zwei Absätzen auf.",
        "question_toks": [
            "Liste",
            "alle",
            "Dokumentennummern",
            "mit",
            "mindestens",
            "zwei",
            "Absätzen",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids of documents that have 2 or more paragraphs?",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie lauten die IDs von Dokumenten, die 2 oder mehr Absätze haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "von",
            "Dokumenten",
            ",",
            "die",
            "2",
            "oder",
            "mehr",
            "Absätze",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the document id and name with greatest number of paragraphs?",
        "query": "SELECT T1.dokument_id , T2.dokumentenname FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Dokument-ID und der Name des Dokuments mit der größten Anzahl an Absätzen?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Dokument-ID",
            "und",
            "der",
            "Name",
            "des",
            "Dokuments",
            "mit",
            "der",
            "größten",
            "Anzahl",
            "an",
            "Absätzen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the id and name of the document with the most paragraphs.",
        "query": "SELECT T1.dokument_id , T2.dokumentenname FROM absätze AS T1 JOIN dokumente AS T2 ON T1.dokument_id = T2.dokument_id GROUP BY T1.dokument_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.dokument_id",
            ",",
            "T2.dokumentenname",
            "FROM",
            "absätze",
            "AS",
            "T1",
            "JOIN",
            "dokumente",
            "AS",
            "T2",
            "ON",
            "T1.dokument_id",
            "=",
            "T2.dokument_id",
            "GROUP",
            "BY",
            "T1.dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gibt die ID und den Namen des Dokuments mit den meisten Absätzen zurück.",
        "question_toks": [
            "Gibt",
            "die",
            "ID",
            "und",
            "den",
            "Namen",
            "des",
            "Dokuments",
            "mit",
            "den",
            "meisten",
            "Absätzen",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the document id with least number of paragraphs?",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Dokument-ID mit der geringsten Anzahl von Absätzen?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Dokument-ID",
            "mit",
            "der",
            "geringsten",
            "Anzahl",
            "von",
            "Absätzen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Return the id of the document with the fewest paragraphs.",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Gibt die ID des Dokuments mit den wenigsten Absätzen zurück.",
        "question_toks": [
            "Gibt",
            "die",
            "ID",
            "des",
            "Dokuments",
            "mit",
            "den",
            "wenigsten",
            "Absätzen",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What is the document id with 1 to 2 paragraphs?",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "value",
            "AND",
            "value"
        ],
        "question": "Wie lautet die Dokument-ID mit 1 bis 2 Absätzen?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Dokument-ID",
            "mit",
            "1",
            "bis",
            "2",
            "Absätzen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Give the ids of documents that have between one and two paragraphs.",
        "query": "SELECT dokument_id FROM absätze GROUP BY dokument_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "GROUP",
            "BY",
            "dokument_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "value",
            "AND",
            "value"
        ],
        "question": "Gib die IDs der Dokumente an, die zwischen einem und zwei Absätzen haben.",
        "question_toks": [
            "Gib",
            "die",
            "IDs",
            "der",
            "Dokumente",
            "an",
            ",",
            "die",
            "zwischen",
            "einem",
            "und",
            "zwei",
            "Absätzen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "query": "SELECT dokument_id FROM absätze WHERE absatztext = 'Brazil' INTERSECT SELECT dokument_id FROM absätze WHERE absatztext = 'Ireland'",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "'Brazil",
            "'",
            "INTERSECT",
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "'Ireland",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "value"
        ],
        "question": "Zeige die Dokument-ID mit dem Absatztext \"\"Brazil\"\" und \"\"Ireland\"\".",
        "question_toks": [
            "Zeige",
            "die",
            "Dokument-ID",
            "mit",
            "dem",
            "Absatztext",
            "``",
            "''",
            "Brazil",
            "''",
            "''",
            "und",
            "``",
            "''",
            "Ireland",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        "\"Ireland\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_doc_template_mgt",
        "match": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "query": "SELECT dokument_id FROM absätze WHERE absatztext = 'Brazil' INTERSECT SELECT dokument_id FROM absätze WHERE absatztext = 'Ireland'",
        "query_toks": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "'Brazil",
            "'",
            "INTERSECT",
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "'Ireland",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "dokument_id",
            "FROM",
            "absätze",
            "WHERE",
            "absatztext",
            "=",
            "value"
        ],
        "question": "Wie lauten die IDs der Dokumente, die die Absatztexte \"\"Brazil\"\" und \"\"Ireland\"\" enthalten?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "der",
            "Dokumente",
            ",",
            "die",
            "die",
            "Absatztexte",
            "``",
            "''",
            "Brazil",
            "''",
            "''",
            "und",
            "``",
            "''",
            "Ireland",
            "''",
            "''",
            "enthalten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        "\"Ireland\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "How many teachers are there?",
        "query": "SELECT count(*) FROM lehrer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "lehrer"
        ],
        "query_toks_no_value": "SELECT count(*) FROM lehrer",
        "question": "Wie viele Lehrkräfte gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Lehrkräfte",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What is the total count of teachers?",
        "query": "SELECT count(*) FROM lehrer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "lehrer"
        ],
        "query_toks_no_value": "SELECT count(*) FROM lehrer",
        "question": "Wie viele Lehrkräfte gibt es insgesamt?",
        "question_toks": [
            "Wie",
            "viele",
            "Lehrkräfte",
            "gibt",
            "es",
            "insgesamt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "List the names of teachers in ascending order of age.",
        "query": "SELECT name FROM lehrer ORDER BY alter ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM lehrer ORDER BY alter ASC",
        "question": "Nenne die Namen der Lehrkräfte in aufsteigender Reihenfolge ihres Alters.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "ihres",
            "Alters",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers ordered by ascending age?",
        "query": "SELECT name FROM lehrer ORDER BY alter ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM lehrer ORDER BY alter ASC",
        "question": "Wie lauten die Namen der Lehrer/innen, geordnet nach aufsteigendem Alter?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Lehrer/innen",
            ",",
            "geordnet",
            "nach",
            "aufsteigendem",
            "Alter",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the age and hometown of teachers?",
        "query": "SELECT alter , heimatort FROM lehrer",
        "query_toks": [
            "SELECT",
            "alter",
            ",",
            "heimatort",
            "FROM",
            "lehrer"
        ],
        "query_toks_no_value": "SELECT alter , heimatort FROM lehrer",
        "question": "Wie alt sind die Lehrkräfte und wie sieht ihr Heimatort aus?",
        "question_toks": [
            "Wie",
            "alt",
            "sind",
            "die",
            "Lehrkräfte",
            "und",
            "wie",
            "sieht",
            "ihr",
            "Heimatort",
            "aus",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What is the age and hometown of every teacher?",
        "query": "SELECT alter , heimatort FROM lehrer",
        "query_toks": [
            "SELECT",
            "alter",
            ",",
            "heimatort",
            "FROM",
            "lehrer"
        ],
        "query_toks_no_value": "SELECT alter , heimatort FROM lehrer",
        "question": "Welches Alter und welchen Heimatort hat jeder Lehrer?",
        "question_toks": [
            "Welches",
            "Alter",
            "und",
            "welchen",
            "Heimatort",
            "hat",
            "jeder",
            "Lehrer",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
        "query": "select name from lehrer where heimatort != \"little lever urban district\"",
        "query_toks": [
            "select",
            "name",
            "from",
            "lehrer",
            "where",
            "heimatort",
            "!",
            "=",
            "``",
            "little",
            "lever",
            "urban",
            "district",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "lehrer",
            "where",
            "heimatort",
            "!",
            "=",
            "value"
        ],
        "question": "Nenne die Namen der Lehrerinnen und Lehrer, deren Heimatstadt nicht \"Little Lever Urban District\" ist.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Lehrerinnen",
            "und",
            "Lehrer",
            ",",
            "deren",
            "Heimatstadt",
            "nicht",
            "``",
            "Little",
            "Lever",
            "Urban",
            "District",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"little lever urban district\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
        "query": "select name from lehrer where heimatort != \"little lever urban district\"",
        "query_toks": [
            "select",
            "name",
            "from",
            "lehrer",
            "where",
            "heimatort",
            "!",
            "=",
            "``",
            "little",
            "lever",
            "urban",
            "district",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "lehrer",
            "where",
            "heimatort",
            "!",
            "=",
            "value"
        ],
        "question": "Wie heißen die Lehrerinnen und Lehrer, deren Heimatstadt nicht `` Little Lever Urban District '' heißt?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Lehrerinnen",
            "und",
            "Lehrer",
            ",",
            "deren",
            "Heimatstadt",
            "nicht",
            "``",
            "Little",
            "Lever",
            "Urban",
            "District",
            "``",
            "heißt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"little lever urban district\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show the name of teachers aged either 32 or 33?",
        "query": "SELECT name FROM lehrer WHERE alter = 32 OR alter = 33",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "alter",
            "=",
            "32",
            "OR",
            "alter",
            "=",
            "33"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "alter",
            "=",
            "value",
            "OR",
            "alter",
            "=",
            "value"
        ],
        "question": "Zeige die Namen von Lehrern, die entweder 32 oder 33 Jahre alt sind?",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "von",
            "Lehrern",
            ",",
            "die",
            "entweder",
            "32",
            "oder",
            "33",
            "Jahre",
            "alt",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    32.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    33.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers who are aged either 32 or 33?",
        "query": "SELECT name FROM lehrer WHERE alter = 32 OR alter = 33",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "alter",
            "=",
            "32",
            "OR",
            "alter",
            "=",
            "33"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "alter",
            "=",
            "value",
            "OR",
            "alter",
            "=",
            "value"
        ],
        "question": "Wie heißen die Lehrerinnen und Lehrer, die entweder 32 oder 33 Jahre alt sind?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Lehrerinnen",
            "und",
            "Lehrer",
            ",",
            "die",
            "entweder",
            "32",
            "oder",
            "33",
            "Jahre",
            "alt",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    32.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    33.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What is the hometown of the youngest teacher?",
        "query": "SELECT heimatort FROM lehrer ORDER BY alter ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt die Heimatstadt des jüngsten Lehrers?",
        "question_toks": [
            "Wie",
            "heißt",
            "die",
            "Heimatstadt",
            "des",
            "jüngsten",
            "Lehrers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Where is the youngest teacher from?",
        "query": "SELECT heimatort FROM lehrer ORDER BY alter ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "ORDER",
            "BY",
            "alter",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Woher kommt der jüngste Lehrer?",
        "question_toks": [
            "Woher",
            "kommt",
            "der",
            "jüngste",
            "Lehrer",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show different hometown of teachers and the number of teachers from each hometown.",
        "query": "SELECT heimatort , COUNT(*) FROM lehrer GROUP BY heimatort",
        "query_toks": [
            "SELECT",
            "heimatort",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort"
        ],
        "query_toks_no_value": "SELECT heimatort , COUNT(*) FROM lehrer GROUP BY heimatort",
        "question": "Zeige die verschiedenen Heimatstädte der Lehrer und die Anzahl der Lehrer aus jeder Heimatstadt.",
        "question_toks": [
            "Zeige",
            "die",
            "verschiedenen",
            "Heimatstädte",
            "der",
            "Lehrer",
            "und",
            "die",
            "Anzahl",
            "der",
            "Lehrer",
            "aus",
            "jeder",
            "Heimatstadt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "For each hometown, how many teachers are there?",
        "query": "SELECT heimatort , COUNT(*) FROM lehrer GROUP BY heimatort",
        "query_toks": [
            "SELECT",
            "heimatort",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort"
        ],
        "query_toks_no_value": "SELECT heimatort , COUNT(*) FROM lehrer GROUP BY heimatort",
        "question": "Wie viele Lehrkräfte gibt es in jeder Heimatstadt?",
        "question_toks": [
            "Wie",
            "viele",
            "Lehrkräfte",
            "gibt",
            "es",
            "in",
            "jeder",
            "Heimatstadt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "List the most common hometown of teachers.",
        "query": "SELECT heimatort FROM lehrer GROUP BY heimatort ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Nenne die häufigsten Heimatstädte von Lehrern.",
        "question_toks": [
            "Nenne",
            "die",
            "häufigsten",
            "Heimatstädte",
            "von",
            "Lehrern",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What is the most commmon hometowns for teachers?",
        "query": "SELECT heimatort FROM lehrer GROUP BY heimatort ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches sind die häufigsten Heimatstädte für Lehrer?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "häufigsten",
            "Heimatstädte",
            "für",
            "Lehrer",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show the hometowns shared by at least two teachers.",
        "query": "SELECT heimatort FROM lehrer GROUP BY heimatort HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige die Heimatstädte von mindestens zwei Lehrkräften an.",
        "question_toks": [
            "Zeige",
            "die",
            "Heimatstädte",
            "von",
            "mindestens",
            "zwei",
            "Lehrkräften",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the towns from which at least two teachers come from?",
        "query": "SELECT heimatort FROM lehrer GROUP BY heimatort HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "heimatort",
            "FROM",
            "lehrer",
            "GROUP",
            "BY",
            "heimatort",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Aus welchen Städten kommen mindestens zwei Lehrer/innen?",
        "question_toks": [
            "Aus",
            "welchen",
            "Städten",
            "kommen",
            "mindestens",
            "zwei",
            "Lehrer/innen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show names of teachers and the courses they are arranged to teach.",
        "query": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id",
        "query_toks": [
            "SELECT",
            "T3.name",
            ",",
            "T2.kurs",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id"
        ],
        "query_toks_no_value": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id",
        "question": "Zeige die Namen der Lehrkräfte und die Kurse, die sie unterrichten sollen.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "und",
            "die",
            "Kurse",
            ",",
            "die",
            "sie",
            "unterrichten",
            "sollen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What is the name of each teacher and what course they teach?",
        "query": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id",
        "query_toks": [
            "SELECT",
            "T3.name",
            ",",
            "T2.kurs",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id"
        ],
        "query_toks_no_value": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id",
        "question": "Wie heißen die einzelnen Lehrkräfte und welchen Kurs unterrichten sie?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "einzelnen",
            "Lehrkräfte",
            "und",
            "welchen",
            "Kurs",
            "unterrichten",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "query": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id ORDER BY T3.name",
        "query_toks": [
            "SELECT",
            "T3.name",
            ",",
            "T2.kurs",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "ORDER",
            "BY",
            "T3.name"
        ],
        "query_toks_no_value": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id ORDER BY T3.name",
        "question": "Zeige die Namen der Lehrkräfte und die Kurse, die sie unterrichten sollen, in aufsteigender alphabetischer Reihenfolge der Namen der Lehrkräfte.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "und",
            "die",
            "Kurse",
            ",",
            "die",
            "sie",
            "unterrichten",
            "sollen",
            ",",
            "in",
            "aufsteigender",
            "alphabetischer",
            "Reihenfolge",
            "der",
            "Namen",
            "der",
            "Lehrkräfte",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "query": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id ORDER BY T3.name",
        "query_toks": [
            "SELECT",
            "T3.name",
            ",",
            "T2.kurs",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "ORDER",
            "BY",
            "T3.name"
        ],
        "query_toks_no_value": "SELECT T3.name , T2.kurs FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id ORDER BY T3.name",
        "question": "Wie lauten die Namen der Lehrkräfte und die Kurse, die sie unterrichten, in aufsteigender alphabetischer Reihenfolge nach dem Namen der Lehrkraft?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "und",
            "die",
            "Kurse",
            ",",
            "die",
            "sie",
            "unterrichten",
            ",",
            "in",
            "aufsteigender",
            "alphabetischer",
            "Reihenfolge",
            "nach",
            "dem",
            "Namen",
            "der",
            "Lehrkraft",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show the name of the teacher for the math course.",
        "query": "SELECT T3.name FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id WHERE T2.kurs = \"Math\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "WHERE",
            "T2.kurs",
            "=",
            "``",
            "Math",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T3.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "WHERE",
            "T2.kurs",
            "=",
            "value"
        ],
        "question": "Zeige den Namen der Lehrkraft für den Mathekurs an.",
        "question_toks": [
            "Zeige",
            "den",
            "Namen",
            "der",
            "Lehrkraft",
            "für",
            "den",
            "Mathekurs",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Math\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the people who teach math courses?",
        "query": "SELECT T3.name FROM kurseinteilung AS T1 JOIN kurs AS T2 ON T1.kurs_id = T2.kurs_id JOIN lehrer AS T3 ON T1.lehrer_id = T3.lehrer_id WHERE T2.kurs = \"Math\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "WHERE",
            "T2.kurs",
            "=",
            "``",
            "Math",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T3.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "kurs",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "JOIN",
            "lehrer",
            "AS",
            "T3",
            "ON",
            "T1.lehrer_id",
            "=",
            "T3.lehrer_id",
            "WHERE",
            "T2.kurs",
            "=",
            "value"
        ],
        "question": "Wie heißen die Leute, die Mathekurse unterrichten?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Leute",
            ",",
            "die",
            "Mathekurse",
            "unterrichten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Math\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show names of teachers and the number of courses they teach.",
        "query": "SELECT T2.name , COUNT(*) FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name"
        ],
        "query_toks_no_value": "SELECT T2.name , COUNT(*) FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name",
        "question": "Zeige die Namen der Lehrkräfte und die Anzahl der Kurse, die sie unterrichten.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "und",
            "die",
            "Anzahl",
            "der",
            "Kurse",
            ",",
            "die",
            "sie",
            "unterrichten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers and how many courses do they teach?",
        "query": "SELECT T2.name , COUNT(*) FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name"
        ],
        "query_toks_no_value": "SELECT T2.name , COUNT(*) FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name",
        "question": "Wie lauten die Namen der Lehrer und wie viele Kurse unterrichten sie?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Lehrer",
            "und",
            "wie",
            "viele",
            "Kurse",
            "unterrichten",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "Show names of teachers that teach at least two courses.",
        "query": "SELECT T2.name FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Gib die Namen der Lehrkräfte an, die mindestens zwei Kurse unterrichten.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "an",
            ",",
            "die",
            "mindestens",
            "zwei",
            "Kurse",
            "unterrichten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers who teach at least two courses?",
        "query": "SELECT T2.name FROM kurseinteilung AS T1 JOIN lehrer AS T2 ON T1.lehrer_id = T2.lehrer_id GROUP BY T2.name HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "kurseinteilung",
            "AS",
            "T1",
            "JOIN",
            "lehrer",
            "AS",
            "T2",
            "ON",
            "T1.lehrer_id",
            "=",
            "T2.lehrer_id",
            "GROUP",
            "BY",
            "T2.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Lehrkräfte, die mindestens zwei Kurse unterrichten?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            ",",
            "die",
            "mindestens",
            "zwei",
            "Kurse",
            "unterrichten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "List the names of teachers who have not been arranged to teach courses.",
        "query": "SELECT name FROM lehrer WHERE lehrer_id NOT IN (SELECT lehrer_id FROM kurseinteilung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "lehrer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "lehrer_id",
            "FROM",
            "kurseinteilung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM lehrer WHERE lehrer_id NOT IN (SELECT lehrer_id FROM kurseinteilung)",
        "question": "Gib die Namen der Lehrkräfte an, die nicht für den Unterricht eingeteilt wurden.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            "an",
            ",",
            "die",
            "nicht",
            "für",
            "den",
            "Unterricht",
            "eingeteilt",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "match": "What are the names of the teachers whose courses have not been arranged?",
        "query": "SELECT name FROM lehrer WHERE lehrer_id NOT IN (SELECT lehrer_id FROM kurseinteilung)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "lehrer",
            "WHERE",
            "lehrer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "lehrer_id",
            "FROM",
            "kurseinteilung",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM lehrer WHERE lehrer_id NOT IN (SELECT lehrer_id FROM kurseinteilung)",
        "question": "Wie lauten die Namen der Lehrkräfte, deren Kurse noch nicht feststehen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Lehrkräfte",
            ",",
            "deren",
            "Kurse",
            "noch",
            "nicht",
            "feststehen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "How many visitors below age 30 are there?",
        "query": "SELECT count(*) FROM kunde WHERE alter < 30",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "alter",
            "<",
            "30"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "alter",
            "<",
            "value"
        ],
        "question": "Wie viele Besucher sind unter 30 Jahre alt?",
        "question_toks": [
            "Wie",
            "viele",
            "Besucher",
            "sind",
            "unter",
            "30",
            "Jahre",
            "alt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "query": "SELECT name FROM kunde WHERE mitgliedsstufe > 4 ORDER BY mitgliedsstufe DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            ">",
            "4",
            "ORDER",
            "BY",
            "mitgliedsstufe",
            "DESC"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            ">",
            "value",
            "ORDER",
            "BY",
            "mitgliedsstufe",
            "DESC"
        ],
        "question": "Finde die Namen der Besucher, deren Mitgliedsstufe höher als 4 ist, und ordne die Ergebnisse nach der Stufe von hoch bis niedrig.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Besucher",
            ",",
            "deren",
            "Mitgliedsstufe",
            "höher",
            "als",
            "4",
            "ist",
            ",",
            "und",
            "ordne",
            "die",
            "Ergebnisse",
            "nach",
            "der",
            "Stufe",
            "von",
            "hoch",
            "bis",
            "niedrig",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What is the average age of the visitors whose membership level is not higher than 4?",
        "query": "SELECT avg(alter) FROM kunde WHERE mitgliedsstufe <= 4",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            "<",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            "<",
            "=",
            "value"
        ],
        "question": "Wie hoch ist das Durchschnittsalter der Besucher, deren Mitgliedsstufe nicht höher als 4 ist?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnittsalter",
            "der",
            "Besucher",
            ",",
            "deren",
            "Mitgliedsstufe",
            "nicht",
            "höher",
            "als",
            "4",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "query": "SELECT name , mitgliedsstufe FROM kunde WHERE mitgliedsstufe > 4 ORDER BY alter DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "mitgliedsstufe",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            ">",
            "4",
            "ORDER",
            "BY",
            "alter",
            "DESC"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "mitgliedsstufe",
            "FROM",
            "kunde",
            "WHERE",
            "mitgliedsstufe",
            ">",
            "value",
            "ORDER",
            "BY",
            "alter",
            "DESC"
        ],
        "question": "Finde den Namen und die Mitgliedsstufe der Besucher, deren Mitgliedsstufe höher als 4 ist, und sortiere sie nach ihrem Alter von alt nach jung.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "und",
            "die",
            "Mitgliedsstufe",
            "der",
            "Besucher",
            ",",
            "deren",
            "Mitgliedsstufe",
            "höher",
            "als",
            "4",
            "ist",
            ",",
            "und",
            "sortiere",
            "sie",
            "nach",
            "ihrem",
            "Alter",
            "von",
            "alt",
            "nach",
            "jung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the id and name of the museum that has the most staff members?",
        "query": "SELECT museum_id , name FROM museum ORDER BY anzahl_der_mitarbeiter DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "museum_id",
            ",",
            "name",
            "FROM",
            "museum",
            "ORDER",
            "BY",
            "anzahl_der_mitarbeiter",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "museum_id",
            ",",
            "name",
            "FROM",
            "museum",
            "ORDER",
            "BY",
            "anzahl_der_mitarbeiter",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Kennung und den Namen des Museums, das die meisten Mitarbeiter/innen hat?",
        "question_toks": [
            "Finde",
            "die",
            "Kennung",
            "und",
            "den",
            "Namen",
            "des",
            "Museums",
            ",",
            "das",
            "die",
            "meisten",
            "Mitarbeiter/innen",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the average number of staff working for the museums that were open before 2009.",
        "query": "SELECT avg(anzahl_der_mitarbeiter) FROM museum WHERE eröffnungsjahr < 2009",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "anzahl_der_mitarbeiter",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            "<",
            "2009"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "anzahl_der_mitarbeiter",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            "<",
            "value"
        ],
        "question": "Finde heraus, wie viele Mitarbeiter die Museen, die vor 2009 eröffnet wurden, im Durchschnitt haben.",
        "question_toks": [
            "Finde",
            "heraus",
            ",",
            "wie",
            "viele",
            "Mitarbeiter",
            "die",
            "Museen",
            ",",
            "die",
            "vor",
            "2009",
            "eröffnet",
            "wurden",
            ",",
            "im",
            "Durchschnitt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What are the opening year and staff number of the museum named Plaza Museum?",
        "query": "SELECT anzahl_der_mitarbeiter , eröffnungsjahr FROM museum WHERE name = 'Plaza Museum'",
        "query_toks": [
            "SELECT",
            "anzahl_der_mitarbeiter",
            ",",
            "eröffnungsjahr",
            "FROM",
            "museum",
            "WHERE",
            "name",
            "=",
            "'Plaza",
            "Museum",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "anzahl_der_mitarbeiter",
            ",",
            "eröffnungsjahr",
            "FROM",
            "museum",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Wie lautet das Eröffnungsjahr und die Anzahl der Mitarbeiter des \"Plaza Museum\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "das",
            "Eröffnungsjahr",
            "und",
            "die",
            "Anzahl",
            "der",
            "Mitarbeiter",
            "des",
            "``",
            "Plaza",
            "Museum",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Plaza Museum\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "query": "SELECT name FROM museum WHERE anzahl_der_mitarbeiter > (SELECT min(anzahl_der_mitarbeiter) FROM museum WHERE eröffnungsjahr > 2010)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "museum",
            "WHERE",
            "anzahl_der_mitarbeiter",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "anzahl_der_mitarbeiter",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            ">",
            "2010",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "museum",
            "WHERE",
            "anzahl_der_mitarbeiter",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "anzahl_der_mitarbeiter",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            ">",
            "value",
            ")"
        ],
        "question": "Finde die Namen der Museen, die mehr Personal haben als die Mindestbesetzung aller nach 2010 eröffneten Museen.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "der",
            "Museen",
            ",",
            "die",
            "mehr",
            "Personal",
            "haben",
            "als",
            "die",
            "Mindestbesetzung",
            "aller",
            "nach",
            "2010",
            "eröffneten",
            "Museen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            3,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ],
                                2010.0,
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "find the id, name and age for visitors who visited some museums more than once.",
        "query": "SELECT t1.kunden_id , t1.name , t1.alter FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id GROUP BY t1.kunden_id HAVING count(*) > 1",
        "query_toks": [
            "SELECT",
            "t1.kunden_id",
            ",",
            "t1.name",
            ",",
            "t1.alter",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "GROUP",
            "BY",
            "t1.kunden_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.kunden_id",
            ",",
            "t1.name",
            ",",
            "t1.alter",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "GROUP",
            "BY",
            "t1.kunden_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde die ID, den Namen und das Alter der Besucher, die einige Museen mehr als einmal besucht haben.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            ",",
            "den",
            "Namen",
            "und",
            "das",
            "Alter",
            "der",
            "Besucher",
            ",",
            "die",
            "einige",
            "Museen",
            "mehr",
            "als",
            "einmal",
            "besucht",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "query": "SELECT t2.kunden_id , t1.name , t1.mitgliedsstufe FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id GROUP BY t2.kunden_id ORDER BY sum(t2.gesamtausgaben) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.kunden_id",
            ",",
            "t1.name",
            ",",
            "t1.mitgliedsstufe",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "GROUP",
            "BY",
            "t2.kunden_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "t2.gesamtausgaben",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t2.kunden_id",
            ",",
            "t1.name",
            ",",
            "t1.mitgliedsstufe",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "GROUP",
            "BY",
            "t2.kunden_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "t2.gesamtausgaben",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Kennung, der Name und die Mitgliedsstufe der Besucher, die insgesamt den größten Geldbetrag für alle Museumstickets ausgegeben haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Kennung",
            ",",
            "der",
            "Name",
            "und",
            "die",
            "Mitgliedsstufe",
            "der",
            "Besucher",
            ",",
            "die",
            "insgesamt",
            "den",
            "größten",
            "Geldbetrag",
            "für",
            "alle",
            "Museumstickets",
            "ausgegeben",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What are the id and name of the museum visited most times?",
        "query": "SELECT t2.museum_id , t1.name FROM museum AS t1 JOIN besuch AS t2 ON t1.museum_id = t2.museum_id GROUP BY t2.museum_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.museum_id",
            ",",
            "t1.name",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.museum_id",
            "=",
            "t2.museum_id",
            "GROUP",
            "BY",
            "t2.museum_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t2.museum_id",
            ",",
            "t1.name",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.museum_id",
            "=",
            "t2.museum_id",
            "GROUP",
            "BY",
            "t2.museum_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Kennung und der Name des am häufigsten besuchten Museums?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Kennung",
            "und",
            "der",
            "Name",
            "des",
            "am",
            "häufigsten",
            "besuchten",
            "Museums",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What is the name of the museum that had no visitor yet?",
        "query": "SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM besuch)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "museum",
            "WHERE",
            "museum_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "museum_id",
            "FROM",
            "besuch",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM besuch)",
        "question": "Wie heißt das Museum, das noch keinen Besucher hatte?",
        "question_toks": [
            "Wie",
            "heißt",
            "das",
            "Museum",
            ",",
            "das",
            "noch",
            "keinen",
            "Besucher",
            "hatte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the name and age of the visitor who bought the most tickets at once.",
        "query": "SELECT t1.name , t1.alter FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "t1.alter",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "ORDER",
            "BY",
            "t2.num_of_ticket",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            ",",
            "t1.alter",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "ORDER",
            "BY",
            "t2.num_of_ticket",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen und das Alter des Besuchers, der die meisten Tickets auf einmal gekauft hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "und",
            "das",
            "Alter",
            "des",
            "Besuchers",
            ",",
            "der",
            "die",
            "meisten",
            "Tickets",
            "auf",
            "einmal",
            "gekauft",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What are the average and maximum number of tickets bought in all visits?",
        "query": "SELECT avg(num_of_ticket) , max(num_of_ticket) FROM besuch",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "num_of_ticket",
            ")",
            ",",
            "max",
            "(",
            "num_of_ticket",
            ")",
            "FROM",
            "besuch"
        ],
        "query_toks_no_value": "SELECT avg(num_of_ticket) , max(num_of_ticket) FROM besuch",
        "question": "Wie hoch ist die durchschnittliche und maximale Anzahl der gekauften Tickets bei allen Besuchen?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "und",
            "maximale",
            "Anzahl",
            "der",
            "gekauften",
            "Tickets",
            "bei",
            "allen",
            "Besuchen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What is the total ticket expense of the visitors whose membership level is 1?",
        "query": "SELECT sum(t2.gesamtausgaben) FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id WHERE t1.mitgliedsstufe = 1",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "t2.gesamtausgaben",
            ")",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "WHERE",
            "t1.mitgliedsstufe",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "t2.gesamtausgaben",
            ")",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "WHERE",
            "t1.mitgliedsstufe",
            "=",
            "value"
        ],
        "question": "Wie hoch sind die gesamten Ticketkosten der Besucher, deren Mitgliedsstufe 1 ist?",
        "question_toks": [
            "Wie",
            "hoch",
            "sind",
            "die",
            "gesamten",
            "Ticketkosten",
            "der",
            "Besucher",
            ",",
            "deren",
            "Mitgliedsstufe",
            "1",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "query": "SELECT t1.name FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id JOIN museum AS t3 ON t3.museum_id = t2.museum_id WHERE t3.eröffnungsjahr < 2009 INTERSECT SELECT t1.name FROM kunde AS t1 JOIN besuch AS t2 ON t1.kunden_id = t2.kunden_id JOIN museum AS t3 ON t3.museum_id = t2.museum_id WHERE t3.eröffnungsjahr > 2011",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t3.eröffnungsjahr",
            "<",
            "2009",
            "INTERSECT",
            "SELECT",
            "t1.name",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t3.eröffnungsjahr",
            ">",
            "2011"
        ],
        "query_toks_no_value": [
            "SELECT",
            "t1.name",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t3.eröffnungsjahr",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "t1.name",
            "FROM",
            "kunde",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.kunden_id",
            "=",
            "t2.kunden_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t3.eröffnungsjahr",
            ">",
            "value"
        ],
        "question": "Wie heißt der Besucher, der sowohl ein Museum, das vor 2009 eröffnet wurde, als auch ein Museum, das nach 2011 eröffnet wurde, besucht hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Besucher",
            ",",
            "der",
            "sowohl",
            "ein",
            "Museum",
            ",",
            "das",
            "vor",
            "2009",
            "eröffnet",
            "wurde",
            ",",
            "als",
            "auch",
            "ein",
            "Museum",
            ",",
            "das",
            "nach",
            "2011",
            "eröffnet",
            "wurde",
            ",",
            "besucht",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        2011.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "Find the number of visitors who did not visit any museum opened after 2010.",
        "query": "SELECT count(*) FROM kunde WHERE kunden_id NOT IN (SELECT t2.kunden_id FROM museum AS t1 JOIN besuch AS t2 ON t1.museum_id = t2.museum_id WHERE t1.eröffnungsjahr > 2010)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "kunden_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "t2.kunden_id",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t1.eröffnungsjahr",
            ">",
            "2010",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kunde",
            "WHERE",
            "kunden_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "t2.kunden_id",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "besuch",
            "AS",
            "t2",
            "ON",
            "t1.museum_id",
            "=",
            "t2.museum_id",
            "WHERE",
            "t1.eröffnungsjahr",
            ">",
            "value",
            ")"
        ],
        "question": "Finde die Anzahl der Besucher, die kein Museum besucht haben, das nach 2010 eröffnet wurde.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Besucher",
            ",",
            "die",
            "kein",
            "Museum",
            "besucht",
            "haben",
            ",",
            "das",
            "nach",
            "2010",
            "eröffnet",
            "wurde",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ],
                                2010.0,
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "match": "How many museums were opened after 2013 or before 2008?",
        "query": "SELECT count(*) FROM museum WHERE eröffnungsjahr > 2013 OR eröffnungsjahr < 2008",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            ">",
            "2013",
            "OR",
            "eröffnungsjahr",
            "<",
            "2008"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "eröffnungsjahr",
            ">",
            "value",
            "OR",
            "eröffnungsjahr",
            "<",
            "value"
        ],
        "question": "Wie viele Museen wurden nach 2013 oder vor 2008 eröffnet?",
        "question_toks": [
            "Wie",
            "viele",
            "Museen",
            "wurden",
            "nach",
            "2013",
            "oder",
            "vor",
            "2008",
            "eröffnet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the total number of players.",
        "query": "SELECT count(*) FROM spieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spieler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM spieler",
        "question": "Finde die Gesamtzahl der Spieler.",
        "question_toks": [
            "Finde",
            "die",
            "Gesamtzahl",
            "der",
            "Spieler",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many players are there?",
        "query": "SELECT count(*) FROM spieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spieler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM spieler",
        "question": "Wie viele Spieler sind es?",
        "question_toks": [
            "Wie",
            "viele",
            "Spieler",
            "sind",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the total number of matches.",
        "query": "SELECT count(*) FROM spiele",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT count(*) FROM spiele",
        "question": "Finde die Gesamtzahl der Treffer.",
        "question_toks": [
            "Finde",
            "die",
            "Gesamtzahl",
            "der",
            "Treffer",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Count the number of matches.",
        "query": "SELECT count(*) FROM spiele",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT count(*) FROM spiele",
        "question": "Zähle die Anzahl der Treffer.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Treffer",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "List the first name and birth date of all players from the country with code USA.",
        "query": "SELECT vorname , geburtsdatum FROM spieler WHERE ländercode = 'USA'",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "geburtsdatum",
            "FROM",
            "spieler",
            "WHERE",
            "ländercode",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "geburtsdatum",
            "FROM",
            "spieler",
            "WHERE",
            "ländercode",
            "=",
            "value"
        ],
        "question": "Nenne den Vornamen und das Geburtsdatum aller Spieler/innen aus dem Land mit dem Code \"USA\".",
        "question_toks": [
            "Nenne",
            "den",
            "Vornamen",
            "und",
            "das",
            "Geburtsdatum",
            "aller",
            "Spieler/innen",
            "aus",
            "dem",
            "Land",
            "mit",
            "dem",
            "Code",
            "``",
            "USA",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the first names and birth dates of players from the USA?",
        "query": "SELECT vorname , geburtsdatum FROM spieler WHERE ländercode = 'USA'",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "geburtsdatum",
            "FROM",
            "spieler",
            "WHERE",
            "ländercode",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "geburtsdatum",
            "FROM",
            "spieler",
            "WHERE",
            "ländercode",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vornamen und Geburtsdaten der Spieler aus den \"USA\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "und",
            "Geburtsdaten",
            "der",
            "Spieler",
            "aus",
            "den",
            "``",
            "USA",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the average age of losers and winners of all matches.",
        "query": "SELECT avg(verlierer_alter) , avg(alter_des_gewinners) FROM spiele",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "verlierer_alter",
            ")",
            ",",
            "avg",
            "(",
            "alter_des_gewinners",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT avg(verlierer_alter) , avg(alter_des_gewinners) FROM spiele",
        "question": "Finde das Durchschnittsalter der Verlierer und Gewinner aller Spiele.",
        "question_toks": [
            "Finde",
            "das",
            "Durchschnittsalter",
            "der",
            "Verlierer",
            "und",
            "Gewinner",
            "aller",
            "Spiele",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the average ages of losers and winners across matches?",
        "query": "SELECT avg(verlierer_alter) , avg(alter_des_gewinners) FROM spiele",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "verlierer_alter",
            ")",
            ",",
            "avg",
            "(",
            "alter_des_gewinners",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT avg(verlierer_alter) , avg(alter_des_gewinners) FROM spiele",
        "question": "Wie alt sind die Verlierer und Gewinner der Spiele im Durchschnitt?",
        "question_toks": [
            "Wie",
            "alt",
            "sind",
            "die",
            "Verlierer",
            "und",
            "Gewinner",
            "der",
            "Spiele",
            "im",
            "Durchschnitt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the average rank of winners in all matches.",
        "query": "SELECT avg(sieger_rang) FROM spiele",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "sieger_rang",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT avg(sieger_rang) FROM spiele",
        "question": "Finde den durchschnittlichen Rang der Gewinner in allen Spielen.",
        "question_toks": [
            "Finde",
            "den",
            "durchschnittlichen",
            "Rang",
            "der",
            "Gewinner",
            "in",
            "allen",
            "Spielen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the average rank for winners in all matches?",
        "query": "SELECT avg(sieger_rang) FROM spiele",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "sieger_rang",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT avg(sieger_rang) FROM spiele",
        "question": "Wie hoch ist die durchschnittliche Platzierung der Gewinner in allen Spielen?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Platzierung",
            "der",
            "Gewinner",
            "in",
            "allen",
            "Spielen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the highest rank of losers in all matches.",
        "query": "SELECT min(verlierer_rang) FROM spiele",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "verlierer_rang",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT min(verlierer_rang) FROM spiele",
        "question": "Finde den höchsten Rang der Verlierer in allen Spielen.",
        "question_toks": [
            "Finde",
            "den",
            "höchsten",
            "Rang",
            "der",
            "Verlierer",
            "in",
            "allen",
            "Spielen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the best rank of losers across all matches?",
        "query": "SELECT min(verlierer_rang) FROM spiele",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "verlierer_rang",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT min(verlierer_rang) FROM spiele",
        "question": "Was ist die beste Platzierung der Verlierer über alle Spiele hinweg?",
        "question_toks": [
            "Was",
            "ist",
            "die",
            "beste",
            "Platzierung",
            "der",
            "Verlierer",
            "über",
            "alle",
            "Spiele",
            "hinweg",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "find the number of distinct country codes of all players.",
        "query": "SELECT count(DISTINCT ländercode) FROM spieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "ländercode",
            ")",
            "FROM",
            "spieler"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT ländercode) FROM spieler",
        "question": "die Anzahl der unterschiedlichen Ländercodes aller Spieler ermitteln.",
        "question_toks": [
            "die",
            "Anzahl",
            "der",
            "unterschiedlichen",
            "Ländercodes",
            "aller",
            "Spieler",
            "ermitteln",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many distinct countries do players come from?",
        "query": "SELECT count(DISTINCT ländercode) FROM spieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "ländercode",
            ")",
            "FROM",
            "spieler"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT ländercode) FROM spieler",
        "question": "Aus wie vielen verschiedenen Ländern kommen die Spieler/innen?",
        "question_toks": [
            "Aus",
            "wie",
            "vielen",
            "verschiedenen",
            "Ländern",
            "kommen",
            "die",
            "Spieler/innen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the number of distinct name of losers.",
        "query": "SELECT count(DISTINCT verlierer_name) FROM spiele",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "verlierer_name",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT verlierer_name) FROM spiele",
        "question": "Finde die Anzahl der eindeutigen Namen von Verlierern.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "eindeutigen",
            "Namen",
            "von",
            "Verlierern",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many different loser names are there?",
        "query": "SELECT count(DISTINCT verlierer_name) FROM spiele",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "verlierer_name",
            ")",
            "FROM",
            "spiele"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT verlierer_name) FROM spiele",
        "question": "Wie viele verschiedene Verlierernamen gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Verlierernamen",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the name of tourney that has more than 10 matches.",
        "query": "SELECT turniername FROM spiele GROUP BY turniername HAVING count(*) > 10",
        "query_toks": [
            "SELECT",
            "turniername",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "turniername",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "turniername",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "turniername",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde den Namen des Turniers, das mehr als 10 Spiele hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "des",
            "Turniers",
            ",",
            "das",
            "mehr",
            "als",
            "10",
            "Spiele",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the names of tournaments that have more than 10 matches?",
        "query": "SELECT turniername FROM spiele GROUP BY turniername HAVING count(*) > 10",
        "query_toks": [
            "SELECT",
            "turniername",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "turniername",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "turniername",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "turniername",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie heißen die Turniere, die mehr als 10 Spiele haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Turniere",
            ",",
            "die",
            "mehr",
            "als",
            "10",
            "Spiele",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "List the names of all winners who played in both 2013 and 2016.",
        "query": "SELECT gewinner_name FROM spiele WHERE jahr = 2013 INTERSECT SELECT gewinner_name FROM spiele WHERE jahr = 2016",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2013",
            "INTERSECT",
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value"
        ],
        "question": "Nenne die Namen aller Gewinner, die sowohl 2013 als auch 2016 gespielt haben.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "aller",
            "Gewinner",
            ",",
            "die",
            "sowohl",
            "2013",
            "als",
            "auch",
            "2016",
            "gespielt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ],
                        2016.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the names of players who won in both 2013 and 2016?",
        "query": "SELECT gewinner_name FROM spiele WHERE jahr = 2013 INTERSECT SELECT gewinner_name FROM spiele WHERE jahr = 2016",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2013",
            "INTERSECT",
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Spieler, die sowohl 2013 als auch 2016 gewonnen haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Spieler",
            ",",
            "die",
            "sowohl",
            "2013",
            "als",
            "auch",
            "2016",
            "gewonnen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ],
                        2016.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "List the number of all matches who played in years of 2013 or 2016.",
        "query": "SELECT count(*) FROM spiele WHERE jahr = 2013 OR jahr = 2016",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2013",
            "OR",
            "jahr",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value",
            "OR",
            "jahr",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl aller Spiele an, die in den Jahren 2013 oder 2016 gespielt wurden.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "aller",
            "Spiele",
            "an",
            ",",
            "die",
            "in",
            "den",
            "Jahren",
            "2013",
            "oder",
            "2016",
            "gespielt",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2016.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many matches were played in 2013 or 2016?",
        "query": "SELECT count(*) FROM spiele WHERE jahr = 2013 OR jahr = 2016",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "2013",
            "OR",
            "jahr",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "jahr",
            "=",
            "value",
            "OR",
            "jahr",
            "=",
            "value"
        ],
        "question": "Wie viele Spiele wurden 2013 oder 2016 gespielt?",
        "question_toks": [
            "Wie",
            "viele",
            "Spiele",
            "wurden",
            "2013",
            "oder",
            "2016",
            "gespielt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2016.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "query": "SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id WHERE T2.turniername = 'WTA Championships' INTERSECT SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id WHERE T2.turniername = 'Australian Open'",
        "query_toks": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "'WTA",
            "Championships",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "'Australian",
            "Open",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "value"
        ],
        "question": "Wie lauten der Ländercode und die Vornamen der Spielerinnen, die bei den \"WTA Championships\" und den \"Australian Open\" gewonnen haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Ländercode",
            "und",
            "die",
            "Vornamen",
            "der",
            "Spielerinnen",
            ",",
            "die",
            "bei",
            "den",
            "``",
            "WTA",
            "Championships",
            "''",
            "und",
            "den",
            "``",
            "Australian",
            "Open",
            "''",
            "gewonnen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Australian Open\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "query": "SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id WHERE T2.turniername = 'WTA Championships' INTERSECT SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id WHERE T2.turniername = 'Australian Open'",
        "query_toks": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "'WTA",
            "Championships",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "'Australian",
            "Open",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "WHERE",
            "T2.turniername",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vornamen und Ländercodes der Spielerinnen, die sowohl die \"WTA Championships\" als auch die \"Australian Open\" gewonnen haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "und",
            "Ländercodes",
            "der",
            "Spielerinnen",
            ",",
            "die",
            "sowohl",
            "die",
            "``",
            "WTA",
            "Championships",
            "''",
            "als",
            "auch",
            "die",
            "``",
            "Australian",
            "Open",
            "''",
            "gewonnen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Australian Open\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the first name and country code of the oldest player.",
        "query": "SELECT vorname , ländercode FROM spieler ORDER BY geburtsdatum LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Vornamen und die Landesvorwahl des ältesten Spielers.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "und",
            "die",
            "Landesvorwahl",
            "des",
            "ältesten",
            "Spielers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the first name and country code of the oldest player?",
        "query": "SELECT vorname , ländercode FROM spieler ORDER BY geburtsdatum LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Vorname und der Ländercode des ältesten Spielers?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorname",
            "und",
            "der",
            "Ländercode",
            "des",
            "ältesten",
            "Spielers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "List the first and last name of all players in the order of birth date.",
        "query": "SELECT vorname , nachname FROM spieler ORDER BY geburtsdatum",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "query_toks_no_value": "SELECT vorname , nachname FROM spieler ORDER BY geburtsdatum",
        "question": "Gib den Vor- und Nachnamen aller Spieler/innen in der Reihenfolge ihres Geburtsdatums an.",
        "question_toks": [
            "Gib",
            "den",
            "Vor-",
            "und",
            "Nachnamen",
            "aller",
            "Spieler/innen",
            "in",
            "der",
            "Reihenfolge",
            "ihres",
            "Geburtsdatums",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the full names of all players, sorted by birth date?",
        "query": "SELECT vorname , nachname FROM spieler ORDER BY geburtsdatum",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "query_toks_no_value": "SELECT vorname , nachname FROM spieler ORDER BY geburtsdatum",
        "question": "Wie lauten die vollständigen Namen aller Spieler, sortiert nach Geburtsdatum?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "vollständigen",
            "Namen",
            "aller",
            "Spieler",
            ",",
            "sortiert",
            "nach",
            "Geburtsdatum",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "query": "SELECT vorname , nachname FROM spieler WHERE hand = 'L' ORDER BY geburtsdatum",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "WHERE",
            "hand",
            "=",
            "'",
            "L",
            "'",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "WHERE",
            "hand",
            "=",
            "value",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "question": "Gib \"L\" Vor- und Nachnamen aller Spieler/innen an, die linke / linke Hand sind, in der Reihenfolge ihres Geburtsdatums.",
        "question_toks": [
            "Gib",
            "``",
            "L",
            "''",
            "Vor-",
            "und",
            "Nachnamen",
            "aller",
            "Spieler/innen",
            "an",
            ",",
            "die",
            "linke",
            "/",
            "linke",
            "Hand",
            "sind",
            ",",
            "in",
            "der",
            "Reihenfolge",
            "ihres",
            "Geburtsdatums",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the full names of all left handed players, in order of birth date?",
        "query": "SELECT vorname , nachname FROM spieler WHERE hand = 'L' ORDER BY geburtsdatum",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "WHERE",
            "hand",
            "=",
            "'",
            "L",
            "'",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            "FROM",
            "spieler",
            "WHERE",
            "hand",
            "=",
            "value",
            "ORDER",
            "BY",
            "geburtsdatum"
        ],
        "question": "Wie lauten die vollständigen Namen aller linkshändigen Spieler, in der Reihenfolge ihres Geburtsdatums?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "vollständigen",
            "Namen",
            "aller",
            "linkshändigen",
            "Spieler",
            ",",
            "in",
            "der",
            "Reihenfolge",
            "ihres",
            "Geburtsdatums",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the first name and country code of the player who did the most number of tours.",
        "query": "SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id ORDER BY T2.touren DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "ORDER",
            "BY",
            "T2.touren",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "ORDER",
            "BY",
            "T2.touren",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Vornamen und den Ländercode des Spielers, der die meisten Touren gemacht hat.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "und",
            "den",
            "Ländercode",
            "des",
            "Spielers",
            ",",
            "der",
            "die",
            "meisten",
            "Touren",
            "gemacht",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the first name and country code of the player with the most tours?",
        "query": "SELECT T1.ländercode , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id ORDER BY T2.touren DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "ORDER",
            "BY",
            "T2.touren",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.ländercode",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "ORDER",
            "BY",
            "T2.touren",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Vorname und der Ländercode des Spielers mit den meisten Touren?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorname",
            "und",
            "der",
            "Ländercode",
            "des",
            "Spielers",
            "mit",
            "den",
            "meisten",
            "Touren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the year that has the most number of matches.",
        "query": "SELECT jahr FROM spiele GROUP BY jahr ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde das Jahr, das die meisten Übereinstimmungen hat.",
        "question_toks": [
            "Finde",
            "das",
            "Jahr",
            ",",
            "das",
            "die",
            "meisten",
            "Übereinstimmungen",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Which year had the most matches?",
        "query": "SELECT jahr FROM spiele GROUP BY jahr ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches Jahr hatte die meisten Spiele?",
        "question_toks": [
            "Welches",
            "Jahr",
            "hatte",
            "die",
            "meisten",
            "Spiele",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the name and rank points of the winner who won the most times.",
        "query": "SELECT gewinner_name , gewinner_rang_punkte FROM spiele GROUP BY gewinner_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            ",",
            "gewinner_rang_punkte",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "gewinner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            ",",
            "gewinner_rang_punkte",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "gewinner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen und die Rangpunkte des Gewinners, der am häufigsten gewonnen hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "und",
            "die",
            "Rangpunkte",
            "des",
            "Gewinners",
            ",",
            "der",
            "am",
            "häufigsten",
            "gewonnen",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "query": "SELECT gewinner_name , gewinner_rang_punkte FROM spiele GROUP BY gewinner_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            ",",
            "gewinner_rang_punkte",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "gewinner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            ",",
            "gewinner_rang_punkte",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "gewinner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name des Gewinners, der die meisten Spiele gewonnen hat, und wie viele Rangpunkte hat dieser Spieler?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Gewinners",
            ",",
            "der",
            "die",
            "meisten",
            "Spiele",
            "gewonnen",
            "hat",
            ",",
            "und",
            "wie",
            "viele",
            "Rangpunkte",
            "hat",
            "dieser",
            "Spieler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "query": "SELECT gewinner_name FROM spiele WHERE turniername = 'Australian Open' ORDER BY gewinner_rang_punkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "'Australian",
            "Open",
            "'",
            "ORDER",
            "BY",
            "gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "value",
            "ORDER",
            "BY",
            "gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen des Gewinners, der die meisten Rangpunkte hat und am \"Australian Open\" Turnier teilgenommen hat.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "des",
            "Gewinners",
            ",",
            "der",
            "die",
            "meisten",
            "Rangpunkte",
            "hat",
            "und",
            "am",
            "``",
            "Australian",
            "Open",
            "''",
            "Turnier",
            "teilgenommen",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Australian Open\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "query": "SELECT gewinner_name FROM spiele WHERE turniername = 'Australian Open' ORDER BY gewinner_rang_punkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "'Australian",
            "Open",
            "'",
            "ORDER",
            "BY",
            "gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "value",
            "ORDER",
            "BY",
            "gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Gewinner mit den meisten Ranglistenpunkten, der an den \"Australian Open\" teilgenommen hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Gewinner",
            "mit",
            "den",
            "meisten",
            "Ranglistenpunkten",
            ",",
            "der",
            "an",
            "den",
            "``",
            "Australian",
            "Open",
            "''",
            "teilgenommen",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Australian Open\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "find the names of loser and winner who played in the match with greatest number of minutes.",
        "query": "SELECT gewinner_name , verlierer_name FROM spiele ORDER BY minuten DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            ",",
            "verlierer_name",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "minuten",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            ",",
            "verlierer_name",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "minuten",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Namen des Verlierers und des Gewinners, die in dem Spiel mit der größten Anzahl an Minuten gespielt haben.",
        "question_toks": [
            "Finde",
            "die",
            "Namen",
            "des",
            "Verlierers",
            "und",
            "des",
            "Gewinners",
            ",",
            "die",
            "in",
            "dem",
            "Spiel",
            "mit",
            "der",
            "größten",
            "Anzahl",
            "an",
            "Minuten",
            "gespielt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the names of the winner and loser who played in the longest match?",
        "query": "SELECT gewinner_name , verlierer_name FROM spiele ORDER BY minuten DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "gewinner_name",
            ",",
            "verlierer_name",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "minuten",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gewinner_name",
            ",",
            "verlierer_name",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "minuten",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißen der Gewinner und der Verlierer des längsten Matches?",
        "question_toks": [
            "Wie",
            "heißen",
            "der",
            "Gewinner",
            "und",
            "der",
            "Verlierer",
            "des",
            "längsten",
            "Matches",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the average ranking for each player and their first name.",
        "query": "SELECT avg(rangliste) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "rangliste",
            ")",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "GROUP",
            "BY",
            "T1.vorname"
        ],
        "query_toks_no_value": "SELECT avg(rangliste) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "question": "Finde die durchschnittliche Platzierung für jeden Spieler und seinen Vornamen.",
        "question_toks": [
            "Finde",
            "die",
            "durchschnittliche",
            "Platzierung",
            "für",
            "jeden",
            "Spieler",
            "und",
            "seinen",
            "Vornamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the first names of all players, and their average rankings?",
        "query": "SELECT avg(rangliste) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "rangliste",
            ")",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "GROUP",
            "BY",
            "T1.vorname"
        ],
        "query_toks_no_value": "SELECT avg(rangliste) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "question": "Wie lauten die Vornamen aller Spieler und ihre durchschnittliche Platzierung?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "aller",
            "Spieler",
            "und",
            "ihre",
            "durchschnittliche",
            "Platzierung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the total ranking points for each player and their first name.",
        "query": "SELECT sum(ranglistenpunkte) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "ranglistenpunkte",
            ")",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "GROUP",
            "BY",
            "T1.vorname"
        ],
        "query_toks_no_value": "SELECT sum(ranglistenpunkte) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "question": "Finde die Gesamtpunktzahl für jeden Spieler und seinen Vornamen.",
        "question_toks": [
            "Finde",
            "die",
            "Gesamtpunktzahl",
            "für",
            "jeden",
            "Spieler",
            "und",
            "seinen",
            "Vornamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the first names of all players, and their total ranking points?",
        "query": "SELECT sum(ranglistenpunkte) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "ranglistenpunkte",
            ")",
            ",",
            "T1.vorname",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "ranglisten",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.spieler_id",
            "GROUP",
            "BY",
            "T1.vorname"
        ],
        "query_toks_no_value": "SELECT sum(ranglistenpunkte) , T1.vorname FROM spieler AS T1 JOIN ranglisten AS T2 ON T1.spieler_id = T2.spieler_id GROUP BY T1.vorname",
        "question": "Wie lauten die Vornamen aller Spieler und ihre Gesamtpunktzahl?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "aller",
            "Spieler",
            "und",
            "ihre",
            "Gesamtpunktzahl",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "find the number of players for each country.",
        "query": "SELECT count(*) , ländercode FROM spieler GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": "SELECT count(*) , ländercode FROM spieler GROUP BY ländercode",
        "question": "finde die Anzahl der Spieler für jedes Land.",
        "question_toks": [
            "finde",
            "die",
            "Anzahl",
            "der",
            "Spieler",
            "für",
            "jedes",
            "Land",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many players are from each country?",
        "query": "SELECT count(*) , ländercode FROM spieler GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": "SELECT count(*) , ländercode FROM spieler GROUP BY ländercode",
        "question": "Wie viele Spieler/innen kommen aus jedem Land?",
        "question_toks": [
            "Wie",
            "viele",
            "Spieler/innen",
            "kommen",
            "aus",
            "jedem",
            "Land",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "find the code of the country where has the greatest number of players.",
        "query": "SELECT ländercode FROM spieler GROUP BY ländercode ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Code des Landes, in dem es die meisten Spieler gibt.",
        "question_toks": [
            "Finde",
            "den",
            "Code",
            "des",
            "Landes",
            ",",
            "in",
            "dem",
            "es",
            "die",
            "meisten",
            "Spieler",
            "gibt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the code of the country with the most players?",
        "query": "SELECT ländercode FROM spieler GROUP BY ländercode ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Code des Landes, das die meisten Spieler hat?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Code",
            "des",
            "Landes",
            ",",
            "das",
            "die",
            "meisten",
            "Spieler",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the codes of countries that have more than 50 players.",
        "query": "SELECT ländercode FROM spieler GROUP BY ländercode HAVING count(*) > 50",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "50"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde die Codes der Länder, die mehr als 50 Spieler haben.",
        "question_toks": [
            "Finde",
            "die",
            "Codes",
            "der",
            "Länder",
            ",",
            "die",
            "mehr",
            "als",
            "50",
            "Spieler",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the codes of countries with more than 50 players?",
        "query": "SELECT ländercode FROM spieler GROUP BY ländercode HAVING count(*) > 50",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "50"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "ländercode",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie lauten die Codes der Länder mit mehr als 50 Spielern?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "der",
            "Länder",
            "mit",
            "mehr",
            "als",
            "50",
            "Spielern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the total number of tours for each ranking date.",
        "query": "SELECT sum(touren) , rangliste_datum FROM ranglisten GROUP BY rangliste_datum",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "touren",
            ")",
            ",",
            "rangliste_datum",
            "FROM",
            "ranglisten",
            "GROUP",
            "BY",
            "rangliste_datum"
        ],
        "query_toks_no_value": "SELECT sum(touren) , rangliste_datum FROM ranglisten GROUP BY rangliste_datum",
        "question": "Finde die Gesamtzahl der Touren für jedes Ranglistendatum.",
        "question_toks": [
            "Finde",
            "die",
            "Gesamtzahl",
            "der",
            "Touren",
            "für",
            "jedes",
            "Ranglistendatum",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    39,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many total tours were there for each ranking date?",
        "query": "SELECT sum(touren) , rangliste_datum FROM ranglisten GROUP BY rangliste_datum",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "touren",
            ")",
            ",",
            "rangliste_datum",
            "FROM",
            "ranglisten",
            "GROUP",
            "BY",
            "rangliste_datum"
        ],
        "query_toks_no_value": "SELECT sum(touren) , rangliste_datum FROM ranglisten GROUP BY rangliste_datum",
        "question": "Wie viele Touren gab es insgesamt für jedes Ranglistendatum?",
        "question_toks": [
            "Wie",
            "viele",
            "Touren",
            "gab",
            "es",
            "insgesamt",
            "für",
            "jedes",
            "Ranglistendatum",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    39,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the number of matches happened in each year.",
        "query": "SELECT count(*) , jahr FROM spiele GROUP BY jahr",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr"
        ],
        "query_toks_no_value": "SELECT count(*) , jahr FROM spiele GROUP BY jahr",
        "question": "Finde die Anzahl der Spiele, die in jedem Jahr stattgefunden haben.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Spiele",
            ",",
            "die",
            "in",
            "jedem",
            "Jahr",
            "stattgefunden",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many matches were played in each year?",
        "query": "SELECT count(*) , jahr FROM spiele GROUP BY jahr",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "jahr",
            "FROM",
            "spiele",
            "GROUP",
            "BY",
            "jahr"
        ],
        "query_toks_no_value": "SELECT count(*) , jahr FROM spiele GROUP BY jahr",
        "question": "Wie viele Spiele wurden in jedem Jahr gespielt?",
        "question_toks": [
            "Wie",
            "viele",
            "Spiele",
            "wurden",
            "in",
            "jedem",
            "Jahr",
            "gespielt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the name and rank of the 3 youngest winners across all matches.",
        "query": "SELECT DISTINCT gewinner_name , sieger_rang FROM spiele ORDER BY alter_des_gewinners LIMIT 3",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "gewinner_name",
            ",",
            "sieger_rang",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "alter_des_gewinners",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "gewinner_name",
            ",",
            "sieger_rang",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "alter_des_gewinners",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen und den Rang der \"3\" jüngsten Gewinner aller Spiele.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "und",
            "den",
            "Rang",
            "der",
            "``",
            "3",
            "''",
            "jüngsten",
            "Gewinner",
            "aller",
            "Spiele",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What are the names and ranks of the three youngest winners across all matches?",
        "query": "SELECT DISTINCT gewinner_name , sieger_rang FROM spiele ORDER BY alter_des_gewinners LIMIT 3",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "gewinner_name",
            ",",
            "sieger_rang",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "alter_des_gewinners",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "gewinner_name",
            ",",
            "sieger_rang",
            "FROM",
            "spiele",
            "ORDER",
            "BY",
            "alter_des_gewinners",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Namen und Ränge der drei jüngsten Sieger in allen Spielen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Ränge",
            "der",
            "drei",
            "jüngsten",
            "Sieger",
            "in",
            "allen",
            "Spielen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many different winners both participated in the WTA Championships and were left handed?",
        "query": "SELECT count(DISTINCT gewinner_name) FROM spiele WHERE turniername = 'WTA Championships' AND gewinner_hand = 'L'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "gewinner_name",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "'WTA",
            "Championships",
            "'",
            "AND",
            "gewinner_hand",
            "=",
            "'",
            "L",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "gewinner_name",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "value",
            "AND",
            "gewinner_hand",
            "=",
            "value"
        ],
        "question": "Wie viele verschiedene Siegerinnen haben an \"WTA Championships\" teilgenommen und waren beide Linkshänderinnen?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Siegerinnen",
            "haben",
            "an",
            "``",
            "WTA",
            "Championships",
            "''",
            "teilgenommen",
            "und",
            "waren",
            "beide",
            "Linkshänderinnen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                34,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the number of left handed winners who participated in the WTA Championships.",
        "query": "SELECT count(DISTINCT gewinner_name) FROM spiele WHERE turniername = 'WTA Championships' AND gewinner_hand = 'L'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "gewinner_name",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "'WTA",
            "Championships",
            "'",
            "AND",
            "gewinner_hand",
            "=",
            "'",
            "L",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "gewinner_name",
            ")",
            "FROM",
            "spiele",
            "WHERE",
            "turniername",
            "=",
            "value",
            "AND",
            "gewinner_hand",
            "=",
            "value"
        ],
        "question": "Finde die Anzahl der Linkshänderinnen, die an \"WTA Championships\" teilgenommen haben.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Linkshänderinnen",
            ",",
            "die",
            "an",
            "``",
            "WTA",
            "Championships",
            "''",
            "teilgenommen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                34,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "query": "SELECT T1.vorname , T1.ländercode , T1.geburtsdatum FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id ORDER BY T2.gewinner_rang_punkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.ländercode",
            ",",
            "T1.geburtsdatum",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "ORDER",
            "BY",
            "T2.gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.ländercode",
            ",",
            "T1.geburtsdatum",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "ORDER",
            "BY",
            "T2.gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Vornamen, die Landesvorwahl und das Geburtsdatum des Gewinners, der die meisten Rangpunkte in allen Spielen hat.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            ",",
            "die",
            "Landesvorwahl",
            "und",
            "das",
            "Geburtsdatum",
            "des",
            "Gewinners",
            ",",
            "der",
            "die",
            "meisten",
            "Rangpunkte",
            "in",
            "allen",
            "Spielen",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "query": "SELECT T1.vorname , T1.ländercode , T1.geburtsdatum FROM spieler AS T1 JOIN spiele AS T2 ON T1.spieler_id = T2.gewinner_id ORDER BY T2.gewinner_rang_punkte DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.ländercode",
            ",",
            "T1.geburtsdatum",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "ORDER",
            "BY",
            "T2.gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.ländercode",
            ",",
            "T1.geburtsdatum",
            "FROM",
            "spieler",
            "AS",
            "T1",
            "JOIN",
            "spiele",
            "AS",
            "T2",
            "ON",
            "T1.spieler_id",
            "=",
            "T2.gewinner_id",
            "ORDER",
            "BY",
            "T2.gewinner_rang_punkte",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten der Vorname, die Landesvorwahl und das Geburtsdatum des Spielers mit den meisten Siegpunkten in allen Spielen?",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Vorname",
            ",",
            "die",
            "Landesvorwahl",
            "und",
            "das",
            "Geburtsdatum",
            "des",
            "Spielers",
            "mit",
            "den",
            "meisten",
            "Siegpunkten",
            "in",
            "allen",
            "Spielen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "Find the number of players for each hand type.",
        "query": "SELECT count(*) , hand FROM spieler GROUP BY hand",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "hand"
        ],
        "query_toks_no_value": "SELECT count(*) , hand FROM spieler GROUP BY hand",
        "question": "Finde die Anzahl der Spieler für jede Handart.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Spieler",
            "für",
            "jede",
            "Handart",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "match": "How many players are there for each hand type?",
        "query": "SELECT count(*) , hand FROM spieler GROUP BY hand",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "FROM",
            "spieler",
            "GROUP",
            "BY",
            "hand"
        ],
        "query_toks_no_value": "SELECT count(*) , hand FROM spieler GROUP BY hand",
        "question": "Wie viele Spieler gibt es für jede Handart?",
        "question_toks": [
            "Wie",
            "viele",
            "Spieler",
            "gibt",
            "es",
            "für",
            "jede",
            "Handart",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "How many ships ended up being 'Captured'?",
        "query": "SELECT count(*) FROM schiff WHERE disposition_des_schiffes = 'Captured'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schiff",
            "WHERE",
            "disposition_des_schiffes",
            "=",
            "'Captured",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schiff",
            "WHERE",
            "disposition_des_schiffes",
            "=",
            "value"
        ],
        "question": "Wie viele Schiffe wurden am Ende \"\"Captured\"\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Schiffe",
            "wurden",
            "am",
            "Ende",
            "``",
            "''",
            "Captured",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"Captured\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "query": "SELECT name , tonnage FROM schiff ORDER BY name DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "tonnage",
            "FROM",
            "schiff",
            "ORDER",
            "BY",
            "name",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name , tonnage FROM schiff ORDER BY name DESC",
        "question": "Gib den Namen und die Tonnage in absteigender alphabetischer Reihenfolge der Namen an.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            "und",
            "die",
            "Tonnage",
            "in",
            "absteigender",
            "alphabetischer",
            "Reihenfolge",
            "der",
            "Namen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "List the name, date and result of each battle.",
        "query": "SELECT name , datum FROM schlacht",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "datum",
            "FROM",
            "schlacht"
        ],
        "query_toks_no_value": "SELECT name , datum FROM schlacht",
        "question": "Schreibe den Namen, das Datum und das Ergebnis jeder Schlacht auf.",
        "question_toks": [
            "Schreibe",
            "den",
            "Namen",
            ",",
            "das",
            "Datum",
            "und",
            "das",
            "Ergebnis",
            "jeder",
            "Schlacht",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What is maximum and minimum death toll caused each time?",
        "query": "SELECT max(getötet) , min(getötet) FROM tod",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "getötet",
            ")",
            ",",
            "min",
            "(",
            "getötet",
            ")",
            "FROM",
            "tod"
        ],
        "query_toks_no_value": "SELECT max(getötet) , min(getötet) FROM tod",
        "question": "Wie hoch ist die maximale und minimale Zahl der Todesopfer, die jedes Mal zu beklagen sind?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "maximale",
            "und",
            "minimale",
            "Zahl",
            "der",
            "Todesopfer",
            ",",
            "die",
            "jedes",
            "Mal",
            "zu",
            "beklagen",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What is the average number of injuries caused each time?",
        "query": "SELECT avg(verletzt) FROM tod",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "verletzt",
            ")",
            "FROM",
            "tod"
        ],
        "query_toks_no_value": "SELECT avg(verletzt) FROM tod",
        "question": "Wie hoch ist die durchschnittliche Anzahl der Verletzungen, die jedes Mal verursacht werden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Anzahl",
            "der",
            "Verletzungen",
            ",",
            "die",
            "jedes",
            "Mal",
            "verursacht",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "query": "SELECT T1.getötet , T1.verletzt FROM tod AS T1 JOIN schiff AS t2 ON T1.verursacht_durch_schiff_id = T2.id WHERE T2.tonnage = 't'",
        "query_toks": [
            "SELECT",
            "T1.getötet",
            ",",
            "T1.verletzt",
            "FROM",
            "tod",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "t2",
            "ON",
            "T1.verursacht_durch_schiff_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.tonnage",
            "=",
            "'t",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.getötet",
            ",",
            "T1.verletzt",
            "FROM",
            "tod",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "t2",
            "ON",
            "T1.verursacht_durch_schiff_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.tonnage",
            "=",
            "value"
        ],
        "question": "Wie viele Tote und Verletzte hat das Schiff mit der Tonnage \"\"t\"\" zu beklagen?",
        "question_toks": [
            "Wie",
            "viele",
            "Tote",
            "und",
            "Verletzte",
            "hat",
            "das",
            "Schiff",
            "mit",
            "der",
            "Tonnage",
            "``",
            "''",
            "t",
            "''",
            "''",
            "zu",
            "beklagen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "query": "SELECT name , ergebnis FROM schlacht WHERE bulgarischer_kommandant != 'Boril'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "ergebnis",
            "FROM",
            "schlacht",
            "WHERE",
            "bulgarischer_kommandant",
            "!",
            "=",
            "'Boril",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "ergebnis",
            "FROM",
            "schlacht",
            "WHERE",
            "bulgarischer_kommandant",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen und Ergebnisse der Schlachten, wenn der bulgarische Kommandant nicht \"\"Boril\"\" heißt?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Ergebnisse",
            "der",
            "Schlachten",
            ",",
            "wenn",
            "der",
            "bulgarische",
            "Kommandant",
            "nicht",
            "``",
            "''",
            "Boril",
            "''",
            "''",
            "heißt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Boril\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "query": "SELECT DISTINCT T1.id , T1.name FROM schlacht AS T1 JOIN schiff AS T2 ON T1.id = T2.im_kampf_verloren WHERE T2.schiffstyp = 'Brig'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.schiffstyp",
            "=",
            "'Brig",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.schiffstyp",
            "=",
            "value"
        ],
        "question": "Wie lauten die verschiedenen Kennungen und Namen der Schlachten, in denen Schiffe vom Typ \"\"Brig\"\" verloren gingen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "verschiedenen",
            "Kennungen",
            "und",
            "Namen",
            "der",
            "Schlachten",
            ",",
            "in",
            "denen",
            "Schiffe",
            "vom",
            "Typ",
            "``",
            "''",
            "Brig",
            "''",
            "''",
            "verloren",
            "gingen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Brig\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "query": "SELECT T1.id , T1.name FROM schlacht AS T1 JOIN schiff AS T2 ON T1.id = T2.im_kampf_verloren JOIN tod AS T3 ON T2.id = T3.verursacht_durch_schiff_id GROUP BY T1.id HAVING sum(T3.getötet) > 10",
        "query_toks": [
            "SELECT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "JOIN",
            "tod",
            "AS",
            "T3",
            "ON",
            "T2.id",
            "=",
            "T3.verursacht_durch_schiff_id",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "sum",
            "(",
            "T3.getötet",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "JOIN",
            "tod",
            "AS",
            "T3",
            "ON",
            "T2.id",
            "=",
            "T3.verursacht_durch_schiff_id",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "sum",
            "(",
            "T3.getötet",
            ")",
            ">",
            "value"
        ],
        "question": "Wie lauten die IDs und Namen der Kämpfe, bei denen insgesamt mehr als 10 Menschen getötet wurden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "IDs",
            "und",
            "Namen",
            "der",
            "Kämpfe",
            ",",
            "bei",
            "denen",
            "insgesamt",
            "mehr",
            "als",
            "10",
            "Menschen",
            "getötet",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            4,
                            17,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What is the ship id and name that caused most total injuries?",
        "query": "SELECT T2.id , T2.name FROM tod AS T1 JOIN schiff AS t2 ON T1.verursacht_durch_schiff_id = T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.id",
            ",",
            "T2.name",
            "FROM",
            "tod",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "t2",
            "ON",
            "T1.verursacht_durch_schiff_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.id",
            ",",
            "T2.name",
            "FROM",
            "tod",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "t2",
            "ON",
            "T1.verursacht_durch_schiff_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches ist das Schiff, das die meisten Verletzungen verursacht hat?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Schiff",
            ",",
            "das",
            "die",
            "meisten",
            "Verletzungen",
            "verursacht",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "query": "SELECT name FROM schlacht WHERE bulgarischer_kommandant = 'Kaloyan' AND lateinischer_befehlshaber = 'Baldwin I'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "schlacht",
            "WHERE",
            "bulgarischer_kommandant",
            "=",
            "'Kaloyan",
            "'",
            "AND",
            "lateinischer_befehlshaber",
            "=",
            "'Baldwin",
            "I",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "schlacht",
            "WHERE",
            "bulgarischer_kommandant",
            "=",
            "value",
            "AND",
            "lateinischer_befehlshaber",
            "=",
            "value"
        ],
        "question": "Wie lauten die unterschiedlichen Kampfnamen zwischen dem bulgarischen Feldherrn \"\"Kaloyan\"\" und dem lateinischen Feldherrn \"\"Baldwin I\".\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "unterschiedlichen",
            "Kampfnamen",
            "zwischen",
            "dem",
            "bulgarischen",
            "Feldherrn",
            "``",
            "''",
            "Kaloyan",
            "''",
            "''",
            "und",
            "dem",
            "lateinischen",
            "Feldherrn",
            "``",
            "''",
            "Baldwin",
            "I",
            "''",
            ".",
            "``",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Kaloyan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Baldwin I\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "How many different results are there for the battles?",
        "query": "SELECT count(DISTINCT ergebnis) FROM schlacht",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "ergebnis",
            ")",
            "FROM",
            "schlacht"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT ergebnis) FROM schlacht",
        "question": "Wie viele verschiedene Ergebnisse gibt es für die Battles?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Ergebnisse",
            "gibt",
            "es",
            "für",
            "die",
            "Battles",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "How many battles did not lose any ship with tonnage '225'?",
        "query": "SELECT count(*) FROM schlacht WHERE id NOT IN ( SELECT im_kampf_verloren FROM schiff WHERE tonnage = '225' );",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schlacht",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "im_kampf_verloren",
            "FROM",
            "schiff",
            "WHERE",
            "tonnage",
            "=",
            "'225",
            "'",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "schlacht",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "im_kampf_verloren",
            "FROM",
            "schiff",
            "WHERE",
            "tonnage",
            "=",
            "value",
            ")",
            ";"
        ],
        "question": "Wie viele Schlachten haben kein Schiff mit der Tonnage \"\"225\"\" verloren?",
        "question_toks": [
            "Wie",
            "viele",
            "Schlachten",
            "haben",
            "kein",
            "Schiff",
            "mit",
            "der",
            "Tonnage",
            "``",
            "''",
            "225",
            "''",
            "''",
            "verloren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"225\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "query": "SELECT T1.name , T1.datum FROM schlacht AS T1 JOIN schiff AS T2 ON T1.id = T2.im_kampf_verloren WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name , T1.datum FROM schlacht AS T1 JOIN schiff AS T2 ON T1.id = T2.im_kampf_verloren WHERE T2.name = 'HMS Atalanta'",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.datum",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.name",
            "=",
            "'Lettice",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.name",
            ",",
            "T1.datum",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.name",
            "=",
            "'HMS",
            "Atalanta",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            ",",
            "T1.datum",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.name",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            ",",
            "T1.datum",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Nenne den Namen und das Datum der Schlacht, in der das Schiff namens \"\"Lettice\"\" und das Schiff namens \"\"HMS Atalanta\"\" verloren haben",
        "question_toks": [
            "Nenne",
            "den",
            "Namen",
            "und",
            "das",
            "Datum",
            "der",
            "Schlacht",
            ",",
            "in",
            "der",
            "das",
            "Schiff",
            "namens",
            "``",
            "''",
            "Lettice",
            "''",
            "''",
            "und",
            "das",
            "Schiff",
            "namens",
            "``",
            "''",
            "HMS",
            "Atalanta",
            "''",
            "''",
            "verloren",
            "haben"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Lettice\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "\"HMS Atalanta\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "match": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "query": "SELECT name , ergebnis , bulgarischer_kommandant FROM schlacht EXCEPT SELECT T1.name , T1.ergebnis , T1.bulgarischer_kommandant FROM schlacht AS T1 JOIN schiff AS T2 ON T1.id = T2.im_kampf_verloren WHERE T2.standort = 'English Channel'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "ergebnis",
            ",",
            "bulgarischer_kommandant",
            "FROM",
            "schlacht",
            "EXCEPT",
            "SELECT",
            "T1.name",
            ",",
            "T1.ergebnis",
            ",",
            "T1.bulgarischer_kommandant",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.standort",
            "=",
            "'English",
            "Channel",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "ergebnis",
            ",",
            "bulgarischer_kommandant",
            "FROM",
            "schlacht",
            "EXCEPT",
            "SELECT",
            "T1.name",
            ",",
            "T1.ergebnis",
            ",",
            "T1.bulgarischer_kommandant",
            "FROM",
            "schlacht",
            "AS",
            "T1",
            "JOIN",
            "schiff",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.im_kampf_verloren",
            "WHERE",
            "T2.standort",
            "=",
            "value"
        ],
        "question": "Zeige Namen, Ergebnisse und bulgarische Befehlshaber der Schlachten, in denen keine Schiffe im '\"English Channel\"' verloren gingen.",
        "question_toks": [
            "Zeige",
            "Namen",
            ",",
            "Ergebnisse",
            "und",
            "bulgarische",
            "Befehlshaber",
            "der",
            "Schlachten",
            ",",
            "in",
            "denen",
            "keine",
            "Schiffe",
            "im",
            "'",
            "''",
            "English",
            "Channel",
            "''",
            "'",
            "verloren",
            "gingen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"English Channel\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "battle_death",
        "match": "What are the notes of the death events which has substring 'East'?",
        "query": "SELECT note FROM tod WHERE note LIKE '%East%'",
        "query_toks": [
            "SELECT",
            "note",
            "FROM",
            "tod",
            "WHERE",
            "note",
            "LIKE",
            "'",
            "%",
            "East",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "note",
            "FROM",
            "tod",
            "WHERE",
            "note",
            "LIKE",
            "value"
        ],
        "question": "Wie lauten die Notizen zu den Todesereignissen mit der Teilzeichenkette \"East\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Notizen",
            "zu",
            "den",
            "Todesereignissen",
            "mit",
            "der",
            "Teilzeichenkette",
            "``",
            "East",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"%East%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "what are all the addresses including line 1 and line 2?",
        "query": "SELECT zeile_1 , zeile_2 FROM adressen",
        "query_toks": [
            "SELECT",
            "zeile_1",
            ",",
            "zeile_2",
            "FROM",
            "adressen"
        ],
        "query_toks_no_value": "SELECT zeile_1 , zeile_2 FROM adressen",
        "question": "Wie lauten alle Adressen einschließlich Zeile 1 und Zeile 2?",
        "question_toks": [
            "Wie",
            "lauten",
            "alle",
            "Adressen",
            "einschließlich",
            "Zeile",
            "1",
            "und",
            "Zeile",
            "2",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the first and second line for all addresses?",
        "query": "SELECT zeile_1 , zeile_2 FROM adressen",
        "query_toks": [
            "SELECT",
            "zeile_1",
            ",",
            "zeile_2",
            "FROM",
            "adressen"
        ],
        "query_toks_no_value": "SELECT zeile_1 , zeile_2 FROM adressen",
        "question": "Wie lautet die erste und zweite Zeile bei allen Adressen?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "erste",
            "und",
            "zweite",
            "Zeile",
            "bei",
            "allen",
            "Adressen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many courses in total are listed?",
        "query": "SELECT count(*) FROM kurse",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kurse"
        ],
        "query_toks_no_value": "SELECT count(*) FROM kurse",
        "question": "Wie viele Kurse sind insgesamt aufgelistet?",
        "question_toks": [
            "Wie",
            "viele",
            "Kurse",
            "sind",
            "insgesamt",
            "aufgelistet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many courses are there?",
        "query": "SELECT count(*) FROM kurse",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "kurse"
        ],
        "query_toks_no_value": "SELECT count(*) FROM kurse",
        "question": "Wie viele Kurse gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Kurse",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How is the math course described?",
        "query": "SELECT kursbeschreibung FROM kurse WHERE kursname = 'math'",
        "query_toks": [
            "SELECT",
            "kursbeschreibung",
            "FROM",
            "kurse",
            "WHERE",
            "kursname",
            "=",
            "'math",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kursbeschreibung",
            "FROM",
            "kurse",
            "WHERE",
            "kursname",
            "=",
            "value"
        ],
        "question": "Wie wird der \"math\" beschrieben?",
        "question_toks": [
            "Wie",
            "wird",
            "der",
            "``",
            "math",
            "''",
            "beschrieben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"math\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the descriptions for all the math courses?",
        "query": "SELECT kursbeschreibung FROM kurse WHERE kursname = 'math'",
        "query_toks": [
            "SELECT",
            "kursbeschreibung",
            "FROM",
            "kurse",
            "WHERE",
            "kursname",
            "=",
            "'math",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kursbeschreibung",
            "FROM",
            "kurse",
            "WHERE",
            "kursname",
            "=",
            "value"
        ],
        "question": "Wie lauten die Beschreibungen für alle \"math\"?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Beschreibungen",
            "für",
            "alle",
            "``",
            "math",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"math\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the zip code of the address in the city Port Chelsea?",
        "query": "SELECT postleitzahl FROM adressen WHERE stadt = 'Port Chelsea'",
        "query_toks": [
            "SELECT",
            "postleitzahl",
            "FROM",
            "adressen",
            "WHERE",
            "stadt",
            "=",
            "'Port",
            "Chelsea",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "postleitzahl",
            "FROM",
            "adressen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Wie lautet die Postleitzahl der Adresse in der Stadt \"Port Chelsea\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Postleitzahl",
            "der",
            "Adresse",
            "in",
            "der",
            "Stadt",
            "``",
            "Port",
            "Chelsea",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Port Chelsea\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the zip code for Port Chelsea?",
        "query": "SELECT postleitzahl FROM adressen WHERE stadt = 'Port Chelsea'",
        "query_toks": [
            "SELECT",
            "postleitzahl",
            "FROM",
            "adressen",
            "WHERE",
            "stadt",
            "=",
            "'Port",
            "Chelsea",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "postleitzahl",
            "FROM",
            "adressen",
            "WHERE",
            "stadt",
            "=",
            "value"
        ],
        "question": "Wie lautet die Postleitzahl von \"Port Chelsea\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Postleitzahl",
            "von",
            "``",
            "Port",
            "Chelsea",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Port Chelsea\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Which department offers the most number of degrees? List department name and id.",
        "query": "SELECT T2.abteilungsname , T1.abteilung_id FROM studiengänge AS T1 JOIN abteilungen AS T2 ON T1.abteilung_id = T2.abteilung_id GROUP BY T1.abteilung_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.abteilungsname",
            ",",
            "T1.abteilung_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "abteilungen",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "GROUP",
            "BY",
            "T1.abteilung_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.abteilungsname",
            ",",
            "T1.abteilung_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "abteilungen",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "GROUP",
            "BY",
            "T1.abteilung_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Fachbereich bietet die meisten Abschlüsse an? Gib den Namen und die Kennung des Fachbereichs an.",
        "question_toks": [
            "Welcher",
            "Fachbereich",
            "bietet",
            "die",
            "meisten",
            "Abschlüsse",
            "an",
            "?",
            "Gib",
            "den",
            "Namen",
            "und",
            "die",
            "Kennung",
            "des",
            "Fachbereichs",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    43,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the name and id of the department with the most number of degrees ?",
        "query": "select t2.abteilungsname , t1.abteilung_id from studiengänge as t1 join abteilungen as t2 on t1.abteilung_id = t2.abteilung_id group by t1.abteilung_id order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t2.abteilungsname",
            ",",
            "t1.abteilung_id",
            "from",
            "studiengänge",
            "as",
            "t1",
            "join",
            "abteilungen",
            "as",
            "t2",
            "on",
            "t1.abteilung_id",
            "=",
            "t2.abteilung_id",
            "group",
            "by",
            "t1.abteilung_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2.abteilungsname",
            ",",
            "t1.abteilung_id",
            "from",
            "studiengänge",
            "as",
            "t1",
            "join",
            "abteilungen",
            "as",
            "t2",
            "on",
            "t1.abteilung_id",
            "=",
            "t2.abteilung_id",
            "group",
            "by",
            "t1.abteilung_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Wie lautet der Name und die Kennung der Abteilung mit den meisten Abschlüssen?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Kennung",
            "der",
            "Abteilung",
            "mit",
            "den",
            "meisten",
            "Abschlüssen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    43,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many departments offer any degree?",
        "query": "SELECT count(DISTINCT abteilung_id) FROM studiengänge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "abteilung_id",
            ")",
            "FROM",
            "studiengänge"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT abteilung_id) FROM studiengänge",
        "question": "Wie viele Abteilungen bieten einen Abschluss an?",
        "question_toks": [
            "Wie",
            "viele",
            "Abteilungen",
            "bieten",
            "einen",
            "Abschluss",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many different departments offer degrees?",
        "query": "SELECT count(DISTINCT abteilung_id) FROM studiengänge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "abteilung_id",
            ")",
            "FROM",
            "studiengänge"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT abteilung_id) FROM studiengänge",
        "question": "Wie viele verschiedene Abteilungen bieten Abschlüsse an?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Abteilungen",
            "bieten",
            "Abschlüsse",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many different degree names are offered?",
        "query": "SELECT count(DISTINCT abschluss_zusammenfassung_name) FROM studiengänge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "abschluss_zusammenfassung_name",
            ")",
            "FROM",
            "studiengänge"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT abschluss_zusammenfassung_name) FROM studiengänge",
        "question": "Wie viele verschiedene Abschlussbezeichnungen werden angeboten?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Abschlussbezeichnungen",
            "werden",
            "angeboten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many different degrees are offered?",
        "query": "SELECT count(DISTINCT abschluss_zusammenfassung_name) FROM studiengänge",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "abschluss_zusammenfassung_name",
            ")",
            "FROM",
            "studiengänge"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT abschluss_zusammenfassung_name) FROM studiengänge",
        "question": "Wie viele verschiedene Abschlüsse werden angeboten?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Abschlüsse",
            "werden",
            "angeboten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                44,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many degrees does the engineering department offer?",
        "query": "SELECT count(*) FROM abteilungen AS T1 JOIN studiengänge AS T2 ON T1.abteilung_id = T2.abteilung_id WHERE T1.abteilungsname = 'engineer'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "abteilungen",
            "AS",
            "T1",
            "JOIN",
            "studiengänge",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "WHERE",
            "T1.abteilungsname",
            "=",
            "'engineer",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "abteilungen",
            "AS",
            "T1",
            "JOIN",
            "studiengänge",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "WHERE",
            "T1.abteilungsname",
            "=",
            "value"
        ],
        "question": "Wie viele Abschlüsse bietet der Fachbereich \"engineer\" an?",
        "question_toks": [
            "Wie",
            "viele",
            "Abschlüsse",
            "bietet",
            "der",
            "Fachbereich",
            "``",
            "engineer",
            "''",
            "an",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"engineer\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many degrees does the engineering department have?",
        "query": "SELECT count(*) FROM abteilungen AS T1 JOIN studiengänge AS T2 ON T1.abteilung_id = T2.abteilung_id WHERE T1.abteilungsname = 'engineer'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "abteilungen",
            "AS",
            "T1",
            "JOIN",
            "studiengänge",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "WHERE",
            "T1.abteilungsname",
            "=",
            "'engineer",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "abteilungen",
            "AS",
            "T1",
            "JOIN",
            "studiengänge",
            "AS",
            "T2",
            "ON",
            "T1.abteilung_id",
            "=",
            "T2.abteilung_id",
            "WHERE",
            "T1.abteilungsname",
            "=",
            "value"
        ],
        "question": "Wie viele Abschlüsse gibt es im Fachbereich \"engineer\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Abschlüsse",
            "gibt",
            "es",
            "im",
            "Fachbereich",
            "``",
            "engineer",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"engineer\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names and descriptions of all the sections?",
        "query": "SELECT abschnittname , abschnittsbeschreibung FROM abschnitte",
        "query_toks": [
            "SELECT",
            "abschnittname",
            ",",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte"
        ],
        "query_toks_no_value": "SELECT abschnittname , abschnittsbeschreibung FROM abschnitte",
        "question": "Wie lauten die Namen und Beschreibungen der einzelnen Abschnitte?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Beschreibungen",
            "der",
            "einzelnen",
            "Abschnitte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names and descriptions for all the sections?",
        "query": "SELECT abschnittname , abschnittsbeschreibung FROM abschnitte",
        "query_toks": [
            "SELECT",
            "abschnittname",
            ",",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte"
        ],
        "query_toks_no_value": "SELECT abschnittname , abschnittsbeschreibung FROM abschnitte",
        "question": "Wie lauten die Namen und Beschreibungen für alle Abschnitte?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Beschreibungen",
            "für",
            "alle",
            "Abschnitte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names and id of courses having at most 2 sections?",
        "query": "SELECT T1.kursname , T1.kurs_id FROM kurse AS T1 JOIN abschnitte AS T2 ON T1.kurs_id = T2.kurs_id GROUP BY T1.kurs_id HAVING count(*) <= 2",
        "query_toks": [
            "SELECT",
            "T1.kursname",
            ",",
            "T1.kurs_id",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "abschnitte",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kurs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kursname",
            ",",
            "T1.kurs_id",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "abschnitte",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kurs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen und die Kennung von Kursen mit höchstens 2 Abschnitten?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "die",
            "Kennung",
            "von",
            "Kursen",
            "mit",
            "höchstens",
            "2",
            "Abschnitten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names and ids of every course with less than 2 sections?",
        "query": "SELECT T1.kursname , T1.kurs_id FROM kurse AS T1 JOIN abschnitte AS T2 ON T1.kurs_id = T2.kurs_id GROUP BY T1.kurs_id HAVING count(*) <= 2",
        "query_toks": [
            "SELECT",
            "T1.kursname",
            ",",
            "T1.kurs_id",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "abschnitte",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kurs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kursname",
            ",",
            "T1.kurs_id",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "abschnitte",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kurs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen und IDs aller Kurse mit weniger als 2 Abschnitten?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "IDs",
            "aller",
            "Kurse",
            "mit",
            "weniger",
            "als",
            "2",
            "Abschnitten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "List the section_name in reversed lexicographical order.",
        "query": "SELECT abschnittname FROM abschnitte ORDER BY abschnittname DESC",
        "query_toks": [
            "SELECT",
            "abschnittname",
            "FROM",
            "abschnitte",
            "ORDER",
            "BY",
            "abschnittname",
            "DESC"
        ],
        "query_toks_no_value": "SELECT abschnittname FROM abschnitte ORDER BY abschnittname DESC",
        "question": "Liste die Abschnittsnamen in umgekehrter lexikografischer Reihenfolge auf.",
        "question_toks": [
            "Liste",
            "die",
            "Abschnittsnamen",
            "in",
            "umgekehrter",
            "lexikografischer",
            "Reihenfolge",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            39,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names of the sections in reverse alphabetical order?",
        "query": "SELECT abschnittname FROM abschnitte ORDER BY abschnittname DESC",
        "query_toks": [
            "SELECT",
            "abschnittname",
            "FROM",
            "abschnitte",
            "ORDER",
            "BY",
            "abschnittname",
            "DESC"
        ],
        "query_toks_no_value": "SELECT abschnittname FROM abschnitte ORDER BY abschnittname DESC",
        "question": "Wie lauten die Namen der Abschnitte in umgekehrter alphabetischer Reihenfolge?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Abschnitte",
            "in",
            "umgekehrter",
            "alphabetischer",
            "Reihenfolge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            39,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the semester which most student registered in? Show both the name and the id.",
        "query": "SELECT T1.semester_name , T1.semester_id FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "semesters",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "semesters",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "In welchem Semester haben sich die meisten Studenten eingeschrieben? Gib sowohl den Namen als auch die Kennung an.",
        "question_toks": [
            "In",
            "welchem",
            "Semester",
            "haben",
            "sich",
            "die",
            "meisten",
            "Studenten",
            "eingeschrieben",
            "?",
            "Gib",
            "sowohl",
            "den",
            "Namen",
            "als",
            "auch",
            "die",
            "Kennung",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "For each semester, what is the name and id of the one with the most students registered?",
        "query": "SELECT T1.semester_name , T1.semester_id FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "semesters",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "semesters",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name und die Kennung des Semesters, in dem die meisten Studierenden eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "und",
            "die",
            "Kennung",
            "des",
            "Semesters",
            ",",
            "in",
            "dem",
            "die",
            "meisten",
            "Studierenden",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the description of the department whose name has the substring the computer?",
        "query": "SELECT abteilungsbeschreibung FROM abteilungen WHERE abteilungsname LIKE '%computer%'",
        "query_toks": [
            "SELECT",
            "abteilungsbeschreibung",
            "FROM",
            "abteilungen",
            "WHERE",
            "abteilungsname",
            "LIKE",
            "'",
            "%",
            "computer",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abteilungsbeschreibung",
            "FROM",
            "abteilungen",
            "WHERE",
            "abteilungsname",
            "LIKE",
            "value"
        ],
        "question": "Wie lautet die Beschreibung der Abteilung, deren Name die Teilbezeichnung Computer enthält?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Beschreibung",
            "der",
            "Abteilung",
            ",",
            "deren",
            "Name",
            "die",
            "Teilbezeichnung",
            "Computer",
            "enthält",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%computer%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the department description for the one whose name has the word computer?",
        "query": "SELECT abteilungsbeschreibung FROM abteilungen WHERE abteilungsname LIKE '%computer%'",
        "query_toks": [
            "SELECT",
            "abteilungsbeschreibung",
            "FROM",
            "abteilungen",
            "WHERE",
            "abteilungsname",
            "LIKE",
            "'",
            "%",
            "computer",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abteilungsbeschreibung",
            "FROM",
            "abteilungen",
            "WHERE",
            "abteilungsname",
            "LIKE",
            "value"
        ],
        "question": "Wie lautet die Abteilungsbeschreibung für denjenigen, dessen Name das Wort Computer enthält?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Abteilungsbeschreibung",
            "für",
            "denjenigen",
            ",",
            "dessen",
            "Name",
            "das",
            "Wort",
            "Computer",
            "enthält",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%computer%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "query": "SELECT T1.vorname , T1.mittlerer_name , T1.nachname , T1.student_id FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "question": "Wer ist in 2 Studiengängen in einem Semester eingeschrieben? Gib den Vor-, Mittel- und Nachnamen sowie die Kennung an.",
        "question_toks": [
            "Wer",
            "ist",
            "in",
            "2",
            "Studiengängen",
            "in",
            "einem",
            "Semester",
            "eingeschrieben",
            "?",
            "Gib",
            "den",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachnamen",
            "sowie",
            "die",
            "Kennung",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "query": "SELECT T1.vorname , T1.mittlerer_name , T1.nachname , T1.student_id FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vor-, Mittel- und Nachnamen sowie die IDs aller Studierenden, die sich in einem Semester für 2 Studiengänge eingeschrieben haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachnamen",
            "sowie",
            "die",
            "IDs",
            "aller",
            "Studierenden",
            ",",
            "die",
            "sich",
            "in",
            "einem",
            "Semester",
            "für",
            "2",
            "Studiengänge",
            "eingeschrieben",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "query": "SELECT DISTINCT T1.vorname , T1.mittlerer_name , T1.nachname FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN studiengänge AS T3 ON T2.studiengang_id = T3.studiengang_id WHERE T3.abschluss_zusammenfassung_name = 'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "studiengänge",
            "AS",
            "T3",
            "ON",
            "T2.studiengang_id",
            "=",
            "T3.studiengang_id",
            "WHERE",
            "T3.abschluss_zusammenfassung_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "studiengänge",
            "AS",
            "T3",
            "ON",
            "T2.studiengang_id",
            "=",
            "T3.studiengang_id",
            "WHERE",
            "T3.abschluss_zusammenfassung_name",
            "=",
            "value"
        ],
        "question": "Wer ist in einem \"Bachelor\" eingeschrieben? Gib den Vornamen, den zweiten Vornamen und den Nachnamen an.",
        "question_toks": [
            "Wer",
            "ist",
            "in",
            "einem",
            "``",
            "Bachelor",
            "''",
            "eingeschrieben",
            "?",
            "Gib",
            "den",
            "Vornamen",
            ",",
            "den",
            "zweiten",
            "Vornamen",
            "und",
            "den",
            "Nachnamen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Bachelor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "query": "SELECT DISTINCT T1.vorname , T1.mittlerer_name , T1.nachname FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN studiengänge AS T3 ON T2.studiengang_id = T3.studiengang_id WHERE T3.abschluss_zusammenfassung_name = 'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "studiengänge",
            "AS",
            "T3",
            "ON",
            "T2.studiengang_id",
            "=",
            "T3.studiengang_id",
            "WHERE",
            "T3.abschluss_zusammenfassung_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "studiengänge",
            "AS",
            "T3",
            "ON",
            "T2.studiengang_id",
            "=",
            "T3.studiengang_id",
            "WHERE",
            "T3.abschluss_zusammenfassung_name",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vor-, Mittel- und Nachnamen für alle, die sich für einen \"Bachelor\" anmelden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachnamen",
            "für",
            "alle",
            ",",
            "die",
            "sich",
            "für",
            "einen",
            "``",
            "Bachelor",
            "''",
            "anmelden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Bachelor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Find the kind of program which most number of students are enrolled in?",
        "query": "SELECT T1.abschluss_zusammenfassung_name FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id GROUP BY T1.abschluss_zusammenfassung_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.abschluss_zusammenfassung_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.abschluss_zusammenfassung_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Findest du den Studiengang, für den die meisten Schüler/innen eingeschrieben sind?",
        "question_toks": [
            "Findest",
            "du",
            "den",
            "Studiengang",
            ",",
            "für",
            "den",
            "die",
            "meisten",
            "Schüler/innen",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    44,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the degree summary name that has the most number of students enrolled?",
        "query": "SELECT T1.abschluss_zusammenfassung_name FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id GROUP BY T1.abschluss_zusammenfassung_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.abschluss_zusammenfassung_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.abschluss_zusammenfassung_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name der Abschlusszusammenfassung, für die die meisten Studierenden eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "der",
            "Abschlusszusammenfassung",
            ",",
            "für",
            "die",
            "die",
            "meisten",
            "Studierenden",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    44,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "query": "SELECT T1.studiengang_id , T1.abschluss_zusammenfassung_name FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id GROUP BY T1.studiengang_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.studiengang_id",
            ",",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.studiengang_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.studiengang_id",
            ",",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.studiengang_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Studiengang, in dem die meisten Schüler eingeschrieben sind. Gib sowohl die ID als auch die Zusammenfassung an.",
        "question_toks": [
            "Finde",
            "den",
            "Studiengang",
            ",",
            "in",
            "dem",
            "die",
            "meisten",
            "Schüler",
            "eingeschrieben",
            "sind",
            ".",
            "Gib",
            "sowohl",
            "die",
            "ID",
            "als",
            "auch",
            "die",
            "Zusammenfassung",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    42,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the program id and the summary of the degree that has the most students enrolled?",
        "query": "SELECT T1.studiengang_id , T1.abschluss_zusammenfassung_name FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id GROUP BY T1.studiengang_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.studiengang_id",
            ",",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.studiengang_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.studiengang_id",
            ",",
            "T1.abschluss_zusammenfassung_name",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "GROUP",
            "BY",
            "T1.studiengang_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Kennung des Studiengangs und die Zusammenfassung des Abschlusses, für den die meisten Studierenden eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Kennung",
            "des",
            "Studiengangs",
            "und",
            "die",
            "Zusammenfassung",
            "des",
            "Abschlusses",
            ",",
            "für",
            "den",
            "die",
            "meisten",
            "Studierenden",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    42,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "query": "SELECT T1.student_id , T1.vorname , T1.mittlerer_name , T1.nachname , count(*) , T1.student_id FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Schüler hat sich am häufigsten für einen Studiengang eingeschrieben? Gib die Kennung, den Vornamen, den zweiten Vornamen, den Nachnamen, die Anzahl der Einschreibungen und die Schüler-ID an.",
        "question_toks": [
            "Welcher",
            "Schüler",
            "hat",
            "sich",
            "am",
            "häufigsten",
            "für",
            "einen",
            "Studiengang",
            "eingeschrieben",
            "?",
            "Gib",
            "die",
            "Kennung",
            ",",
            "den",
            "Vornamen",
            ",",
            "den",
            "zweiten",
            "Vornamen",
            ",",
            "den",
            "Nachnamen",
            ",",
            "die",
            "Anzahl",
            "der",
            "Einschreibungen",
            "und",
            "die",
            "Schüler-ID",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "query": "SELECT T1.student_id , T1.vorname , T1.mittlerer_name , T1.nachname , count(*) , T1.student_id FROM schüler AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.vorname",
            ",",
            "T1.mittlerer_name",
            ",",
            "T1.nachname",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Vor-, Mittel- und Nachname des Schülers/der Schülerin, der/die sich am häufigsten für einen Studiengang eingeschrieben hat, zusammen mit der Kennung und der Anzahl der Einschreibungen?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachname",
            "des",
            "Schülers/der",
            "Schülerin",
            ",",
            "der/die",
            "sich",
            "am",
            "häufigsten",
            "für",
            "einen",
            "Studiengang",
            "eingeschrieben",
            "hat",
            ",",
            "zusammen",
            "mit",
            "der",
            "Kennung",
            "und",
            "der",
            "Anzahl",
            "der",
            "Einschreibungen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Which semesters do not have any student enrolled? List the semester name.",
        "query": "SELECT semester_name FROM semesters WHERE semester_id NOT IN( SELECT semester_id FROM student_enrolment )",
        "query_toks": [
            "SELECT",
            "semester_name",
            "FROM",
            "semesters",
            "WHERE",
            "semester_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "semester_id",
            "FROM",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": "SELECT semester_name FROM semesters WHERE semester_id NOT IN( SELECT semester_id FROM student_enrolment )",
        "question": "In welchen Semestern sind keine Studenten eingeschrieben? Gib den Namen des Semesters an.",
        "question_toks": [
            "In",
            "welchen",
            "Semestern",
            "sind",
            "keine",
            "Studenten",
            "eingeschrieben",
            "?",
            "Gib",
            "den",
            "Namen",
            "des",
            "Semesters",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    8
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the name of the semester with no students enrolled?",
        "query": "SELECT semester_name FROM semesters WHERE semester_id NOT IN( SELECT semester_id FROM student_enrolment )",
        "query_toks": [
            "SELECT",
            "semester_name",
            "FROM",
            "semesters",
            "WHERE",
            "semester_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "semester_id",
            "FROM",
            "student_enrolment",
            ")"
        ],
        "query_toks_no_value": "SELECT semester_name FROM semesters WHERE semester_id NOT IN( SELECT semester_id FROM student_enrolment )",
        "question": "Wie lautet der Name des Semesters, in dem keine Studenten eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Semesters",
            ",",
            "in",
            "dem",
            "keine",
            "Studenten",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    8
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are all the course names of the courses which ever have students enrolled in?",
        "query": "SELECT DISTINCT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id",
        "question": "Wie lauten die Namen der Kurse, für die sich die Schüler/innen eingeschrieben haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Kurse",
            ",",
            "für",
            "die",
            "sich",
            "die",
            "Schüler/innen",
            "eingeschrieben",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the names of all courses that have some students enrolled?",
        "query": "SELECT DISTINCT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id",
        "question": "Wie lauten die Namen aller Kurse, für die einige Schüler/innen eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "aller",
            "Kurse",
            ",",
            "für",
            "die",
            "einige",
            "Schüler/innen",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What's the name of the course with most number of enrollments?",
        "query": "SELECT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id GROUP BY T1.kursname ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kursname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kursname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name des Kurses mit den meisten Anmeldungen?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Kurses",
            "mit",
            "den",
            "meisten",
            "Anmeldungen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the name of the course with the most students enrolled?",
        "query": "SELECT T1.kursname FROM kurse AS T1 JOIN einschreibungskurse_für_studenten AS T2 ON T1.kurs_id = T2.kurs_id GROUP BY T1.kursname ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kursname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kursname",
            "FROM",
            "kurse",
            "AS",
            "T1",
            "JOIN",
            "einschreibungskurse_für_studenten",
            "AS",
            "T2",
            "ON",
            "T1.kurs_id",
            "=",
            "T2.kurs_id",
            "GROUP",
            "BY",
            "T1.kursname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name des Kurses mit den meisten eingeschriebenen Schülern?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Kurses",
            "mit",
            "den",
            "meisten",
            "eingeschriebenen",
            "Schülern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "query": "SELECT T1.nachname FROM schüler AS T1 JOIN adressen AS T2 ON T1.aktuelle_adresse = T2.adresse_id WHERE T2.bundesland_provinz_landkreis = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.nachname FROM schüler AS T3 JOIN student_enrolment AS T4 ON T3.student_id = T4.student_id",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "adressen",
            "AS",
            "T2",
            "ON",
            "T1.aktuelle_adresse",
            "=",
            "T2.adresse_id",
            "WHERE",
            "T2.bundesland_provinz_landkreis",
            "=",
            "'NorthCarolina",
            "'",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.nachname",
            "FROM",
            "schüler",
            "AS",
            "T3",
            "JOIN",
            "student_enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "adressen",
            "AS",
            "T2",
            "ON",
            "T1.aktuelle_adresse",
            "=",
            "T2.adresse_id",
            "WHERE",
            "T2.bundesland_provinz_landkreis",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.nachname",
            "FROM",
            "schüler",
            "AS",
            "T3",
            "JOIN",
            "student_enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "question": "Finde die Nachnamen der Schüler/innen, die derzeit im Bundesstaat North Carolina leben, aber nicht in einem Studiengang eingeschrieben sind.",
        "question_toks": [
            "Finde",
            "die",
            "Nachnamen",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "derzeit",
            "im",
            "Bundesstaat",
            "North",
            "Carolina",
            "leben",
            ",",
            "aber",
            "nicht",
            "in",
            "einem",
            "Studiengang",
            "eingeschrieben",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NorthCarolina\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            8
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                50,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    30,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "query": "SELECT T1.nachname FROM schüler AS T1 JOIN adressen AS T2 ON T1.aktuelle_adresse = T2.adresse_id WHERE T2.bundesland_provinz_landkreis = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.nachname FROM schüler AS T3 JOIN student_enrolment AS T4 ON T3.student_id = T4.student_id",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "adressen",
            "AS",
            "T2",
            "ON",
            "T1.aktuelle_adresse",
            "=",
            "T2.adresse_id",
            "WHERE",
            "T2.bundesland_provinz_landkreis",
            "=",
            "'NorthCarolina",
            "'",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.nachname",
            "FROM",
            "schüler",
            "AS",
            "T3",
            "JOIN",
            "student_enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "schüler",
            "AS",
            "T1",
            "JOIN",
            "adressen",
            "AS",
            "T2",
            "ON",
            "T1.aktuelle_adresse",
            "=",
            "T2.adresse_id",
            "WHERE",
            "T2.bundesland_provinz_landkreis",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.nachname",
            "FROM",
            "schüler",
            "AS",
            "T3",
            "JOIN",
            "student_enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "question": "Wie lauten die Nachnamen der Studierenden, die in North Carolina leben, aber nicht in einem Studiengang eingeschrieben sind?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Nachnamen",
            "der",
            "Studierenden",
            ",",
            "die",
            "in",
            "North",
            "Carolina",
            "leben",
            ",",
            "aber",
            "nicht",
            "in",
            "einem",
            "Studiengang",
            "eingeschrieben",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NorthCarolina\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            8
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                50,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    30,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Show the date and id of the transcript with at least 2 course results.",
        "query": "SELECT T2.datum_der_abschrift , T1.abschrift_id FROM zeugnisinhalte AS T1 JOIN transcripts AS T2 ON T1.abschrift_id = T2.abschrift_id GROUP BY T1.abschrift_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige das Datum und die ID des Zeugnisses mit mindestens 2 Kursergebnissen.",
        "question_toks": [
            "Zeige",
            "das",
            "Datum",
            "und",
            "die",
            "ID",
            "des",
            "Zeugnisses",
            "mit",
            "mindestens",
            "2",
            "Kursergebnissen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the date and id of the transcript with at least 2 courses listed?",
        "query": "SELECT T2.datum_der_abschrift , T1.abschrift_id FROM zeugnisinhalte AS T1 JOIN transcripts AS T2 ON T1.abschrift_id = T2.abschrift_id GROUP BY T1.abschrift_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie lautet das Datum und die Kennung des Zeugnisses, in dem mindestens 2 Kurse aufgeführt sind?",
        "question_toks": [
            "Wie",
            "lautet",
            "das",
            "Datum",
            "und",
            "die",
            "Kennung",
            "des",
            "Zeugnisses",
            ",",
            "in",
            "dem",
            "mindestens",
            "2",
            "Kurse",
            "aufgeführt",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "query": "SELECT handynummer FROM schüler WHERE vorname = 'Timmothy' AND nachname = 'Ward'",
        "query_toks": [
            "SELECT",
            "handynummer",
            "FROM",
            "schüler",
            "WHERE",
            "vorname",
            "=",
            "'Timmothy",
            "'",
            "AND",
            "nachname",
            "=",
            "'Ward",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "handynummer",
            "FROM",
            "schüler",
            "WHERE",
            "vorname",
            "=",
            "value",
            "AND",
            "nachname",
            "=",
            "value"
        ],
        "question": "Wie lautet die Telefonnummer des Mannes mit dem Vornamen \"Timmothy\" und dem Nachnamen \"Ward\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Telefonnummer",
            "des",
            "Mannes",
            "mit",
            "dem",
            "Vornamen",
            "``",
            "Timmothy",
            "''",
            "und",
            "dem",
            "Nachnamen",
            "``",
            "Ward",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Timmothy\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Ward\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the mobile phone number of the student named Timmothy Ward ?",
        "query": "select handynummer from schüler where vorname = 'timmothy' and nachname = 'ward'",
        "query_toks": [
            "select",
            "handynummer",
            "from",
            "schüler",
            "where",
            "vorname",
            "=",
            "'timmothy",
            "'",
            "and",
            "nachname",
            "=",
            "'ward",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "handynummer",
            "from",
            "schüler",
            "where",
            "vorname",
            "=",
            "value",
            "and",
            "nachname",
            "=",
            "value"
        ],
        "question": "Wie lautet die Handynummer des Schülers Timmothy Ward?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Handynummer",
            "des",
            "Schülers",
            "Timmothy",
            "Ward",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"timmothy\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"ward\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Who is the first student to register? List the first name, middle name and last name.",
        "query": "SELECT vorname , mittlerer_name , nachname FROM schüler ORDER BY datum_der_ersten_anmeldung ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_ersten_anmeldung",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_ersten_anmeldung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wer ist der erste Schüler, der sich anmeldet? Gib den Vornamen, den mittleren Namen und den Nachnamen an.",
        "question_toks": [
            "Wer",
            "ist",
            "der",
            "erste",
            "Schüler",
            ",",
            "der",
            "sich",
            "anmeldet",
            "?",
            "Gib",
            "den",
            "Vornamen",
            ",",
            "den",
            "mittleren",
            "Namen",
            "und",
            "den",
            "Nachnamen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the first, middle, and last name of the first student to register?",
        "query": "SELECT vorname , mittlerer_name , nachname FROM schüler ORDER BY datum_der_ersten_anmeldung ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_ersten_anmeldung",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_ersten_anmeldung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Vor-, Mittel- und Nachname des ersten Schülers, der sich anmeldet?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachname",
            "des",
            "ersten",
            "Schülers",
            ",",
            "der",
            "sich",
            "anmeldet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "query": "SELECT vorname , mittlerer_name , nachname FROM schüler ORDER BY datum_der_abmeldung ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_abmeldung",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_abmeldung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wer ist der früheste Absolvent der Schule? Nenne den Vornamen, den zweiten Vornamen und den Nachnamen.",
        "question_toks": [
            "Wer",
            "ist",
            "der",
            "früheste",
            "Absolvent",
            "der",
            "Schule",
            "?",
            "Nenne",
            "den",
            "Vornamen",
            ",",
            "den",
            "zweiten",
            "Vornamen",
            "und",
            "den",
            "Nachnamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the first, middle, and last name of the earliest school graduate?",
        "query": "SELECT vorname , mittlerer_name , nachname FROM schüler ORDER BY datum_der_abmeldung ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_abmeldung",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "mittlerer_name",
            ",",
            "nachname",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "datum_der_abmeldung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Vor-, Mittel- und Nachname des frühesten Schulabgängers?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vor-",
            ",",
            "Mittel-",
            "und",
            "Nachname",
            "des",
            "frühesten",
            "Schulabgängers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Whose permanent address is different from his or her current address? List his or her first name.",
        "query": "SELECT vorname FROM schüler WHERE aktuelle_adresse != permanente_adresse_id",
        "query_toks": [
            "SELECT",
            "vorname",
            "FROM",
            "schüler",
            "WHERE",
            "aktuelle_adresse",
            "!",
            "=",
            "permanente_adresse_id"
        ],
        "query_toks_no_value": "SELECT vorname FROM schüler WHERE aktuelle_adresse != permanente_adresse_id",
        "question": "Wessen ständige Adresse unterscheidet sich von seiner/ihrer aktuellen Adresse? Gib seinen oder ihren Vornamen an.",
        "question_toks": [
            "Wessen",
            "ständige",
            "Adresse",
            "unterscheidet",
            "sich",
            "von",
            "seiner/ihrer",
            "aktuellen",
            "Adresse",
            "?",
            "Gib",
            "seinen",
            "oder",
            "ihren",
            "Vornamen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        27,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the first name of the student whose permanent address is different from his or her current one?",
        "query": "SELECT vorname FROM schüler WHERE aktuelle_adresse != permanente_adresse_id",
        "query_toks": [
            "SELECT",
            "vorname",
            "FROM",
            "schüler",
            "WHERE",
            "aktuelle_adresse",
            "!",
            "=",
            "permanente_adresse_id"
        ],
        "query_toks_no_value": "SELECT vorname FROM schüler WHERE aktuelle_adresse != permanente_adresse_id",
        "question": "Wie lautet der Vorname des Schülers/der Schülerin, dessen/deren ständige Adresse sich von seiner/ihrer aktuellen Adresse unterscheidet?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vorname",
            "des",
            "Schülers/der",
            "Schülerin",
            ",",
            "dessen/deren",
            "ständige",
            "Adresse",
            "sich",
            "von",
            "seiner/ihrer",
            "aktuellen",
            "Adresse",
            "unterscheidet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        27,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Which address holds the most number of students currently? List the address id and all lines.",
        "query": "SELECT T1.adresse_id , T1.zeile_1 , T1.zeile_2 FROM adressen AS T1 JOIN schüler AS T2 ON T1.adresse_id = T2.aktuelle_adresse GROUP BY T1.adresse_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.adresse_id",
            ",",
            "T1.zeile_1",
            ",",
            "T1.zeile_2",
            "FROM",
            "adressen",
            "AS",
            "T1",
            "JOIN",
            "schüler",
            "AS",
            "T2",
            "ON",
            "T1.adresse_id",
            "=",
            "T2.aktuelle_adresse",
            "GROUP",
            "BY",
            "T1.adresse_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.adresse_id",
            ",",
            "T1.zeile_1",
            ",",
            "T1.zeile_2",
            "FROM",
            "adressen",
            "AS",
            "T1",
            "JOIN",
            "schüler",
            "AS",
            "T2",
            "ON",
            "T1.adresse_id",
            "=",
            "T2.aktuelle_adresse",
            "GROUP",
            "BY",
            "T1.adresse_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "An welcher Adresse wohnen derzeit die meisten Schüler? Gib die Adressnummer und alle Zeilen an.",
        "question_toks": [
            "An",
            "welcher",
            "Adresse",
            "wohnen",
            "derzeit",
            "die",
            "meisten",
            "Schüler",
            "?",
            "Gib",
            "die",
            "Adressnummer",
            "und",
            "alle",
            "Zeilen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the id, line 1, and line 2 of the address with the most students?",
        "query": "SELECT T1.adresse_id , T1.zeile_1 , T1.zeile_2 FROM adressen AS T1 JOIN schüler AS T2 ON T1.adresse_id = T2.aktuelle_adresse GROUP BY T1.adresse_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.adresse_id",
            ",",
            "T1.zeile_1",
            ",",
            "T1.zeile_2",
            "FROM",
            "adressen",
            "AS",
            "T1",
            "JOIN",
            "schüler",
            "AS",
            "T2",
            "ON",
            "T1.adresse_id",
            "=",
            "T2.aktuelle_adresse",
            "GROUP",
            "BY",
            "T1.adresse_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.adresse_id",
            ",",
            "T1.zeile_1",
            ",",
            "T1.zeile_2",
            "FROM",
            "adressen",
            "AS",
            "T1",
            "JOIN",
            "schüler",
            "AS",
            "T2",
            "ON",
            "T1.adresse_id",
            "=",
            "T2.aktuelle_adresse",
            "GROUP",
            "BY",
            "T1.adresse_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die ID, Zeile \"1\" und Zeile 2 der Adresse mit den meisten Schülern?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "ID",
            ",",
            "Zeile",
            "``",
            "1",
            "''",
            "und",
            "Zeile",
            "2",
            "der",
            "Adresse",
            "mit",
            "den",
            "meisten",
            "Schülern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "On average, when were the transcripts printed?",
        "query": "SELECT avg(datum_der_abschrift) FROM transcripts",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "datum_der_abschrift",
            ")",
            "FROM",
            "transcripts"
        ],
        "query_toks_no_value": "SELECT avg(datum_der_abschrift) FROM transcripts",
        "question": "Wann wurden die Abschriften im Durchschnitt gedruckt?",
        "question_toks": [
            "Wann",
            "wurden",
            "die",
            "Abschriften",
            "im",
            "Durchschnitt",
            "gedruckt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the average transcript date?",
        "query": "SELECT avg(datum_der_abschrift) FROM transcripts",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "datum_der_abschrift",
            ")",
            "FROM",
            "transcripts"
        ],
        "query_toks_no_value": "SELECT avg(datum_der_abschrift) FROM transcripts",
        "question": "Was ist das durchschnittliche Datum der Abschrift?",
        "question_toks": [
            "Was",
            "ist",
            "das",
            "durchschnittliche",
            "Datum",
            "der",
            "Abschrift",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "When is the first transcript released? List the date and details.",
        "query": "SELECT datum_der_abschrift , sonstige_angaben FROM transcripts ORDER BY datum_der_abschrift ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "datum_der_abschrift",
            ",",
            "sonstige_angaben",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "datum_der_abschrift",
            ",",
            "sonstige_angaben",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wann wird die erste Abschrift veröffentlicht? Gib das Datum und die Details an.",
        "question_toks": [
            "Wann",
            "wird",
            "die",
            "erste",
            "Abschrift",
            "veröffentlicht",
            "?",
            "Gib",
            "das",
            "Datum",
            "und",
            "die",
            "Details",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the earliest date of a transcript release, and what details can you tell me?",
        "query": "SELECT datum_der_abschrift , sonstige_angaben FROM transcripts ORDER BY datum_der_abschrift ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "datum_der_abschrift",
            ",",
            "sonstige_angaben",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "datum_der_abschrift",
            ",",
            "sonstige_angaben",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wann ist der früheste Termin für die Veröffentlichung einer Abschrift und welche Details kannst du mir nennen?",
        "question_toks": [
            "Wann",
            "ist",
            "der",
            "früheste",
            "Termin",
            "für",
            "die",
            "Veröffentlichung",
            "einer",
            "Abschrift",
            "und",
            "welche",
            "Details",
            "kannst",
            "du",
            "mir",
            "nennen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many transcripts are released?",
        "query": "SELECT count(*) FROM transcripts",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "transcripts"
        ],
        "query_toks_no_value": "SELECT count(*) FROM transcripts",
        "question": "Wie viele Abschriften werden freigegeben?",
        "question_toks": [
            "Wie",
            "viele",
            "Abschriften",
            "werden",
            "freigegeben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many transcripts are listed?",
        "query": "SELECT count(*) FROM transcripts",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "transcripts"
        ],
        "query_toks_no_value": "SELECT count(*) FROM transcripts",
        "question": "Wie viele Bescheinigungen sind aufgelistet?",
        "question_toks": [
            "Wie",
            "viele",
            "Bescheinigungen",
            "sind",
            "aufgelistet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the last transcript release date?",
        "query": "SELECT datum_der_abschrift FROM transcripts ORDER BY datum_der_abschrift DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "datum_der_abschrift",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "datum_der_abschrift",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wann ist das letzte Datum für die Veröffentlichung einer Abschrift?",
        "question_toks": [
            "Wann",
            "ist",
            "das",
            "letzte",
            "Datum",
            "für",
            "die",
            "Veröffentlichung",
            "einer",
            "Abschrift",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "When was the last transcript released?",
        "query": "SELECT datum_der_abschrift FROM transcripts ORDER BY datum_der_abschrift DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "datum_der_abschrift",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "datum_der_abschrift",
            "FROM",
            "transcripts",
            "ORDER",
            "BY",
            "datum_der_abschrift",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wann wurde die letzte Abschrift veröffentlicht?",
        "question_toks": [
            "Wann",
            "wurde",
            "die",
            "letzte",
            "Abschrift",
            "veröffentlicht",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "query": "SELECT count(*) , student_course_id FROM zeugnisinhalte GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "zeugnisinhalte",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "zeugnisinhalte",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie oft kann ein Kurseinschreibungsergebnis in verschiedenen Zeugnissen erscheinen? Zeige auch die Kursnummer an.",
        "question_toks": [
            "Wie",
            "oft",
            "kann",
            "ein",
            "Kurseinschreibungsergebnis",
            "in",
            "verschiedenen",
            "Zeugnissen",
            "erscheinen",
            "?",
            "Zeige",
            "auch",
            "die",
            "Kursnummer",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    55,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "query": "SELECT count(*) , student_course_id FROM zeugnisinhalte GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "zeugnisinhalte",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "zeugnisinhalte",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie oft kann ein Kurs maximal in verschiedenen Zeugnissen auftauchen und wie lautet die Einschreibe-ID dieses Kurses?",
        "question_toks": [
            "Wie",
            "oft",
            "kann",
            "ein",
            "Kurs",
            "maximal",
            "in",
            "verschiedenen",
            "Zeugnissen",
            "auftauchen",
            "und",
            "wie",
            "lautet",
            "die",
            "Einschreibe-ID",
            "dieses",
            "Kurses",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    55,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Show the date of the transcript which shows the least number of results, also list the id.",
        "query": "SELECT T2.datum_der_abschrift , T1.abschrift_id FROM zeugnisinhalte AS T1 JOIN transcripts AS T2 ON T1.abschrift_id = T2.abschrift_id GROUP BY T1.abschrift_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Zeigt das Datum der Abschrift mit den wenigsten Ergebnissen an und listet auch die ID auf.",
        "question_toks": [
            "Zeigt",
            "das",
            "Datum",
            "der",
            "Abschrift",
            "mit",
            "den",
            "wenigsten",
            "Ergebnissen",
            "an",
            "und",
            "listet",
            "auch",
            "die",
            "ID",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the date and id of the transcript with the least number of results?",
        "query": "SELECT T2.datum_der_abschrift , T1.abschrift_id FROM zeugnisinhalte AS T1 JOIN transcripts AS T2 ON T1.abschrift_id = T2.abschrift_id GROUP BY T1.abschrift_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.datum_der_abschrift",
            ",",
            "T1.abschrift_id",
            "FROM",
            "zeugnisinhalte",
            "AS",
            "T1",
            "JOIN",
            "transcripts",
            "AS",
            "T2",
            "ON",
            "T1.abschrift_id",
            "=",
            "T2.abschrift_id",
            "GROUP",
            "BY",
            "T1.abschrift_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Welches ist das Datum und die ID der Abschrift mit der geringsten Anzahl an Ergebnissen?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Datum",
            "und",
            "die",
            "ID",
            "der",
            "Abschrift",
            "mit",
            "der",
            "geringsten",
            "Anzahl",
            "an",
            "Ergebnissen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "query": "SELECT DISTINCT T2.semester_id FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id WHERE abschluss_zusammenfassung_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id WHERE abschluss_zusammenfassung_name = 'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "'Master",
            "'",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "value"
        ],
        "question": "Finde das Semester, in dem sowohl Master- als auch \"Bachelor\" eingeschrieben waren.",
        "question_toks": [
            "Finde",
            "das",
            "Semester",
            ",",
            "in",
            "dem",
            "sowohl",
            "Master-",
            "als",
            "auch",
            "``",
            "Bachelor",
            "''",
            "eingeschrieben",
            "waren",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Master\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            7
                        ],
                        [
                            "table_unit",
                            8
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    42,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    49,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ],
                        "\"Bachelor\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "query": "SELECT DISTINCT T2.semester_id FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id WHERE abschluss_zusammenfassung_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM studiengänge AS T1 JOIN student_enrolment AS T2 ON T1.studiengang_id = T2.studiengang_id WHERE abschluss_zusammenfassung_name = 'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "'Master",
            "'",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "studiengänge",
            "AS",
            "T1",
            "JOIN",
            "student_enrolment",
            "AS",
            "T2",
            "ON",
            "T1.studiengang_id",
            "=",
            "T2.studiengang_id",
            "WHERE",
            "abschluss_zusammenfassung_name",
            "=",
            "value"
        ],
        "question": "Wie lautet die Kennung des Semesters, in dem sowohl Master- als auch \"Bachelor\" eingeschrieben waren?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Kennung",
            "des",
            "Semesters",
            ",",
            "in",
            "dem",
            "sowohl",
            "Master-",
            "als",
            "auch",
            "``",
            "Bachelor",
            "''",
            "eingeschrieben",
            "waren",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Master\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            7
                        ],
                        [
                            "table_unit",
                            8
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    42,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    49,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ],
                        "\"Bachelor\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "How many different addresses do the students currently live?",
        "query": "SELECT count(DISTINCT aktuelle_adresse) FROM schüler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "aktuelle_adresse",
            ")",
            "FROM",
            "schüler"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT aktuelle_adresse) FROM schüler",
        "question": "Wie viele verschiedene Adressen haben die Schüler/innen derzeit?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Adressen",
            "haben",
            "die",
            "Schüler/innen",
            "derzeit",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the different addresses that have students living there?",
        "query": "SELECT count(DISTINCT aktuelle_adresse) FROM schüler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "aktuelle_adresse",
            ")",
            "FROM",
            "schüler"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT aktuelle_adresse) FROM schüler",
        "question": "Welche verschiedenen Adressen gibt es, an denen Schüler wohnen?",
        "question_toks": [
            "Welche",
            "verschiedenen",
            "Adressen",
            "gibt",
            "es",
            ",",
            "an",
            "denen",
            "Schüler",
            "wohnen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "List all the student details in reversed lexicographical order.",
        "query": "SELECT andere_angaben_zum_schüler FROM schüler ORDER BY andere_angaben_zum_schüler DESC",
        "query_toks": [
            "SELECT",
            "andere_angaben_zum_schüler",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "andere_angaben_zum_schüler",
            "DESC"
        ],
        "query_toks_no_value": "SELECT andere_angaben_zum_schüler FROM schüler ORDER BY andere_angaben_zum_schüler DESC",
        "question": "Listen Sie alle Schülerdaten in umgekehrter lexikografischer Reihenfolge auf.",
        "question_toks": [
            "Listen",
            "Sie",
            "alle",
            "Schülerdaten",
            "in",
            "umgekehrter",
            "lexikografischer",
            "Reihenfolge",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What other details can you tell me about students in reverse alphabetical order?",
        "query": "SELECT andere_angaben_zum_schüler FROM schüler ORDER BY andere_angaben_zum_schüler DESC",
        "query_toks": [
            "SELECT",
            "andere_angaben_zum_schüler",
            "FROM",
            "schüler",
            "ORDER",
            "BY",
            "andere_angaben_zum_schüler",
            "DESC"
        ],
        "query_toks_no_value": "SELECT andere_angaben_zum_schüler FROM schüler ORDER BY andere_angaben_zum_schüler DESC",
        "question": "Welche anderen Details kannst du mir über die Schüler/innen in umgekehrter alphabetischer Reihenfolge nennen?",
        "question_toks": [
            "Welche",
            "anderen",
            "Details",
            "kannst",
            "du",
            "mir",
            "über",
            "die",
            "Schüler/innen",
            "in",
            "umgekehrter",
            "alphabetischer",
            "Reihenfolge",
            "nennen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Describe the section h.",
        "query": "SELECT abschnittsbeschreibung FROM abschnitte WHERE abschnittname = 'h'",
        "query_toks": [
            "SELECT",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte",
            "WHERE",
            "abschnittname",
            "=",
            "'",
            "h",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte",
            "WHERE",
            "abschnittname",
            "=",
            "value"
        ],
        "question": "Beschreibe den Abschnitt \"h\".",
        "question_toks": [
            "Beschreibe",
            "den",
            "Abschnitt",
            "``",
            "h",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            39,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What is the description for the section named h?",
        "query": "SELECT abschnittsbeschreibung FROM abschnitte WHERE abschnittname = 'h'",
        "query_toks": [
            "SELECT",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte",
            "WHERE",
            "abschnittname",
            "=",
            "'",
            "h",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "abschnittsbeschreibung",
            "FROM",
            "abschnitte",
            "WHERE",
            "abschnittname",
            "=",
            "value"
        ],
        "question": "Wie lautet die Beschreibung für den Abschnitt mit dem Namen \"h\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Beschreibung",
            "für",
            "den",
            "Abschnitt",
            "mit",
            "dem",
            "Namen",
            "``",
            "h",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            39,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
        "query": "select t1.vorname from schüler as t1 join adressen as t2 on t1.permanente_adresse_id = t2.adresse_id where t2.land = 'haiti' or t1.handynummer = '09700166582'",
        "query_toks": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "adressen",
            "as",
            "t2",
            "on",
            "t1.permanente_adresse_id",
            "=",
            "t2.adresse_id",
            "where",
            "t2.land",
            "=",
            "'haiti",
            "'",
            "or",
            "t1.handynummer",
            "=",
            "'09700166582",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "adressen",
            "as",
            "t2",
            "on",
            "t1.permanente_adresse_id",
            "=",
            "t2.adresse_id",
            "where",
            "t2.land",
            "=",
            "value",
            "or",
            "t1.handynummer",
            "=",
            "value"
        ],
        "question": "Finde den Vornamen der Schüler, die dauerhaft im Land Haiti leben oder die Handynummer \"09700166582\" haben.",
        "question_toks": [
            "Finde",
            "den",
            "Vornamen",
            "der",
            "Schüler",
            ",",
            "die",
            "dauerhaft",
            "im",
            "Land",
            "Haiti",
            "leben",
            "oder",
            "die",
            "Handynummer",
            "``",
            "09700166582",
            "''",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"haiti\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "\"09700166582\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "match": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
        "query": "select t1.vorname from schüler as t1 join adressen as t2 on t1.permanente_adresse_id = t2.adresse_id where t2.land = 'haiti' or t1.handynummer = '09700166582'",
        "query_toks": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "adressen",
            "as",
            "t2",
            "on",
            "t1.permanente_adresse_id",
            "=",
            "t2.adresse_id",
            "where",
            "t2.land",
            "=",
            "'haiti",
            "'",
            "or",
            "t1.handynummer",
            "=",
            "'09700166582",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1.vorname",
            "from",
            "schüler",
            "as",
            "t1",
            "join",
            "adressen",
            "as",
            "t2",
            "on",
            "t1.permanente_adresse_id",
            "=",
            "t2.adresse_id",
            "where",
            "t2.land",
            "=",
            "value",
            "or",
            "t1.handynummer",
            "=",
            "value"
        ],
        "question": "Wie lauten die Vornamen der Schüler, die dauerhaft in Haiti leben oder die Handynummer \"09700166582\" haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "der",
            "Schüler",
            ",",
            "die",
            "dauerhaft",
            "in",
            "Haiti",
            "leben",
            "oder",
            "die",
            "Handynummer",
            "``",
            "09700166582",
            "''",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"haiti\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "\"09700166582\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the title of all cartoons in alphabetical order.",
        "query": "SELECT titel FROM cartoon ORDER BY titel",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "ORDER",
            "BY",
            "titel"
        ],
        "query_toks_no_value": "SELECT titel FROM cartoon ORDER BY titel",
        "question": "Liste die Titel aller Cartoons in alphabetischer Reihenfolge auf.",
        "question_toks": [
            "Liste",
            "die",
            "Titel",
            "aller",
            "Cartoons",
            "in",
            "alphabetischer",
            "Reihenfolge",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the titles of the cartoons sorted alphabetically?",
        "query": "SELECT titel FROM cartoon ORDER BY titel",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "ORDER",
            "BY",
            "titel"
        ],
        "query_toks_no_value": "SELECT titel FROM cartoon ORDER BY titel",
        "question": "Wie lauten die Titel der Cartoons in alphabetischer Reihenfolge?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Titel",
            "der",
            "Cartoons",
            "in",
            "alphabetischer",
            "Reihenfolge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List all cartoon directed by \"Ben Jones\".",
        "query": "SELECT titel FROM cartoon WHERE regie = \"Ben Jones\";",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            ";"
        ],
        "question": "Liste aller Zeichentrickfilme unter der Regie von \"\"Ben Jones\"\".",
        "question_toks": [
            "Liste",
            "aller",
            "Zeichentrickfilme",
            "unter",
            "der",
            "Regie",
            "von",
            "``",
            "''",
            "Ben",
            "Jones",
            "''",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the names of all cartoons directed by Ben Jones?",
        "query": "SELECT titel FROM cartoon WHERE regie = \"Ben Jones\";",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die Namen aller Zeichentrickfilme, bei denen \"Ben Jones\" Regie führte?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "aller",
            "Zeichentrickfilme",
            ",",
            "bei",
            "denen",
            "``",
            "Ben",
            "Jones",
            "''",
            "Regie",
            "führte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "How many cartoons were written by \"Joseph Kuhr\"?",
        "query": "SELECT count(*) FROM cartoon WHERE geschrieben_von = \"Joseph Kuhr\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "cartoon",
            "WHERE",
            "geschrieben_von",
            "=",
            "``",
            "Joseph",
            "Kuhr",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "cartoon",
            "WHERE",
            "geschrieben_von",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Cartoons wurden von \"\"Joseph Kuhr\"\" geschrieben?",
        "question_toks": [
            "Wie",
            "viele",
            "Cartoons",
            "wurden",
            "von",
            "``",
            "''",
            "Joseph",
            "Kuhr",
            "''",
            "''",
            "geschrieben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Joseph Kuhr\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the number of cartoones written by Joseph Kuhr?",
        "query": "SELECT count(*) FROM cartoon WHERE geschrieben_von = \"Joseph Kuhr\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "cartoon",
            "WHERE",
            "geschrieben_von",
            "=",
            "``",
            "Joseph",
            "Kuhr",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "cartoon",
            "WHERE",
            "geschrieben_von",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Cartoons hat \"Joseph Kuhr\" geschrieben?",
        "question_toks": [
            "Wie",
            "viele",
            "Cartoons",
            "hat",
            "``",
            "Joseph",
            "Kuhr",
            "''",
            "geschrieben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Joseph Kuhr\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "list all cartoon titles and their directors ordered by their air date",
        "query": "SELECT titel , regie FROM cartoon ORDER BY ursprüngliches_sendedatum",
        "query_toks": [
            "SELECT",
            "titel",
            ",",
            "regie",
            "FROM",
            "cartoon",
            "ORDER",
            "BY",
            "ursprüngliches_sendedatum"
        ],
        "query_toks_no_value": "SELECT titel , regie FROM cartoon ORDER BY ursprüngliches_sendedatum",
        "question": "Liste aller Zeichentrickfilme und ihrer Regisseure, geordnet nach ihrem Ausstrahlungsdatum",
        "question_toks": [
            "Liste",
            "aller",
            "Zeichentrickfilme",
            "und",
            "ihrer",
            "Regisseure",
            ",",
            "geordnet",
            "nach",
            "ihrem",
            "Ausstrahlungsdatum"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the name and directors of all the cartoons that are ordered by air date?",
        "query": "SELECT titel , regie FROM cartoon ORDER BY ursprüngliches_sendedatum",
        "query_toks": [
            "SELECT",
            "titel",
            ",",
            "regie",
            "FROM",
            "cartoon",
            "ORDER",
            "BY",
            "ursprüngliches_sendedatum"
        ],
        "query_toks_no_value": "SELECT titel , regie FROM cartoon ORDER BY ursprüngliches_sendedatum",
        "question": "Wie heißen die Regisseure aller Zeichentrickfilme, die nach Sendedatum geordnet sind?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Regisseure",
            "aller",
            "Zeichentrickfilme",
            ",",
            "die",
            "nach",
            "Sendedatum",
            "geordnet",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "query": "SELECT titel FROM cartoon WHERE regie = \"Ben Jones\" OR regie = \"Brandon Vietti\";",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            "OR",
            "regie",
            "=",
            "``",
            "Brandon",
            "Vietti",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            "OR",
            "regie",
            "=",
            "value",
            ";"
        ],
        "question": "Gib die Titel aller Zeichentrickfilme an, bei denen \"\"Ben Jones\"\" oder \"\"Brandon Vietti\"\" Regie geführt haben.",
        "question_toks": [
            "Gib",
            "die",
            "Titel",
            "aller",
            "Zeichentrickfilme",
            "an",
            ",",
            "bei",
            "denen",
            "``",
            "''",
            "Ben",
            "Jones",
            "''",
            "''",
            "oder",
            "``",
            "''",
            "Brandon",
            "Vietti",
            "''",
            "''",
            "Regie",
            "geführt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Brandon Vietti\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "query": "SELECT titel FROM cartoon WHERE regie = \"Ben Jones\" OR regie = \"Brandon Vietti\";",
        "query_toks": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            "OR",
            "regie",
            "=",
            "``",
            "Brandon",
            "Vietti",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "titel",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            "OR",
            "regie",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lauten die Titel aller Zeichentrickfilme, bei denen \"Ben Jones\" oder \"Brandon Vietti\" Regie geführt haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Titel",
            "aller",
            "Zeichentrickfilme",
            ",",
            "bei",
            "denen",
            "``",
            "Ben",
            "Jones",
            "''",
            "oder",
            "``",
            "Brandon",
            "Vietti",
            "''",
            "Regie",
            "geführt",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Brandon Vietti\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "query": "SELECT land , count(*) FROM tv_channel GROUP BY land ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches Land hat die meisten TV-Kanäle? Nenne das Land und die Anzahl der TV-Kanäle, die es hat.",
        "question_toks": [
            "Welches",
            "Land",
            "hat",
            "die",
            "meisten",
            "TV-Kanäle",
            "?",
            "Nenne",
            "das",
            "Land",
            "und",
            "die",
            "Anzahl",
            "der",
            "TV-Kanäle",
            ",",
            "die",
            "es",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the country with the most number of TV Channels and how many does it have?",
        "query": "SELECT land , count(*) FROM tv_channel GROUP BY land ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches ist das Land mit den meisten Fernsehkanälen und wie viele hat es?",
        "question_toks": [
            "Welches",
            "ist",
            "das",
            "Land",
            "mit",
            "den",
            "meisten",
            "Fernsehkanälen",
            "und",
            "wie",
            "viele",
            "hat",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the number of different series names and contents in the TV Channel table.",
        "query": "SELECT count(DISTINCT serienname) , count(DISTINCT inhalt) FROM tv_channel;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "serienname",
            ")",
            ",",
            "count",
            "(",
            "DISTINCT",
            "inhalt",
            ")",
            "FROM",
            "tv_channel",
            ";"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT serienname) , count(DISTINCT inhalt) FROM tv_channel;",
        "question": "Nenne die Anzahl der verschiedenen Seriennamen und Inhalte in der TV-Kanaltabelle.",
        "question_toks": [
            "Nenne",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Seriennamen",
            "und",
            "Inhalte",
            "in",
            "der",
            "TV-Kanaltabelle",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "How many different series and contents are listed in the TV Channel table?",
        "query": "SELECT count(DISTINCT serienname) , count(DISTINCT inhalt) FROM tv_channel;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "serienname",
            ")",
            ",",
            "count",
            "(",
            "DISTINCT",
            "inhalt",
            ")",
            "FROM",
            "tv_channel",
            ";"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT serienname) , count(DISTINCT inhalt) FROM tv_channel;",
        "question": "Wie viele verschiedene Serien und Inhalte sind in der TV-Kanaltabelle aufgeführt?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Serien",
            "und",
            "Inhalte",
            "sind",
            "in",
            "der",
            "TV-Kanaltabelle",
            "aufgeführt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "query": "SELECT inhalt FROM tv_channel WHERE serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "inhalt",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "inhalt",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Was ist der Inhalt des Fernsehsenders mit dem Seriennamen \"\"Sky Radio\"\"?",
        "question_toks": [
            "Was",
            "ist",
            "der",
            "Inhalt",
            "des",
            "Fernsehsenders",
            "mit",
            "dem",
            "Seriennamen",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the content of the series Sky Radio?",
        "query": "SELECT inhalt FROM tv_channel WHERE serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "inhalt",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "inhalt",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Was ist der Inhalt der Serie \"Sky Radio\"?",
        "question_toks": [
            "Was",
            "ist",
            "der",
            "Inhalt",
            "der",
            "Serie",
            "``",
            "Sky",
            "Radio",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "query": "SELECT paket_option FROM tv_channel WHERE serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Was ist die Paketoption des Fernsehsenders mit dem Seriennamen \"\"Sky Radio\"\"?",
        "question_toks": [
            "Was",
            "ist",
            "die",
            "Paketoption",
            "des",
            "Fernsehsenders",
            "mit",
            "dem",
            "Seriennamen",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "query": "SELECT paket_option FROM tv_channel WHERE serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Welche Paketoptionen gibt es für die TV-Sender, deren Seriennamen \"Sky Radio\" sind?",
        "question_toks": [
            "Welche",
            "Paketoptionen",
            "gibt",
            "es",
            "für",
            "die",
            "TV-Sender",
            ",",
            "deren",
            "Seriennamen",
            "``",
            "Sky",
            "Radio",
            "''",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "How many TV Channel using language English?",
        "query": "SELECT count(*) FROM tv_channel WHERE sprache = \"English\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Fernsehsender verwenden die Sprache \"English\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Fernsehsender",
            "verwenden",
            "die",
            "Sprache",
            "``",
            "English",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "How many TV Channels use the English language?",
        "query": "SELECT count(*) FROM tv_channel WHERE sprache = \"English\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "=",
            "value",
            ";"
        ],
        "question": "Wie viele Fernsehsender verwenden die \"English\" Sprache?",
        "question_toks": [
            "Wie",
            "viele",
            "Fernsehsender",
            "verwenden",
            "die",
            "``",
            "English",
            "''",
            "Sprache",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "query": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache ORDER BY count(*) ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Nenne die Sprache und die Anzahl der TV-Sender. Nenne die Sprache und die Anzahl der Fernsehsender.",
        "question_toks": [
            "Nenne",
            "die",
            "Sprache",
            "und",
            "die",
            "Anzahl",
            "der",
            "TV-Sender",
            ".",
            "Nenne",
            "die",
            "Sprache",
            "und",
            "die",
            "Anzahl",
            "der",
            "Fernsehsender",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "query": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache ORDER BY count(*) ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welche Sprachen werden von den wenigsten TV-Sendern verwendet und wie viele Sender nutzen sie?",
        "question_toks": [
            "Welche",
            "Sprachen",
            "werden",
            "von",
            "den",
            "wenigsten",
            "TV-Sendern",
            "verwendet",
            "und",
            "wie",
            "viele",
            "Sender",
            "nutzen",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List each language and the number of TV Channels using it.",
        "query": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache"
        ],
        "query_toks_no_value": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache",
        "question": "Nenne jede Sprache und die Anzahl der Fernsehsender, die sie verwenden.",
        "question_toks": [
            "Nenne",
            "jede",
            "Sprache",
            "und",
            "die",
            "Anzahl",
            "der",
            "Fernsehsender",
            ",",
            "die",
            "sie",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "For each language, list the number of TV Channels that use it.",
        "query": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "sprache"
        ],
        "query_toks_no_value": "SELECT sprache , count(*) FROM tv_channel GROUP BY sprache",
        "question": "Gib für jede Sprache die Anzahl der Fernsehsender an, die sie verwenden.",
        "question_toks": [
            "Gib",
            "für",
            "jede",
            "Sprache",
            "die",
            "Anzahl",
            "der",
            "Fernsehsender",
            "an",
            ",",
            "die",
            "sie",
            "verwenden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "query": "SELECT T1.serienname FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.titel = \"The Rise of the Blue Beetle!\";",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.titel",
            "=",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "!",
            "``",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.titel",
            "=",
            "value",
            ";"
        ],
        "question": "Welcher Fernsehsender zeigt den Zeichentrickfilm \"The Rise of the Blue Beetle!\"? Nenne den Namen der Serie des Fernsehsenders.",
        "question_toks": [
            "Welcher",
            "Fernsehsender",
            "zeigt",
            "den",
            "Zeichentrickfilm",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "!",
            "''",
            "?",
            "Nenne",
            "den",
            "Namen",
            "der",
            "Serie",
            "des",
            "Fernsehsenders",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"The Rise of the Blue Beetle!\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "query": "SELECT T1.serienname FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.titel = \"The Rise of the Blue Beetle!\";",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.titel",
            "=",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "!",
            "``",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.titel",
            "=",
            "value",
            ";"
        ],
        "question": "Wie heißt die Serie des Fernsehsenders, der den Zeichentrickfilm \"The Rise of the Blue Beetle\" zeigt?",
        "question_toks": [
            "Wie",
            "heißt",
            "die",
            "Serie",
            "des",
            "Fernsehsenders",
            ",",
            "der",
            "den",
            "Zeichentrickfilm",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "''",
            "zeigt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"The Rise of the Blue Beetle!\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "query": "SELECT T2.titel FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T1.serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.titel",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.titel",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Liste die Titel aller Zeichentrickfilme auf, die auf dem Fernsehsender mit dem Seriennamen \"\"Sky Radio\"\" gezeigt werden.",
        "question_toks": [
            "Liste",
            "die",
            "Titel",
            "aller",
            "Zeichentrickfilme",
            "auf",
            ",",
            "die",
            "auf",
            "dem",
            "Fernsehsender",
            "mit",
            "dem",
            "Seriennamen",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "gezeigt",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "query": "SELECT T2.titel FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T1.serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.titel",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.titel",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lautet der Titel aller Cartoons, die auf dem Fernsehsender mit dem Seriennamen \"\"Sky Radio\"\" laufen?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Titel",
            "aller",
            "Cartoons",
            ",",
            "die",
            "auf",
            "dem",
            "Fernsehsender",
            "mit",
            "dem",
            "Seriennamen",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "laufen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the Episode of all TV series sorted by rating.",
        "query": "SELECT episode FROM tv_serien ORDER BY bewertung",
        "query_toks": [
            "SELECT",
            "episode",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung"
        ],
        "query_toks_no_value": "SELECT episode FROM tv_serien ORDER BY bewertung",
        "question": "Liste der Episoden aller TV-Serien sortiert nach Bewertung.",
        "question_toks": [
            "Liste",
            "der",
            "Episoden",
            "aller",
            "TV-Serien",
            "sortiert",
            "nach",
            "Bewertung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are all of the episodes ordered by ratings?",
        "query": "SELECT episode FROM tv_serien ORDER BY bewertung",
        "query_toks": [
            "SELECT",
            "episode",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung"
        ],
        "query_toks_no_value": "SELECT episode FROM tv_serien ORDER BY bewertung",
        "question": "Wie sind alle Episoden nach Einschaltquoten geordnet?",
        "question_toks": [
            "Wie",
            "sind",
            "alle",
            "Episoden",
            "nach",
            "Einschaltquoten",
            "geordnet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
        "query": "SELECT episode , bewertung FROM tv_serien ORDER BY bewertung DESC LIMIT 3;",
        "query_toks": [
            "SELECT",
            "episode",
            ",",
            "bewertung",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung",
            "DESC",
            "LIMIT",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "episode",
            ",",
            "bewertung",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Liste der \"3\" bestbewerteten TV-Serien. Liste der Episoden und Bewertungen der TV-Serien.",
        "question_toks": [
            "Liste",
            "der",
            "``",
            "3",
            "''",
            "bestbewerteten",
            "TV-Serien",
            ".",
            "Liste",
            "der",
            "Episoden",
            "und",
            "Bewertungen",
            "der",
            "TV-Serien",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "query": "SELECT episode , bewertung FROM tv_serien ORDER BY bewertung DESC LIMIT 3;",
        "query_toks": [
            "SELECT",
            "episode",
            ",",
            "bewertung",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung",
            "DESC",
            "LIMIT",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "episode",
            ",",
            "bewertung",
            "FROM",
            "tv_serien",
            "ORDER",
            "BY",
            "bewertung",
            "DESC",
            "LIMIT",
            "value",
            ";"
        ],
        "question": "Welches sind die \"3\" am besten bewerteten Episoden in der TV-Serientabelle und wie hoch waren diese Bewertungen?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "``",
            "3",
            "''",
            "am",
            "besten",
            "bewerteten",
            "Episoden",
            "in",
            "der",
            "TV-Serientabelle",
            "und",
            "wie",
            "hoch",
            "waren",
            "diese",
            "Bewertungen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is minimum and maximum share of TV series?",
        "query": "SELECT max(anteil) , min(anteil) FROM tv_serien;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "anteil",
            ")",
            ",",
            "min",
            "(",
            "anteil",
            ")",
            "FROM",
            "tv_serien",
            ";"
        ],
        "query_toks_no_value": "SELECT max(anteil) , min(anteil) FROM tv_serien;",
        "question": "Wie hoch ist der minimale und maximale Anteil an Fernsehserien?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "minimale",
            "und",
            "maximale",
            "Anteil",
            "an",
            "Fernsehserien",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the maximum and minimum share for the TV series?",
        "query": "SELECT max(anteil) , min(anteil) FROM tv_serien;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "anteil",
            ")",
            ",",
            "min",
            "(",
            "anteil",
            ")",
            "FROM",
            "tv_serien",
            ";"
        ],
        "query_toks_no_value": "SELECT max(anteil) , min(anteil) FROM tv_serien;",
        "question": "Wie hoch ist der maximale und minimale Anteil für die Fernsehserie?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "maximale",
            "und",
            "minimale",
            "Anteil",
            "für",
            "die",
            "Fernsehserie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "query": "SELECT ausstrahlungsdatum FROM tv_serien WHERE episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "ausstrahlungsdatum",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ausstrahlungsdatum",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "value",
            ";"
        ],
        "question": "Wann wird die TV-Serie mit der Episode \"\"A Love of a Lifetime\"\" ausgestrahlt?",
        "question_toks": [
            "Wann",
            "wird",
            "die",
            "TV-Serie",
            "mit",
            "der",
            "Episode",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "ausgestrahlt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "When did the episode \"A Love of a Lifetime\" air?",
        "query": "SELECT ausstrahlungsdatum FROM tv_serien WHERE episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "ausstrahlungsdatum",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ausstrahlungsdatum",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "value",
            ";"
        ],
        "question": "Wann wurde die Folge \"\"A Love of a Lifetime\"\" ausgestrahlt?",
        "question_toks": [
            "Wann",
            "wurde",
            "die",
            "Folge",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "ausgestrahlt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "query": "SELECT wöchentlicher_rang FROM tv_serien WHERE episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "wöchentlicher_rang",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "wöchentlicher_rang",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lautet der wöchentliche Rang der Fernsehserie mit der Episode \"\"A Love of a Lifetime\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "wöchentliche",
            "Rang",
            "der",
            "Fernsehserie",
            "mit",
            "der",
            "Episode",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "query": "SELECT wöchentlicher_rang FROM tv_serien WHERE episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "wöchentlicher_rang",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "wöchentlicher_rang",
            "FROM",
            "tv_serien",
            "WHERE",
            "episode",
            "=",
            "value",
            ";"
        ],
        "question": "Wie lautet die wöchentliche Rangliste für die Episode \"\"A Love of a Lifetime\"\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "wöchentliche",
            "Rangliste",
            "für",
            "die",
            "Episode",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "query": "SELECT T1.serienname FROM tv_channel AS T1 JOIN tv_serien AS T2 ON T1.id = T2.kanal WHERE T2.episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.episode",
            "=",
            "value",
            ";"
        ],
        "question": "Auf welchem Fernsehsender läuft die Serie mit der Episode \"\"A Love of a Lifetime\"\"? Nenne den Namen des Fernsehsenders der Serie.",
        "question_toks": [
            "Auf",
            "welchem",
            "Fernsehsender",
            "läuft",
            "die",
            "Serie",
            "mit",
            "der",
            "Episode",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "?",
            "Nenne",
            "den",
            "Namen",
            "des",
            "Fernsehsenders",
            "der",
            "Serie",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "query": "SELECT T1.serienname FROM tv_channel AS T1 JOIN tv_serien AS T2 ON T1.id = T2.kanal WHERE T2.episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.episode",
            "=",
            "value",
            ";"
        ],
        "question": "Wie heißt die Serie mit der Folge \"\"A Love of a Lifetime\"\"?",
        "question_toks": [
            "Wie",
            "heißt",
            "die",
            "Serie",
            "mit",
            "der",
            "Folge",
            "``",
            "''",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
        "query": "SELECT T2.episode FROM tv_channel AS T1 JOIN tv_serien AS T2 ON T1.id = T2.kanal WHERE T1.serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.episode",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.episode",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Listet die Episoden aller TV-Serien auf, die auf dem TV-Kanal mit dem Seriennamen \"\"Sky Radio\"\" gezeigt werden.",
        "question_toks": [
            "Listet",
            "die",
            "Episoden",
            "aller",
            "TV-Serien",
            "auf",
            ",",
            "die",
            "auf",
            "dem",
            "TV-Kanal",
            "mit",
            "dem",
            "Seriennamen",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "gezeigt",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the episode for the TV series named \"Sky Radio\"?",
        "query": "SELECT T2.episode FROM tv_channel AS T1 JOIN tv_serien AS T2 ON T1.id = T2.kanal WHERE T1.serienname = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.episode",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.episode",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "tv_serien",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T1.serienname",
            "=",
            "value",
            ";"
        ],
        "question": "Wie heißt die Folge der Fernsehserie \"\"Sky Radio\"\"?",
        "question_toks": [
            "Wie",
            "heißt",
            "die",
            "Folge",
            "der",
            "Fernsehserie",
            "``",
            "''",
            "Sky",
            "Radio",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "Find the number of cartoons directed by each of the listed directors.",
        "query": "SELECT count(*) , regie FROM cartoon GROUP BY regie",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "regie",
            "FROM",
            "cartoon",
            "GROUP",
            "BY",
            "regie"
        ],
        "query_toks_no_value": "SELECT count(*) , regie FROM cartoon GROUP BY regie",
        "question": "Finde die Anzahl der Zeichentrickfilme, bei denen jeder der aufgeführten Regisseure Regie geführt hat.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Zeichentrickfilme",
            ",",
            "bei",
            "denen",
            "jeder",
            "der",
            "aufgeführten",
            "Regisseure",
            "Regie",
            "geführt",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "How many cartoons did each director create?",
        "query": "SELECT count(*) , regie FROM cartoon GROUP BY regie",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "regie",
            "FROM",
            "cartoon",
            "GROUP",
            "BY",
            "regie"
        ],
        "query_toks_no_value": "SELECT count(*) , regie FROM cartoon GROUP BY regie",
        "question": "Wie viele Trickfilme hat jeder Regisseur geschaffen?",
        "question_toks": [
            "Wie",
            "viele",
            "Trickfilme",
            "hat",
            "jeder",
            "Regisseur",
            "geschaffen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "Find the production code and channel of the most recently aired cartoon .",
        "query": "select produktionscode , kanal from cartoon order by ursprüngliches_sendedatum desc limit 1",
        "query_toks": [
            "select",
            "produktionscode",
            ",",
            "kanal",
            "from",
            "cartoon",
            "order",
            "by",
            "ursprüngliches_sendedatum",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "produktionscode",
            ",",
            "kanal",
            "from",
            "cartoon",
            "order",
            "by",
            "ursprüngliches_sendedatum",
            "desc",
            "limit",
            "value"
        ],
        "question": "Finde den Produktionscode und den Kanal des zuletzt ausgestrahlten Zeichentrickfilms.",
        "question_toks": [
            "Finde",
            "den",
            "Produktionscode",
            "und",
            "den",
            "Kanal",
            "des",
            "zuletzt",
            "ausgestrahlten",
            "Zeichentrickfilms",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the produdction code and channel of the most recent cartoon ?",
        "query": "select produktionscode , kanal from cartoon order by ursprüngliches_sendedatum desc limit 1",
        "query_toks": [
            "select",
            "produktionscode",
            ",",
            "kanal",
            "from",
            "cartoon",
            "order",
            "by",
            "ursprüngliches_sendedatum",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "produktionscode",
            ",",
            "kanal",
            "from",
            "cartoon",
            "order",
            "by",
            "ursprüngliches_sendedatum",
            "desc",
            "limit",
            "value"
        ],
        "question": "Wie lautet der Produktionscode und der Kanal des neuesten Cartoons?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Produktionscode",
            "und",
            "der",
            "Kanal",
            "des",
            "neuesten",
            "Cartoons",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "Find the package choice and series name of the TV channel that has high definition TV.",
        "query": "SELECT paket_option , serienname FROM tv_channel WHERE hochauflösendes_fernsehen = \"yes\"",
        "query_toks": [
            "SELECT",
            "paket_option",
            ",",
            "serienname",
            "FROM",
            "tv_channel",
            "WHERE",
            "hochauflösendes_fernsehen",
            "=",
            "``",
            "yes",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            ",",
            "serienname",
            "FROM",
            "tv_channel",
            "WHERE",
            "hochauflösendes_fernsehen",
            "=",
            "value"
        ],
        "question": "Finde die Paketauswahl und den Seriennamen des Fernsehsenders, der High Definition TV anbietet.",
        "question_toks": [
            "Finde",
            "die",
            "Paketauswahl",
            "und",
            "den",
            "Seriennamen",
            "des",
            "Fernsehsenders",
            ",",
            "der",
            "High",
            "Definition",
            "TV",
            "anbietet",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"yes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "query": "SELECT paket_option , serienname FROM tv_channel WHERE hochauflösendes_fernsehen = \"yes\"",
        "query_toks": [
            "SELECT",
            "paket_option",
            ",",
            "serienname",
            "FROM",
            "tv_channel",
            "WHERE",
            "hochauflösendes_fernsehen",
            "=",
            "``",
            "yes",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            ",",
            "serienname",
            "FROM",
            "tv_channel",
            "WHERE",
            "hochauflösendes_fernsehen",
            "=",
            "value"
        ],
        "question": "Wie lauten die Paketoptionen und der Name der Serie für den TV-Kanal, der High Definition TV unterstützt?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Paketoptionen",
            "und",
            "der",
            "Name",
            "der",
            "Serie",
            "für",
            "den",
            "TV-Kanal",
            ",",
            "der",
            "High",
            "Definition",
            "TV",
            "unterstützt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"yes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "query": "SELECT T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.geschrieben_von = 'Todd Casey'",
        "query_toks": [
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "value"
        ],
        "question": "Welche Fernsehsender spielen einen Cartoon, der von \"Todd Casey\" geschrieben wurde?",
        "question_toks": [
            "Welche",
            "Fernsehsender",
            "spielen",
            "einen",
            "Cartoon",
            ",",
            "der",
            "von",
            "``",
            "Todd",
            "Casey",
            "''",
            "geschrieben",
            "wurde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Todd Casey\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "query": "SELECT T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.geschrieben_von = 'Todd Casey'",
        "query_toks": [
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "value"
        ],
        "question": "In welchen Ländern gibt es Cartoons im Fernsehen, die von \"Todd Casey\" geschrieben wurden?",
        "question_toks": [
            "In",
            "welchen",
            "Ländern",
            "gibt",
            "es",
            "Cartoons",
            "im",
            "Fernsehen",
            ",",
            "die",
            "von",
            "``",
            "Todd",
            "Casey",
            "''",
            "geschrieben",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Todd Casey\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "query": "SELECT land FROM tv_channel EXCEPT SELECT T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.geschrieben_von = 'Todd Casey'",
        "query_toks": [
            "SELECT",
            "land",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "value"
        ],
        "question": "Welche Fernsehsender spielen keine Cartoons, die von \"Todd Casey\" geschrieben wurden?",
        "question_toks": [
            "Welche",
            "Fernsehsender",
            "spielen",
            "keine",
            "Cartoons",
            ",",
            "die",
            "von",
            "``",
            "Todd",
            "Casey",
            "''",
            "geschrieben",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"Todd Casey\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the countries that are not playing cartoons written by Todd Casey?",
        "query": "SELECT land FROM tv_channel EXCEPT SELECT T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.geschrieben_von = 'Todd Casey'",
        "query_toks": [
            "SELECT",
            "land",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "land",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.geschrieben_von",
            "=",
            "value"
        ],
        "question": "Welche Länder spielen keine von \"Todd Casey\" geschriebenen Cartoons?",
        "question_toks": [
            "Welche",
            "Länder",
            "spielen",
            "keine",
            "von",
            "``",
            "Todd",
            "Casey",
            "''",
            "geschriebenen",
            "Cartoons",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"Todd Casey\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "tvshow",
        "match": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "query": "SELECT T1.serienname , T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.regie = 'Michael Chang' INTERSECT SELECT T1.serienname , T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.regie = 'Ben Jones'",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "'Michael",
            "Chang",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "value"
        ],
        "question": "Finde den Namen der Serie und das Land des Fernsehsenders, der einige Zeichentrickfilme unter der Regie von \"Ben Jones\" und \"Michael Chang\" zeigt?",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "der",
            "Serie",
            "und",
            "das",
            "Land",
            "des",
            "Fernsehsenders",
            ",",
            "der",
            "einige",
            "Zeichentrickfilme",
            "unter",
            "der",
            "Regie",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "und",
            "``",
            "Michael",
            "Chang",
            "''",
            "zeigt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Michael Chang\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "query": "SELECT T1.serienname , T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.regie = 'Michael Chang' INTERSECT SELECT T1.serienname , T1.land FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.kanal WHERE T2.regie = 'Ben Jones'",
        "query_toks": [
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "'Michael",
            "Chang",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.serienname",
            ",",
            "T1.land",
            "FROM",
            "tv_channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.kanal",
            "WHERE",
            "T2.regie",
            "=",
            "value"
        ],
        "question": "Wie heißen die Serien und Länder aller Fernsehsender, die Zeichentrickfilme unter der Regie von \"Ben Jones\" und Zeichentrickfilme unter der Regie von \"Michael Chang\" zeigen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Serien",
            "und",
            "Länder",
            "aller",
            "Fernsehsender",
            ",",
            "die",
            "Zeichentrickfilme",
            "unter",
            "der",
            "Regie",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "und",
            "Zeichentrickfilme",
            "unter",
            "der",
            "Regie",
            "von",
            "``",
            "Michael",
            "Chang",
            "''",
            "zeigen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Michael Chang\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "query": "SELECT pixel_seitenverhältnis_par , land FROM tv_channel WHERE sprache != 'English'",
        "query_toks": [
            "SELECT",
            "pixel_seitenverhältnis_par",
            ",",
            "land",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "!",
            "=",
            "'English",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "pixel_seitenverhältnis_par",
            ",",
            "land",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "!",
            "=",
            "value"
        ],
        "question": "finde das Pixel-Seitenverhältnis und die Nation der Fernsehsender, die nicht \"English\" sprechen.",
        "question_toks": [
            "finde",
            "das",
            "Pixel-Seitenverhältnis",
            "und",
            "die",
            "Nation",
            "der",
            "Fernsehsender",
            ",",
            "die",
            "nicht",
            "``",
            "English",
            "''",
            "sprechen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "query": "SELECT pixel_seitenverhältnis_par , land FROM tv_channel WHERE sprache != 'English'",
        "query_toks": [
            "SELECT",
            "pixel_seitenverhältnis_par",
            ",",
            "land",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "!",
            "=",
            "'English",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "pixel_seitenverhältnis_par",
            ",",
            "land",
            "FROM",
            "tv_channel",
            "WHERE",
            "sprache",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lautet das Pixel-Seitenverhältnis und das Herkunftsland aller Fernsehsender, die nicht \"English\" sprechen?",
        "question_toks": [
            "Wie",
            "lautet",
            "das",
            "Pixel-Seitenverhältnis",
            "und",
            "das",
            "Herkunftsland",
            "aller",
            "Fernsehsender",
            ",",
            "die",
            "nicht",
            "``",
            "English",
            "''",
            "sprechen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "find id of the tv channels that from the countries where have more than two tv channels.",
        "query": "SELECT id FROM tv_channel GROUP BY land HAVING count(*) > 2",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde die ID der Fernsehsender aus den Ländern, die mehr als zwei Fernsehsender haben.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            "der",
            "Fernsehsender",
            "aus",
            "den",
            "Ländern",
            ",",
            "die",
            "mehr",
            "als",
            "zwei",
            "Fernsehsender",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the ids of all tv channels that have more than 2 TV channels?",
        "query": "SELECT id FROM tv_channel GROUP BY land HAVING count(*) > 2",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "land",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie lauten die Kennungen aller Fernsehsender, die mehr als 2 Fernsehkanäle haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Kennungen",
            "aller",
            "Fernsehsender",
            ",",
            "die",
            "mehr",
            "als",
            "2",
            "Fernsehkanäle",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "query": "SELECT id FROM tv_channel EXCEPT SELECT kanal FROM cartoon WHERE regie = 'Ben Jones'",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value"
        ],
        "question": "Finde die ID der Fernsehsender, die keine Zeichentrickfilme von \"Ben Jones\" zeigen.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            "der",
            "Fernsehsender",
            ",",
            "die",
            "keine",
            "Zeichentrickfilme",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "zeigen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "query": "SELECT id FROM tv_channel EXCEPT SELECT kanal FROM cartoon WHERE regie = 'Ben Jones'",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "EXCEPT",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value"
        ],
        "question": "Wie heißen die Fernsehsender, die keine Zeichentrickfilme von \"Ben Jones\" zeigen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Fernsehsender",
            ",",
            "die",
            "keine",
            "Zeichentrickfilme",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "zeigen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "tvshow",
        "match": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "query": "SELECT paket_option FROM tv_channel WHERE id NOT IN (SELECT kanal FROM cartoon WHERE regie = 'Ben Jones')",
        "query_toks": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "'Ben",
            "Jones",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            ")"
        ],
        "question": "Finde die Paketoption des Fernsehsenders, der keine Zeichentrickfilme von \"Ben Jones\" anbietet.",
        "question_toks": [
            "Finde",
            "die",
            "Paketoption",
            "des",
            "Fernsehsenders",
            ",",
            "der",
            "keine",
            "Zeichentrickfilme",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "anbietet",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ],
                                "\"Ben Jones\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "match": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "query": "SELECT paket_option FROM tv_channel WHERE id NOT IN (SELECT kanal FROM cartoon WHERE regie = 'Ben Jones')",
        "query_toks": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "'Ben",
            "Jones",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "paket_option",
            "FROM",
            "tv_channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "kanal",
            "FROM",
            "cartoon",
            "WHERE",
            "regie",
            "=",
            "value",
            ")"
        ],
        "question": "Was sind die Paketoptionen aller Fernsehsender, die keine Zeichentrickfilme unter der Regie von \"Ben Jones\" zeigen?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "Paketoptionen",
            "aller",
            "Fernsehsender",
            ",",
            "die",
            "keine",
            "Zeichentrickfilme",
            "unter",
            "der",
            "Regie",
            "von",
            "``",
            "Ben",
            "Jones",
            "''",
            "zeigen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ],
                                "\"Ben Jones\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "How many poker players are there?",
        "query": "SELECT count(*) FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM pokerspieler",
        "question": "Wie viele Pokerspieler gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Pokerspieler",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Count the number of poker players.",
        "query": "SELECT count(*) FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM pokerspieler",
        "question": "Zähle die Anzahl der Pokerspieler.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Pokerspieler",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "List the earnings of poker players in descending order.",
        "query": "SELECT gewinn FROM pokerspieler ORDER BY gewinn DESC",
        "query_toks": [
            "SELECT",
            "gewinn",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC"
        ],
        "query_toks_no_value": "SELECT gewinn FROM pokerspieler ORDER BY gewinn DESC",
        "question": "Liste die Einnahmen von Pokerspielern in absteigender Reihenfolge auf.",
        "question_toks": [
            "Liste",
            "die",
            "Einnahmen",
            "von",
            "Pokerspielern",
            "in",
            "absteigender",
            "Reihenfolge",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the earnings of poker players, ordered descending by value?",
        "query": "SELECT gewinn FROM pokerspieler ORDER BY gewinn DESC",
        "query_toks": [
            "SELECT",
            "gewinn",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC"
        ],
        "query_toks_no_value": "SELECT gewinn FROM pokerspieler ORDER BY gewinn DESC",
        "question": "Wie hoch ist der Verdienst von Pokerspielern, absteigend sortiert nach Wert?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Verdienst",
            "von",
            "Pokerspielern",
            ",",
            "absteigend",
            "sortiert",
            "nach",
            "Wert",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "List the final tables made and the best finishes of poker players.",
        "query": "SELECT finaltisch_gemacht , beste_platzierung FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "finaltisch_gemacht",
            ",",
            "beste_platzierung",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT finaltisch_gemacht , beste_platzierung FROM pokerspieler",
        "question": "Liste die Finaltische und die besten Platzierungen der Pokerspieler auf.",
        "question_toks": [
            "Liste",
            "die",
            "Finaltische",
            "und",
            "die",
            "besten",
            "Platzierungen",
            "der",
            "Pokerspieler",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the final tables made and best finishes for all poker players?",
        "query": "SELECT finaltisch_gemacht , beste_platzierung FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "finaltisch_gemacht",
            ",",
            "beste_platzierung",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT finaltisch_gemacht , beste_platzierung FROM pokerspieler",
        "question": "Was sind die Finaltische und die besten Platzierungen für alle Pokerspieler?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "Finaltische",
            "und",
            "die",
            "besten",
            "Platzierungen",
            "für",
            "alle",
            "Pokerspieler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the average earnings of poker players?",
        "query": "SELECT avg(gewinn) FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewinn",
            ")",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT avg(gewinn) FROM pokerspieler",
        "question": "Wie hoch ist der durchschnittliche Verdienst von Pokerspielern?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "durchschnittliche",
            "Verdienst",
            "von",
            "Pokerspielern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the average earnings across all poker players.",
        "query": "SELECT avg(gewinn) FROM pokerspieler",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gewinn",
            ")",
            "FROM",
            "pokerspieler"
        ],
        "query_toks_no_value": "SELECT avg(gewinn) FROM pokerspieler",
        "question": "Gib den Durchschnittsverdienst aller Pokerspieler zurück.",
        "question_toks": [
            "Gib",
            "den",
            "Durchschnittsverdienst",
            "aller",
            "Pokerspieler",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the money rank of the poker player with the highest earnings?",
        "query": "SELECT geldrang FROM pokerspieler ORDER BY gewinn DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "geldrang",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "geldrang",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Geldrang des Pokerspielers mit den höchsten Einnahmen?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Geldrang",
            "des",
            "Pokerspielers",
            "mit",
            "den",
            "höchsten",
            "Einnahmen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the money rank of the player with the greatest earnings.",
        "query": "SELECT geldrang FROM pokerspieler ORDER BY gewinn DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "geldrang",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "geldrang",
            "FROM",
            "pokerspieler",
            "ORDER",
            "BY",
            "gewinn",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Geldrang des Spielers mit den höchsten Einnahmen zurück.",
        "question_toks": [
            "Gib",
            "den",
            "Geldrang",
            "des",
            "Spielers",
            "mit",
            "den",
            "höchsten",
            "Einnahmen",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "query": "SELECT max(finaltisch_gemacht) FROM pokerspieler WHERE gewinn < 200000",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "finaltisch_gemacht",
            ")",
            "FROM",
            "pokerspieler",
            "WHERE",
            "gewinn",
            "<",
            "200000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "max",
            "(",
            "finaltisch_gemacht",
            ")",
            "FROM",
            "pokerspieler",
            "WHERE",
            "gewinn",
            "<",
            "value"
        ],
        "question": "Wie viele Finaltische haben Pokerspieler/innen mit einem Verdienst von weniger als 200000 maximal erreicht?",
        "question_toks": [
            "Wie",
            "viele",
            "Finaltische",
            "haben",
            "Pokerspieler/innen",
            "mit",
            "einem",
            "Verdienst",
            "von",
            "weniger",
            "als",
            "200000",
            "maximal",
            "erreicht",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    200000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "query": "SELECT max(finaltisch_gemacht) FROM pokerspieler WHERE gewinn < 200000",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "finaltisch_gemacht",
            ")",
            "FROM",
            "pokerspieler",
            "WHERE",
            "gewinn",
            "<",
            "200000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "max",
            "(",
            "finaltisch_gemacht",
            ")",
            "FROM",
            "pokerspieler",
            "WHERE",
            "gewinn",
            "<",
            "value"
        ],
        "question": "Gib die maximalen Finaltische aller Pokerspieler zurück, die weniger als 200000 verdient haben.",
        "question_toks": [
            "Gib",
            "die",
            "maximalen",
            "Finaltische",
            "aller",
            "Pokerspieler",
            "zurück",
            ",",
            "die",
            "weniger",
            "als",
            "200000",
            "verdient",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    200000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of poker players?",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id",
        "question": "Wie lauten die Namen der Pokerspieler?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Pokerspieler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the names of all the poker players.",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id",
        "question": "Gib die Namen aller Pokerspieler zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "aller",
            "Pokerspieler",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of poker players whose earnings is higher than 300000?",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id WHERE T2.gewinn > 300000",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T2.gewinn",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T2.gewinn",
            ">",
            "value"
        ],
        "question": "Wie lauten die Namen der Pokerspieler, die mehr als 300000 verdienen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Pokerspieler",
            ",",
            "die",
            "mehr",
            "als",
            "300000",
            "verdienen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Give the names of poker players who have earnings above 300000.",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id WHERE T2.gewinn > 300000",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T2.gewinn",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T2.gewinn",
            ">",
            "value"
        ],
        "question": "Nenne die Namen von Pokerspielern, die mehr als 300000 verdient haben.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "von",
            "Pokerspielern",
            ",",
            "die",
            "mehr",
            "als",
            "300000",
            "verdient",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "List the names of poker players ordered by the final tables made in ascending order.",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.finaltisch_gemacht",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.finaltisch_gemacht"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.finaltisch_gemacht",
        "question": "Liste die Namen der Pokerspielerinnen und -spieler in aufsteigender Reihenfolge nach den erreichten Finaltischen auf.",
        "question_toks": [
            "Liste",
            "die",
            "Namen",
            "der",
            "Pokerspielerinnen",
            "und",
            "-spieler",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "nach",
            "den",
            "erreichten",
            "Finaltischen",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.finaltisch_gemacht",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.finaltisch_gemacht"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.finaltisch_gemacht",
        "question": "Wie lauten die Namen von Pokerspielern, aufsteigend geordnet nach der Anzahl der Finaltische, an denen sie teilgenommen haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "von",
            "Pokerspielern",
            ",",
            "aufsteigend",
            "geordnet",
            "nach",
            "der",
            "Anzahl",
            "der",
            "Finaltische",
            ",",
            "an",
            "denen",
            "sie",
            "teilgenommen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the birth date of the poker player with the lowest earnings?",
        "query": "SELECT T1.geburtsdatum FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.geburtsdatum",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.geburtsdatum",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet das Geburtsdatum des Pokerspielers mit den niedrigsten Einnahmen?",
        "question_toks": [
            "Wie",
            "lautet",
            "das",
            "Geburtsdatum",
            "des",
            "Pokerspielers",
            "mit",
            "den",
            "niedrigsten",
            "Einnahmen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the birth date of the poker player with the lowest earnings.",
        "query": "SELECT T1.geburtsdatum FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.geburtsdatum",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.geburtsdatum",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Gib das Geburtsdatum des Pokerspielers mit den niedrigsten Einnahmen zurück.",
        "question_toks": [
            "Gib",
            "das",
            "Geburtsdatum",
            "des",
            "Pokerspielers",
            "mit",
            "den",
            "niedrigsten",
            "Einnahmen",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the money rank of the tallest poker player?",
        "query": "SELECT T2.geldrang FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T1.größe DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.geldrang",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T1.größe",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.geldrang",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T1.größe",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie hoch ist der Geldrang des größten Pokerspielers?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Geldrang",
            "des",
            "größten",
            "Pokerspielers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the money rank of the poker player with the greatest height.",
        "query": "SELECT T2.geldrang FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T1.größe DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.geldrang",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T1.größe",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.geldrang",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T1.größe",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Geldrang des Pokerspielers mit der größten Höhe zurück.",
        "question_toks": [
            "Gib",
            "den",
            "Geldrang",
            "des",
            "Pokerspielers",
            "mit",
            "der",
            "größten",
            "Höhe",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the average earnings of poker players with height higher than 200?",
        "query": "SELECT avg(T2.gewinn) FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id WHERE T1.größe > 200",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.gewinn",
            ")",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T1.größe",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "T2.gewinn",
            ")",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T1.größe",
            ">",
            "value"
        ],
        "question": "Wie hoch ist der durchschnittliche Verdienst von Pokerspielern, die größer als 200 sind?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "durchschnittliche",
            "Verdienst",
            "von",
            "Pokerspielern",
            ",",
            "die",
            "größer",
            "als",
            "200",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Give average earnings of poker players who are taller than 200.",
        "query": "SELECT avg(T2.gewinn) FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id WHERE T1.größe > 200",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.gewinn",
            ")",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T1.größe",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "T2.gewinn",
            ")",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "WHERE",
            "T1.größe",
            ">",
            "value"
        ],
        "question": "Gib den Durchschnittsverdienst von Pokerspielern an, die größer als 200 sind.",
        "question_toks": [
            "Gib",
            "den",
            "Durchschnittsverdienst",
            "von",
            "Pokerspielern",
            "an",
            ",",
            "die",
            "größer",
            "als",
            "200",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of poker players in descending order of earnings?",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn DESC",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "DESC"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn DESC",
        "question": "Wie lauten die Namen der Pokerspieler in absteigender Reihenfolge ihrer Einnahmen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Pokerspieler",
            "in",
            "absteigender",
            "Reihenfolge",
            "ihrer",
            "Einnahmen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the names of poker players sorted by their earnings descending.",
        "query": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn DESC",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leute",
            "AS",
            "T1",
            "JOIN",
            "pokerspieler",
            "AS",
            "T2",
            "ON",
            "T1.personen_id",
            "=",
            "T2.personen_id",
            "ORDER",
            "BY",
            "T2.gewinn",
            "DESC"
        ],
        "query_toks_no_value": "SELECT T1.name FROM leute AS T1 JOIN pokerspieler AS T2 ON T1.personen_id = T2.personen_id ORDER BY T2.gewinn DESC",
        "question": "Gibt die Namen von Pokerspielern zurück, sortiert nach ihrem Verdienst, absteigend.",
        "question_toks": [
            "Gibt",
            "die",
            "Namen",
            "von",
            "Pokerspielern",
            "zurück",
            ",",
            "sortiert",
            "nach",
            "ihrem",
            "Verdienst",
            ",",
            "absteigend",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are different nationalities of people and the corresponding number of people from each nation?",
        "query": "SELECT nationalität , COUNT(*) FROM leute GROUP BY nationalität",
        "query_toks": [
            "SELECT",
            "nationalität",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität"
        ],
        "query_toks_no_value": "SELECT nationalität , COUNT(*) FROM leute GROUP BY nationalität",
        "question": "Was sind die verschiedenen Nationalitäten von Menschen und die entsprechende Anzahl von Menschen aus jeder Nation?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "verschiedenen",
            "Nationalitäten",
            "von",
            "Menschen",
            "und",
            "die",
            "entsprechende",
            "Anzahl",
            "von",
            "Menschen",
            "aus",
            "jeder",
            "Nation",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "How many people are there of each nationality?",
        "query": "SELECT nationalität , COUNT(*) FROM leute GROUP BY nationalität",
        "query_toks": [
            "SELECT",
            "nationalität",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität"
        ],
        "query_toks_no_value": "SELECT nationalität , COUNT(*) FROM leute GROUP BY nationalität",
        "question": "Wie viele Menschen gibt es von jeder Nationalität?",
        "question_toks": [
            "Wie",
            "viele",
            "Menschen",
            "gibt",
            "es",
            "von",
            "jeder",
            "Nationalität",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What is the most common nationality of people?",
        "query": "SELECT nationalität FROM leute GROUP BY nationalität ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche ist die häufigste Nationalität der Menschen?",
        "question_toks": [
            "Welche",
            "ist",
            "die",
            "häufigste",
            "Nationalität",
            "der",
            "Menschen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Give the nationality that is most common across all people.",
        "query": "SELECT nationalität FROM leute GROUP BY nationalität ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Nationalität an, die bei allen Menschen am häufigsten vorkommt.",
        "question_toks": [
            "Gib",
            "die",
            "Nationalität",
            "an",
            ",",
            "die",
            "bei",
            "allen",
            "Menschen",
            "am",
            "häufigsten",
            "vorkommt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the nationalities that are shared by at least two people?",
        "query": "SELECT nationalität FROM leute GROUP BY nationalität HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Welche Nationalitäten haben mindestens zwei Personen gemeinsam?",
        "question_toks": [
            "Welche",
            "Nationalitäten",
            "haben",
            "mindestens",
            "zwei",
            "Personen",
            "gemeinsam",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Return the nationalities for which there are two or more people.",
        "query": "SELECT nationalität FROM leute GROUP BY nationalität HAVING COUNT(*) >= 2",
        "query_toks": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "nationalität",
            "FROM",
            "leute",
            "GROUP",
            "BY",
            "nationalität",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Gib die Nationalitäten zurück, für die es zwei oder mehr Personen gibt.",
        "question_toks": [
            "Gib",
            "die",
            "Nationalitäten",
            "zurück",
            ",",
            "für",
            "die",
            "es",
            "zwei",
            "oder",
            "mehr",
            "Personen",
            "gibt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "List the names and birth dates of people in ascending alphabetical order of name.",
        "query": "SELECT name , geburtsdatum FROM leute ORDER BY name ASC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "geburtsdatum",
            "FROM",
            "leute",
            "ORDER",
            "BY",
            "name",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name , geburtsdatum FROM leute ORDER BY name ASC",
        "question": "Liste die Namen und Geburtsdaten von Personen in aufsteigender alphabetischer Reihenfolge auf.",
        "question_toks": [
            "Liste",
            "die",
            "Namen",
            "und",
            "Geburtsdaten",
            "von",
            "Personen",
            "in",
            "aufsteigender",
            "alphabetischer",
            "Reihenfolge",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "query": "SELECT name , geburtsdatum FROM leute ORDER BY name ASC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "geburtsdatum",
            "FROM",
            "leute",
            "ORDER",
            "BY",
            "name",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name , geburtsdatum FROM leute ORDER BY name ASC",
        "question": "Wie lauten die Namen und Geburtsdaten von Menschen, geordnet nach ihren Namen in alphabetischer Reihenfolge?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Geburtsdaten",
            "von",
            "Menschen",
            ",",
            "geordnet",
            "nach",
            "ihren",
            "Namen",
            "in",
            "alphabetischer",
            "Reihenfolge",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Show names of people whose nationality is not \"Russia\".",
        "query": "SELECT name FROM leute WHERE nationalität != \"Russia\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "``",
            "Russia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "value"
        ],
        "question": "Zeige Namen von Menschen, deren Nationalität nicht \"\"Russia\"\" ist.",
        "question_toks": [
            "Zeige",
            "Namen",
            "von",
            "Menschen",
            ",",
            "deren",
            "Nationalität",
            "nicht",
            "``",
            "''",
            "Russia",
            "''",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Russia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of people who are not from Russia?",
        "query": "SELECT name FROM leute WHERE nationalität != \"Russia\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "``",
            "Russia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "value"
        ],
        "question": "Wie heißen die Menschen, die nicht aus \"Russia\" kommen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Menschen",
            ",",
            "die",
            "nicht",
            "aus",
            "``",
            "Russia",
            "''",
            "kommen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Russia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "List the names of people that are not poker players.",
        "query": "SELECT name FROM leute WHERE personen_id NOT IN (SELECT personen_id FROM pokerspieler)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "personen_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "personen_id",
            "FROM",
            "pokerspieler",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM leute WHERE personen_id NOT IN (SELECT personen_id FROM pokerspieler)",
        "question": "Nenne die Namen von Leuten, die keine Pokerspieler sind.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "von",
            "Leuten",
            ",",
            "die",
            "keine",
            "Pokerspieler",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "What are the names of people who do not play poker?",
        "query": "SELECT name FROM leute WHERE personen_id NOT IN (SELECT personen_id FROM pokerspieler)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leute",
            "WHERE",
            "personen_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "personen_id",
            "FROM",
            "pokerspieler",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM leute WHERE personen_id NOT IN (SELECT personen_id FROM pokerspieler)",
        "question": "Wie heißen die Leute, die nicht pokern?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Leute",
            ",",
            "die",
            "nicht",
            "pokern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "How many distinct nationalities are there?",
        "query": "SELECT count(DISTINCT nationalität) FROM leute",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "nationalität",
            ")",
            "FROM",
            "leute"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT nationalität) FROM leute",
        "question": "Wie viele verschiedene Nationalitäten gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Nationalitäten",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "match": "Count the number of different nationalities.",
        "query": "SELECT count(DISTINCT nationalität) FROM leute",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "nationalität",
            ")",
            "FROM",
            "leute"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT nationalität) FROM leute",
        "question": "Zähle die Anzahl der verschiedenen Nationalitäten.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Nationalitäten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "How many states are there?",
        "query": "SELECT count(*) FROM vorwahl_staat",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vorwahl_staat"
        ],
        "query_toks_no_value": "SELECT count(*) FROM vorwahl_staat",
        "question": "Wie viele Staaten gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Staaten",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "List the contestant numbers and names, ordered by contestant name descending.",
        "query": "SELECT teilnehmernummer , kandidatenname FROM wettbewerbe ORDER BY kandidatenname DESC",
        "query_toks": [
            "SELECT",
            "teilnehmernummer",
            ",",
            "kandidatenname",
            "FROM",
            "wettbewerbe",
            "ORDER",
            "BY",
            "kandidatenname",
            "DESC"
        ],
        "query_toks_no_value": "SELECT teilnehmernummer , kandidatenname FROM wettbewerbe ORDER BY kandidatenname DESC",
        "question": "Listet die Teilnehmernummern und -namen auf, absteigend geordnet nach dem Namen des Teilnehmers.",
        "question_toks": [
            "Listet",
            "die",
            "Teilnehmernummern",
            "und",
            "-namen",
            "auf",
            ",",
            "absteigend",
            "geordnet",
            "nach",
            "dem",
            "Namen",
            "des",
            "Teilnehmers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "List the vote ids, phone numbers and states of all votes.",
        "query": "SELECT stimme_id , telefonnummer , staat FROM stimmen",
        "query_toks": [
            "SELECT",
            "stimme_id",
            ",",
            "telefonnummer",
            ",",
            "staat",
            "FROM",
            "stimmen"
        ],
        "query_toks_no_value": "SELECT stimme_id , telefonnummer , staat FROM stimmen",
        "question": "Liste die Stimmnummern, Telefonnummern und Staaten aller Stimmen auf.",
        "question_toks": [
            "Liste",
            "die",
            "Stimmnummern",
            ",",
            "Telefonnummern",
            "und",
            "Staaten",
            "aller",
            "Stimmen",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the maximum and minimum values of area codes?",
        "query": "SELECT max(vorwahl) , min(vorwahl) FROM vorwahl_staat",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "vorwahl",
            ")",
            ",",
            "min",
            "(",
            "vorwahl",
            ")",
            "FROM",
            "vorwahl_staat"
        ],
        "query_toks_no_value": "SELECT max(vorwahl) , min(vorwahl) FROM vorwahl_staat",
        "question": "Was sind die Höchst- und Mindestwerte der Vorwahlen?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "Höchst-",
            "und",
            "Mindestwerte",
            "der",
            "Vorwahlen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What is last date created of votes from the state 'CA'?",
        "query": "SELECT max(created) FROM stimmen WHERE staat = 'CA'",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "created",
            ")",
            "FROM",
            "stimmen",
            "WHERE",
            "staat",
            "=",
            "'CA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "max",
            "(",
            "created",
            ")",
            "FROM",
            "stimmen",
            "WHERE",
            "staat",
            "=",
            "value"
        ],
        "question": "Bis wann wurden die Stimmen aus dem Bundesstaat \"\"CA\"\" erstellt?",
        "question_toks": [
            "Bis",
            "wann",
            "wurden",
            "die",
            "Stimmen",
            "aus",
            "dem",
            "Bundesstaat",
            "``",
            "''",
            "CA",
            "''",
            "''",
            "erstellt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"CA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "query": "SELECT kandidatenname FROM wettbewerbe WHERE kandidatenname != 'Jessie Alloway'",
        "query_toks": [
            "SELECT",
            "kandidatenname",
            "FROM",
            "wettbewerbe",
            "WHERE",
            "kandidatenname",
            "!",
            "=",
            "'Jessie",
            "Alloway",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kandidatenname",
            "FROM",
            "wettbewerbe",
            "WHERE",
            "kandidatenname",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Teilnehmer, die nicht \"Jessie Alloway\" heißen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Teilnehmer",
            ",",
            "die",
            "nicht",
            "``",
            "Jessie",
            "Alloway",
            "''",
            "heißen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Jessie Alloway\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the distinct states and create time of all votes?",
        "query": "SELECT DISTINCT staat , created FROM stimmen",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "staat",
            ",",
            "created",
            "FROM",
            "stimmen"
        ],
        "query_toks_no_value": "SELECT DISTINCT staat , created FROM stimmen",
        "question": "Welches sind die verschiedenen Zustände und die Erstellungszeit aller Stimmen?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "verschiedenen",
            "Zustände",
            "und",
            "die",
            "Erstellungszeit",
            "aller",
            "Stimmen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "query": "SELECT T1.teilnehmernummer , T1.kandidatenname FROM wettbewerbe AS T1 JOIN stimmen AS T2 ON T1.teilnehmernummer = T2.teilnehmernummer GROUP BY T1.teilnehmernummer HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T1.teilnehmernummer",
            ",",
            "T1.kandidatenname",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "GROUP",
            "BY",
            "T1.teilnehmernummer",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.teilnehmernummer",
            ",",
            "T1.kandidatenname",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "GROUP",
            "BY",
            "T1.teilnehmernummer",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie lauten die Teilnehmernummern und Namen der Teilnehmer, die mindestens zwei Stimmen erhalten haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Teilnehmernummern",
            "und",
            "Namen",
            "der",
            "Teilnehmer",
            ",",
            "die",
            "mindestens",
            "zwei",
            "Stimmen",
            "erhalten",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "query": "SELECT T1.teilnehmernummer , T1.kandidatenname FROM wettbewerbe AS T1 JOIN stimmen AS T2 ON T1.teilnehmernummer = T2.teilnehmernummer GROUP BY T1.teilnehmernummer ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.teilnehmernummer",
            ",",
            "T1.kandidatenname",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "GROUP",
            "BY",
            "T1.teilnehmernummer",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.teilnehmernummer",
            ",",
            "T1.kandidatenname",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "GROUP",
            "BY",
            "T1.teilnehmernummer",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Teilnehmernummer und der Name des Teilnehmers, der die wenigsten Stimmen erhalten hat?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Teilnehmernummer",
            "und",
            "der",
            "Name",
            "des",
            "Teilnehmers",
            ",",
            "der",
            "die",
            "wenigsten",
            "Stimmen",
            "erhalten",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the number of votes from state 'NY' or 'CA'?",
        "query": "SELECT count(*) FROM stimmen WHERE staat = 'NY' OR staat = 'CA'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "stimmen",
            "WHERE",
            "staat",
            "=",
            "'NY",
            "'",
            "OR",
            "staat",
            "=",
            "'CA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "stimmen",
            "WHERE",
            "staat",
            "=",
            "value",
            "OR",
            "staat",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die Anzahl der Stimmen aus dem Staat \"\"NY\"\" oder \"\"CA\"\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Anzahl",
            "der",
            "Stimmen",
            "aus",
            "dem",
            "Staat",
            "``",
            "''",
            "NY",
            "''",
            "''",
            "oder",
            "``",
            "''",
            "CA",
            "''",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NY\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"CA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "How many contestants did not get voted?",
        "query": "SELECT count(*) FROM wettbewerbe WHERE teilnehmernummer NOT IN ( SELECT teilnehmernummer FROM stimmen )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "wettbewerbe",
            "WHERE",
            "teilnehmernummer",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "teilnehmernummer",
            "FROM",
            "stimmen",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM wettbewerbe WHERE teilnehmernummer NOT IN ( SELECT teilnehmernummer FROM stimmen )",
        "question": "Wie viele Kandidatinnen und Kandidaten sind nicht gewählt worden?",
        "question_toks": [
            "Wie",
            "viele",
            "Kandidatinnen",
            "und",
            "Kandidaten",
            "sind",
            "nicht",
            "gewählt",
            "worden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What is the area code in which the most voters voted?",
        "query": "SELECT T1.vorwahl FROM vorwahl_staat AS T1 JOIN stimmen AS T2 ON T1.staat = T2.staat GROUP BY T1.vorwahl ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.vorwahl",
            "FROM",
            "vorwahl_staat",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.staat",
            "=",
            "T2.staat",
            "GROUP",
            "BY",
            "T1.vorwahl",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorwahl",
            "FROM",
            "vorwahl_staat",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.staat",
            "=",
            "T2.staat",
            "GROUP",
            "BY",
            "T1.vorwahl",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Vorwahl, in der die meisten Wähler gewählt haben?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Vorwahl",
            ",",
            "in",
            "der",
            "die",
            "meisten",
            "Wähler",
            "gewählt",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "query": "SELECT T2.created , T2.staat , T2.telefonnummer FROM wettbewerbe AS T1 JOIN stimmen AS T2 ON T1.teilnehmernummer = T2.teilnehmernummer WHERE T1.kandidatenname = 'Tabatha Gehling'",
        "query_toks": [
            "SELECT",
            "T2.created",
            ",",
            "T2.staat",
            ",",
            "T2.telefonnummer",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "'Tabatha",
            "Gehling",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.created",
            ",",
            "T2.staat",
            ",",
            "T2.telefonnummer",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "value"
        ],
        "question": "Wie lauten die Erstellungsdaten, Bundesländer und Telefonnummern der Stimmen, die für die Kandidatin \"\"Tabatha Gehling\"\" abgegeben wurden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Erstellungsdaten",
            ",",
            "Bundesländer",
            "und",
            "Telefonnummern",
            "der",
            "Stimmen",
            ",",
            "die",
            "für",
            "die",
            "Kandidatin",
            "``",
            "''",
            "Tabatha",
            "Gehling",
            "''",
            "''",
            "abgegeben",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Tabatha Gehling\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "query": "SELECT T3.vorwahl FROM wettbewerbe AS T1 JOIN stimmen AS T2 ON T1.teilnehmernummer = T2.teilnehmernummer JOIN vorwahl_staat AS T3 ON T2.staat = T3.staat WHERE T1.kandidatenname = 'Tabatha Gehling' INTERSECT SELECT T3.vorwahl FROM wettbewerbe AS T1 JOIN stimmen AS T2 ON T1.teilnehmernummer = T2.teilnehmernummer JOIN vorwahl_staat AS T3 ON T2.staat = T3.staat WHERE T1.kandidatenname = 'Kelly Clauss'",
        "query_toks": [
            "SELECT",
            "T3.vorwahl",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "JOIN",
            "vorwahl_staat",
            "AS",
            "T3",
            "ON",
            "T2.staat",
            "=",
            "T3.staat",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "'Tabatha",
            "Gehling",
            "'",
            "INTERSECT",
            "SELECT",
            "T3.vorwahl",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "JOIN",
            "vorwahl_staat",
            "AS",
            "T3",
            "ON",
            "T2.staat",
            "=",
            "T3.staat",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "'Kelly",
            "Clauss",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T3.vorwahl",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "JOIN",
            "vorwahl_staat",
            "AS",
            "T3",
            "ON",
            "T2.staat",
            "=",
            "T3.staat",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T3.vorwahl",
            "FROM",
            "wettbewerbe",
            "AS",
            "T1",
            "JOIN",
            "stimmen",
            "AS",
            "T2",
            "ON",
            "T1.teilnehmernummer",
            "=",
            "T2.teilnehmernummer",
            "JOIN",
            "vorwahl_staat",
            "AS",
            "T3",
            "ON",
            "T2.staat",
            "=",
            "T3.staat",
            "WHERE",
            "T1.kandidatenname",
            "=",
            "value"
        ],
        "question": "Gib die Vorwahlen an, in denen die Wähler sowohl für die Kandidatin \"\"Tabatha Gehling\"\" als auch für die Kandidatin \"\"Kelly Clauss\"\" gestimmt haben.",
        "question_toks": [
            "Gib",
            "die",
            "Vorwahlen",
            "an",
            ",",
            "in",
            "denen",
            "die",
            "Wähler",
            "sowohl",
            "für",
            "die",
            "Kandidatin",
            "``",
            "''",
            "Tabatha",
            "Gehling",
            "''",
            "''",
            "als",
            "auch",
            "für",
            "die",
            "Kandidatin",
            "``",
            "''",
            "Kelly",
            "Clauss",
            "''",
            "''",
            "gestimmt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Tabatha Gehling\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        "\"Kelly Clauss\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "match": "Return the names of the contestants whose names contain the substring 'Al' .",
        "query": "select kandidatenname from wettbewerbe where kandidatenname like \"%al%\"",
        "query_toks": [
            "select",
            "kandidatenname",
            "from",
            "wettbewerbe",
            "where",
            "kandidatenname",
            "like",
            "``",
            "%",
            "al",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "kandidatenname",
            "from",
            "wettbewerbe",
            "where",
            "kandidatenname",
            "like",
            "value"
        ],
        "question": "Gibt die Namen der Teilnehmer zurück, deren Namen die Teilzeichenkette \"Al\" enthalten.",
        "question_toks": [
            "Gibt",
            "die",
            "Namen",
            "der",
            "Teilnehmer",
            "zurück",
            ",",
            "deren",
            "Namen",
            "die",
            "Teilzeichenkette",
            "``",
            "Al",
            "''",
            "enthalten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"%al%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of all the countries that became independent after 1950?",
        "query": "SELECT name FROM land WHERE unabhängiges_jahr > 1950",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "unabhängiges_jahr",
            ">",
            "1950"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "unabhängiges_jahr",
            ">",
            "value"
        ],
        "question": "Wie lauten die Namen aller Länder, die nach 1950 unabhängig wurden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "aller",
            "Länder",
            ",",
            "die",
            "nach",
            "1950",
            "unabhängig",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    1950.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the names of the nations that were founded after 1950.",
        "query": "SELECT name FROM land WHERE unabhängiges_jahr > 1950",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "unabhängiges_jahr",
            ">",
            "1950"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "unabhängiges_jahr",
            ">",
            "value"
        ],
        "question": "Nenne die Namen der Nationen, die nach 1950 gegründet wurden.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Nationen",
            ",",
            "die",
            "nach",
            "1950",
            "gegründet",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    1950.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many countries have a republic as their form of government?",
        "query": "SELECT count(*) FROM land WHERE regierungsform = \"Republic\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Wie viele Länder haben eine Republik als Regierungsform?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "haben",
            "eine",
            "Republik",
            "als",
            "Regierungsform",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many countries have governments that are republics?",
        "query": "SELECT count(*) FROM land WHERE regierungsform = \"Republic\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Wie viele Länder haben Regierungen, die Republiken sind?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "haben",
            "Regierungen",
            ",",
            "die",
            "Republiken",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total surface area of the countries in the Caribbean region?",
        "query": "SELECT sum(fläche) FROM land WHERE region = \"Caribbean\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "``",
            "Caribbean",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "value"
        ],
        "question": "Wie groß ist die Gesamtfläche der Länder in der \"Caribbean\"?",
        "question_toks": [
            "Wie",
            "groß",
            "ist",
            "die",
            "Gesamtfläche",
            "der",
            "Länder",
            "in",
            "der",
            "``",
            "Caribbean",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Caribbean\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How much surface area do the countires in the Carribean cover together?",
        "query": "SELECT sum(fläche) FROM land WHERE region = \"Caribbean\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "``",
            "Caribbean",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "value"
        ],
        "question": "Wie groß ist die Fläche, die die Länder der Karibik zusammen einnehmen?",
        "question_toks": [
            "Wie",
            "groß",
            "ist",
            "die",
            "Fläche",
            ",",
            "die",
            "die",
            "Länder",
            "der",
            "Karibik",
            "zusammen",
            "einnehmen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Caribbean\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which continent is Anguilla in?",
        "query": "SELECT kontinent FROM land WHERE name = \"Anguilla\"",
        "query_toks": [
            "SELECT",
            "kontinent",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Anguilla",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kontinent",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Auf welchem Kontinent liegt \"Anguilla\"?",
        "question_toks": [
            "Auf",
            "welchem",
            "Kontinent",
            "liegt",
            "``",
            "Anguilla",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Anguilla\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the continent name which Anguilla belongs to?",
        "query": "SELECT kontinent FROM land WHERE name = \"Anguilla\"",
        "query_toks": [
            "SELECT",
            "kontinent",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Anguilla",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kontinent",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Wie heißt der Kontinent, zu dem \"Anguilla\" gehört?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Kontinent",
            ",",
            "zu",
            "dem",
            "``",
            "Anguilla",
            "''",
            "gehört",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Anguilla\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which region is the city Kabul located in?",
        "query": "SELECT region FROM land AS T1 JOIN stadt AS T2 ON T1.code = T2.ländercode WHERE T2.name = \"Kabul\"",
        "query_toks": [
            "SELECT",
            "region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kabul",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "In welcher Region befindet sich die Stadt \"Kabul\"?",
        "question_toks": [
            "In",
            "welcher",
            "Region",
            "befindet",
            "sich",
            "die",
            "Stadt",
            "``",
            "Kabul",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ],
                    "\"Kabul\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What region is Kabul in?",
        "query": "SELECT region FROM land AS T1 JOIN stadt AS T2 ON T1.code = T2.ländercode WHERE T2.name = \"Kabul\"",
        "query_toks": [
            "SELECT",
            "region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kabul",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "In welcher Region liegt \"Kabul\"?",
        "question_toks": [
            "In",
            "welcher",
            "Region",
            "liegt",
            "``",
            "Kabul",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ],
                    "\"Kabul\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which language is the most popular in Aruba?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Aruba\" ORDER BY prozent DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Aruba",
            "''",
            "ORDER",
            "BY",
            "prozent",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value",
            "ORDER",
            "BY",
            "prozent",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Sprache ist auf \"Aruba\" am beliebtesten?",
        "question_toks": [
            "Welche",
            "Sprache",
            "ist",
            "auf",
            "``",
            "Aruba",
            "''",
            "am",
            "beliebtesten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What language is predominantly spoken in Aruba?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Aruba\" ORDER BY prozent DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Aruba",
            "''",
            "ORDER",
            "BY",
            "prozent",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value",
            "ORDER",
            "BY",
            "prozent",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Sprache wird auf \"Aruba\" am häufigsten gesprochen?",
        "question_toks": [
            "Welche",
            "Sprache",
            "wird",
            "auf",
            "``",
            "Aruba",
            "''",
            "am",
            "häufigsten",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the population and life expectancies in Brazil?",
        "query": "SELECT bevölkerung , lebenserwartung FROM land WHERE name = \"Brazil\"",
        "query_toks": [
            "SELECT",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Brazil",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Wie hoch sind die Bevölkerung und die Lebenserwartung in \"Brazil\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "sind",
            "die",
            "Bevölkerung",
            "und",
            "die",
            "Lebenserwartung",
            "in",
            "``",
            "Brazil",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give me Brazil’s population and life expectancies.",
        "query": "SELECT bevölkerung , lebenserwartung FROM land WHERE name = \"Brazil\"",
        "query_toks": [
            "SELECT",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Brazil",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Gib mir \"Brazil\" Bevölkerung und Lebenserwartung.",
        "question_toks": [
            "Gib",
            "mir",
            "``",
            "Brazil",
            "''",
            "Bevölkerung",
            "und",
            "Lebenserwartung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the region and population of Angola?",
        "query": "SELECT bevölkerung , region FROM land WHERE name = \"Angola\"",
        "query_toks": [
            "SELECT",
            "bevölkerung",
            ",",
            "region",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Angola",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bevölkerung",
            ",",
            "region",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Welche Region und welche Bevölkerung hat \"Angola\"?",
        "question_toks": [
            "Welche",
            "Region",
            "und",
            "welche",
            "Bevölkerung",
            "hat",
            "``",
            "Angola",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Angola\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What region does Angola belong to and what is its population?",
        "query": "SELECT bevölkerung , region FROM land WHERE name = \"Angola\"",
        "query_toks": [
            "SELECT",
            "bevölkerung",
            ",",
            "region",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "``",
            "Angola",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "bevölkerung",
            ",",
            "region",
            "FROM",
            "land",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Zu welcher Region gehört \"Angola\" und wie viele Einwohner hat es?",
        "question_toks": [
            "Zu",
            "welcher",
            "Region",
            "gehört",
            "``",
            "Angola",
            "''",
            "und",
            "wie",
            "viele",
            "Einwohner",
            "hat",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Angola\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE region = \"Central Africa\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "``",
            "Central",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die durchschnittliche Lebenserwartung in den Ländern der Region \"Central Africa\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "in",
            "den",
            "Ländern",
            "der",
            "Region",
            "``",
            "Central",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Central Africa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How long is the people’s average life expectancy in Central Africa?",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE region = \"Central Africa\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "``",
            "Central",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "region",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die durchschnittliche Lebenserwartung der Menschen in \"Central Africa\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "der",
            "Menschen",
            "in",
            "``",
            "Central",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Central Africa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the name of country that has the shortest life expectancy in Asia?",
        "query": "SELECT name FROM land WHERE kontinent = \"Asia\" ORDER BY lebenserwartung LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "lebenserwartung",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "ORDER",
            "BY",
            "lebenserwartung",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt das Land, das die kürzeste Lebenserwartung in \"Asia\" hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "das",
            "Land",
            ",",
            "das",
            "die",
            "kürzeste",
            "Lebenserwartung",
            "in",
            "``",
            "Asia",
            "''",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the name of the country in Asia with the lowest life expectancy.",
        "query": "SELECT name FROM land WHERE kontinent = \"Asia\" ORDER BY lebenserwartung LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "lebenserwartung",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "ORDER",
            "BY",
            "lebenserwartung",
            "LIMIT",
            "value"
        ],
        "question": "Nenne den Namen des Landes in \"Asia\" mit der niedrigsten Lebenserwartung.",
        "question_toks": [
            "Nenne",
            "den",
            "Namen",
            "des",
            "Landes",
            "in",
            "``",
            "Asia",
            "''",
            "mit",
            "der",
            "niedrigsten",
            "Lebenserwartung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total population and maximum GNP in Asia?",
        "query": "SELECT sum(bevölkerung) , max(gnp) FROM land WHERE kontinent = \"Asia\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die Gesamtbevölkerung und das maximale BSP in \"Asia\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtbevölkerung",
            "und",
            "das",
            "maximale",
            "BSP",
            "in",
            "``",
            "Asia",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many people live in Asia, and what is the largest GNP among them?",
        "query": "SELECT sum(bevölkerung) , max(gnp) FROM land WHERE kontinent = \"Asia\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Wie viele Menschen leben in \"Asia\", und wie hoch ist das Bruttosozialprodukt dort?",
        "question_toks": [
            "Wie",
            "viele",
            "Menschen",
            "leben",
            "in",
            "``",
            "Asia",
            "''",
            ",",
            "und",
            "wie",
            "hoch",
            "ist",
            "das",
            "Bruttosozialprodukt",
            "dort",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the average life expectancy in African countries that are republics?",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE kontinent = \"Africa\" AND regierungsform = \"Republic\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "regierungsform",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die durchschnittliche Lebenserwartung in \"Africa\" Ländern, die Republiken sind?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "in",
            "``",
            "Africa",
            "''",
            "Ländern",
            ",",
            "die",
            "Republiken",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the average life expectancy for countries in Africa which are republics?",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE kontinent = \"Africa\" AND regierungsform = \"Republic\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "regierungsform",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die durchschnittliche Lebenserwartung in den Ländern \"Africa\", die Republiken sind?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "in",
            "den",
            "Ländern",
            "``",
            "Africa",
            "''",
            ",",
            "die",
            "Republiken",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total surface area of the continents Asia and Europe?",
        "query": "SELECT sum(fläche) FROM land WHERE kontinent = \"Asia\" OR kontinent = \"Europe\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "OR",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "OR",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Wie groß ist die Gesamtfläche der Kontinente \"Asia\" und \"Europe\"?",
        "question_toks": [
            "Wie",
            "groß",
            "ist",
            "die",
            "Gesamtfläche",
            "der",
            "Kontinente",
            "``",
            "Asia",
            "''",
            "und",
            "``",
            "Europe",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the total surface area covered by countries in Asia or Europe.",
        "query": "SELECT sum(fläche) FROM land WHERE kontinent = \"Asia\" OR kontinent = \"Europe\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "OR",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "OR",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Gib an, wie groß die Gesamtfläche der Länder in \"Asia\" oder \"Europe\" ist.",
        "question_toks": [
            "Gib",
            "an",
            ",",
            "wie",
            "groß",
            "die",
            "Gesamtfläche",
            "der",
            "Länder",
            "in",
            "``",
            "Asia",
            "''",
            "oder",
            "``",
            "Europe",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many people live in Gelderland district?",
        "query": "SELECT sum(bevölkerung) FROM stadt WHERE bezirk = \"Gelderland\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            "WHERE",
            "bezirk",
            "=",
            "``",
            "Gelderland",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            "WHERE",
            "bezirk",
            "=",
            "value"
        ],
        "question": "Wie viele Menschen leben im Bezirk \"Gelderland\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Menschen",
            "leben",
            "im",
            "Bezirk",
            "``",
            "Gelderland",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Gelderland\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total population of Gelderland district?",
        "query": "SELECT sum(bevölkerung) FROM stadt WHERE bezirk = \"Gelderland\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            "WHERE",
            "bezirk",
            "=",
            "``",
            "Gelderland",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            "WHERE",
            "bezirk",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die Gesamtbevölkerung des Bezirks \"Gelderland\"?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtbevölkerung",
            "des",
            "Bezirks",
            "``",
            "Gelderland",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Gelderland\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the average GNP and total population in all nations whose government is US territory?",
        "query": "SELECT avg(gnp) , sum(bevölkerung) FROM land WHERE regierungsform = \"US Territory\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "``",
            "US",
            "Territory",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Wie hoch sind das durchschnittliche Bruttosozialprodukt und die Gesamtbevölkerung aller Nationen, deren Regierung auf US-Territorium liegt?",
        "question_toks": [
            "Wie",
            "hoch",
            "sind",
            "das",
            "durchschnittliche",
            "Bruttosozialprodukt",
            "und",
            "die",
            "Gesamtbevölkerung",
            "aller",
            "Nationen",
            ",",
            "deren",
            "Regierung",
            "auf",
            "US-Territorium",
            "liegt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"US Territory\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the mean GNP and total population of nations which are considered US territory.",
        "query": "SELECT avg(gnp) , sum(bevölkerung) FROM land WHERE regierungsform = \"US Territory\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "``",
            "US",
            "Territory",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "=",
            "value"
        ],
        "question": "Gib das durchschnittliche BSP und die Gesamtbevölkerung der Länder an, die als US-Territorium gelten.",
        "question_toks": [
            "Gib",
            "das",
            "durchschnittliche",
            "BSP",
            "und",
            "die",
            "Gesamtbevölkerung",
            "der",
            "Länder",
            "an",
            ",",
            "die",
            "als",
            "US-Territorium",
            "gelten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"US Territory\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many unique languages are spoken in the world?",
        "query": "SELECT count(DISTINCT sprache) FROM landessprache",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "sprache",
            ")",
            "FROM",
            "landessprache"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT sprache) FROM landessprache",
        "question": "Wie viele einzigartige Sprachen werden auf der Welt gesprochen?",
        "question_toks": [
            "Wie",
            "viele",
            "einzigartige",
            "Sprachen",
            "werden",
            "auf",
            "der",
            "Welt",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the number of distinct languages used around the world?",
        "query": "SELECT count(DISTINCT sprache) FROM landessprache",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "sprache",
            ")",
            "FROM",
            "landessprache"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT sprache) FROM landessprache",
        "question": "Wie viele verschiedene Sprachen gibt es auf der Welt?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Sprachen",
            "gibt",
            "es",
            "auf",
            "der",
            "Welt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many type of governments are in Africa?",
        "query": "SELECT count(DISTINCT regierungsform) FROM land WHERE kontinent = \"Africa\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "regierungsform",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "regierungsform",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Wie viele Arten von Regierungen gibt es in \"Africa\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Arten",
            "von",
            "Regierungen",
            "gibt",
            "es",
            "in",
            "``",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many different forms of governments are there in Africa?",
        "query": "SELECT count(DISTINCT regierungsform) FROM land WHERE kontinent = \"Africa\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "regierungsform",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "regierungsform",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Wie viele verschiedene Regierungsformen gibt es in \"Africa\"?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Regierungsformen",
            "gibt",
            "es",
            "in",
            "``",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total number of languages used in Aruba?",
        "query": "SELECT COUNT(T2.sprache) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Aruba\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Aruba",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value"
        ],
        "question": "Wie viele Sprachen werden in \"Aruba\" insgesamt gesprochen?",
        "question_toks": [
            "Wie",
            "viele",
            "Sprachen",
            "werden",
            "in",
            "``",
            "Aruba",
            "''",
            "insgesamt",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many languages are spoken in Aruba?",
        "query": "SELECT COUNT(T2.sprache) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Aruba\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Aruba",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value"
        ],
        "question": "Wie viele Sprachen werden auf \"Aruba\" gesprochen?",
        "question_toks": [
            "Wie",
            "viele",
            "Sprachen",
            "werden",
            "auf",
            "``",
            "Aruba",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many official languages does Afghanistan have?",
        "query": "SELECT COUNT(*) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Afghanistan\" AND ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Afghanistan",
            "''",
            "AND",
            "ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value",
            "AND",
            "ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie viele Amtssprachen gibt es in \"Afghanistan\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Amtssprachen",
            "gibt",
            "es",
            "in",
            "``",
            "Afghanistan",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Afghanistan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many official languages are spoken in Afghanistan?",
        "query": "SELECT COUNT(*) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.name = \"Afghanistan\" AND ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "``",
            "Afghanistan",
            "''",
            "AND",
            "ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.name",
            "=",
            "value",
            "AND",
            "ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie viele offizielle Sprachen werden in \"Afghanistan\" gesprochen?",
        "question_toks": [
            "Wie",
            "viele",
            "offizielle",
            "Sprachen",
            "werden",
            "in",
            "``",
            "Afghanistan",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Afghanistan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is name of the country that speaks the largest number of languages?",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt das Land, in dem die meisten Sprachen gesprochen werden?",
        "question_toks": [
            "Wie",
            "heißt",
            "das",
            "Land",
            ",",
            "in",
            "dem",
            "die",
            "meisten",
            "Sprachen",
            "gesprochen",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the name of the nation that uses the greatest amount of languages.",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Nenne den Namen der Nation, die die meisten Sprachen verwendet.",
        "question_toks": [
            "Nenne",
            "den",
            "Namen",
            "der",
            "Nation",
            ",",
            "die",
            "die",
            "meisten",
            "Sprachen",
            "verwendet",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which continent has the most diverse languages?",
        "query": "SELECT T1.kontinent FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.kontinent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.kontinent",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.kontinent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kontinent",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.kontinent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Kontinent hat die meisten verschiedenen Sprachen?",
        "question_toks": [
            "Welcher",
            "Kontinent",
            "hat",
            "die",
            "meisten",
            "verschiedenen",
            "Sprachen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which continent speaks the most languages?",
        "query": "SELECT T1.kontinent FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.kontinent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.kontinent",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.kontinent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.kontinent",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.kontinent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Auf welchem Kontinent werden die meisten Sprachen gesprochen?",
        "question_toks": [
            "Auf",
            "welchem",
            "Kontinent",
            "werden",
            "die",
            "meisten",
            "Sprachen",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many countries speak both English and Dutch?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"Dutch\")",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "Dutch",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "In wie vielen Ländern wird sowohl \"English\" als auch \"Dutch\" gesprochen?",
        "question_toks": [
            "In",
            "wie",
            "vielen",
            "Ländern",
            "wird",
            "sowohl",
            "``",
            "English",
            "''",
            "als",
            "auch",
            "``",
            "Dutch",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "sql",
                        {
                            "from": {
                                "table_units": [
                                    [
                                        "table_unit",
                                        0
                                    ],
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ],
                                "conds": [
                                    [
                                        false,
                                        2,
                                        [
                                            0,
                                            [
                                                0,
                                                1,
                                                false
                                            ],
                                            null
                                        ],
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            },
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                2,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "where": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ],
                                    "\"English\"",
                                    null
                                ]
                            ],
                            "groupBy": [],
                            "having": [],
                            "orderBy": [],
                            "limit": null,
                            "intersect": {
                                "from": {
                                    "table_units": [
                                        [
                                            "table_unit",
                                            0
                                        ],
                                        [
                                            "table_unit",
                                            2
                                        ]
                                    ],
                                    "conds": [
                                        [
                                            false,
                                            2,
                                            [
                                                0,
                                                [
                                                    0,
                                                    1,
                                                    false
                                                ],
                                                null
                                            ],
                                            [
                                                0,
                                                21,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                },
                                "select": [
                                    false,
                                    [
                                        [
                                            0,
                                            [
                                                0,
                                                [
                                                    0,
                                                    2,
                                                    false
                                                ],
                                                null
                                            ]
                                        ]
                                    ]
                                ],
                                "where": [
                                    [
                                        false,
                                        2,
                                        [
                                            0,
                                            [
                                                0,
                                                22,
                                                false
                                            ],
                                            null
                                        ],
                                        "\"Dutch\"",
                                        null
                                    ]
                                ],
                                "groupBy": [],
                                "having": [],
                                "orderBy": [],
                                "limit": null,
                                "intersect": null,
                                "union": null,
                                "except": null
                            },
                            "union": null,
                            "except": null
                        }
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the number of nations that use English and Dutch?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"Dutch\")",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "Dutch",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "Wie viele Nationen benutzen \"English\" und \"Dutch\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Nationen",
            "benutzen",
            "``",
            "English",
            "''",
            "und",
            "``",
            "Dutch",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "sql",
                        {
                            "from": {
                                "table_units": [
                                    [
                                        "table_unit",
                                        0
                                    ],
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ],
                                "conds": [
                                    [
                                        false,
                                        2,
                                        [
                                            0,
                                            [
                                                0,
                                                1,
                                                false
                                            ],
                                            null
                                        ],
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            },
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                2,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "where": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ],
                                    "\"English\"",
                                    null
                                ]
                            ],
                            "groupBy": [],
                            "having": [],
                            "orderBy": [],
                            "limit": null,
                            "intersect": {
                                "from": {
                                    "table_units": [
                                        [
                                            "table_unit",
                                            0
                                        ],
                                        [
                                            "table_unit",
                                            2
                                        ]
                                    ],
                                    "conds": [
                                        [
                                            false,
                                            2,
                                            [
                                                0,
                                                [
                                                    0,
                                                    1,
                                                    false
                                                ],
                                                null
                                            ],
                                            [
                                                0,
                                                21,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                },
                                "select": [
                                    false,
                                    [
                                        [
                                            0,
                                            [
                                                0,
                                                [
                                                    0,
                                                    2,
                                                    false
                                                ],
                                                null
                                            ]
                                        ]
                                    ]
                                ],
                                "where": [
                                    [
                                        false,
                                        2,
                                        [
                                            0,
                                            [
                                                0,
                                                22,
                                                false
                                            ],
                                            null
                                        ],
                                        "\"Dutch\"",
                                        null
                                    ]
                                ],
                                "groupBy": [],
                                "having": [],
                                "orderBy": [],
                                "limit": null,
                                "intersect": null,
                                "union": null,
                                "except": null
                            },
                            "union": null,
                            "except": null
                        }
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of nations speak both English and French?",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"French\"",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "French",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "Wie heißen die Nationen, die sowohl \"English\" als auch \"French\" sprechen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Nationen",
            ",",
            "die",
            "sowohl",
            "``",
            "English",
            "''",
            "als",
            "auch",
            "``",
            "French",
            "''",
            "sprechen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the names of nations that speak both English and French.",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"French\"",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "French",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "Nenne die Namen von Nationen, die sowohl \"English\" als auch \"French\" sprechen.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "von",
            "Nationen",
            ",",
            "die",
            "sowohl",
            "``",
            "English",
            "''",
            "als",
            "auch",
            "``",
            "French",
            "''",
            "sprechen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of nations where both English and French are official languages?",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" AND T2.ist_offiziell = \"T\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"French\" AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "French",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie heißen die Länder, in denen sowohl \"English\" als auch \"French\" Amtssprachen sind?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Länder",
            ",",
            "in",
            "denen",
            "sowohl",
            "``",
            "English",
            "''",
            "als",
            "auch",
            "``",
            "French",
            "''",
            "Amtssprachen",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        "\"T\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the names of countries with English and French as official languages.",
        "query": "SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" AND T2.ist_offiziell = \"T\" INTERSECT SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"French\" AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "French",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value",
            "INTERSECT",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Nenne die Namen der Länder mit \"English\" und \"French\" als Amtssprachen.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Länder",
            "mit",
            "``",
            "English",
            "''",
            "und",
            "``",
            "French",
            "''",
            "als",
            "Amtssprachen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        "\"T\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the number of distinct continents where Chinese is spoken?",
        "query": "SELECT COUNT( DISTINCT kontinent) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"Chinese\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "kontinent",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "Chinese",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "kontinent",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "Wie viele Kontinente gibt es, auf denen \"Chinese\" gesprochen wird?",
        "question_toks": [
            "Wie",
            "viele",
            "Kontinente",
            "gibt",
            "es",
            ",",
            "auf",
            "denen",
            "``",
            "Chinese",
            "''",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many continents speak Chinese?",
        "query": "SELECT COUNT( DISTINCT kontinent) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"Chinese\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "kontinent",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "Chinese",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "kontinent",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "Auf wie vielen Kontinenten wird \"Chinese\" gesprochen?",
        "question_toks": [
            "Auf",
            "wie",
            "vielen",
            "Kontinenten",
            "wird",
            "``",
            "Chinese",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the regions that use English or Dutch?",
        "query": "SELECT DISTINCT T1.region FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" OR T2.sprache = \"Dutch\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "OR",
            "T2.sprache",
            "=",
            "``",
            "Dutch",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "OR",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "In welchen Regionen wird \"English\" oder \"Dutch\" gesprochen?",
        "question_toks": [
            "In",
            "welchen",
            "Regionen",
            "wird",
            "``",
            "English",
            "''",
            "oder",
            "``",
            "Dutch",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Dutch\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which regions speak Dutch or English?",
        "query": "SELECT DISTINCT T1.region FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" OR T2.sprache = \"Dutch\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "OR",
            "T2.sprache",
            "=",
            "``",
            "Dutch",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.region",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "OR",
            "T2.sprache",
            "=",
            "value"
        ],
        "question": "In welchen Regionen wird \"Dutch\" oder \"English\" gesprochen?",
        "question_toks": [
            "In",
            "welchen",
            "Regionen",
            "wird",
            "``",
            "Dutch",
            "''",
            "oder",
            "``",
            "English",
            "''",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Dutch\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the countries where either English or Dutch is the official language ?",
        "query": "select t1.name from land as t1 join landessprache as t2 on t1.code = t2.ländercode where t2.sprache = \"english\" and ist_offiziell = \"t\" union select t1.name from land as t1 join landessprache as t2 on t1.code = t2.ländercode where t2.sprache = \"dutch\" and ist_offiziell = \"t\"",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "where",
            "t2.sprache",
            "=",
            "``",
            "english",
            "''",
            "and",
            "ist_offiziell",
            "=",
            "``",
            "t",
            "''",
            "union",
            "select",
            "t1.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "where",
            "t2.sprache",
            "=",
            "``",
            "dutch",
            "''",
            "and",
            "ist_offiziell",
            "=",
            "``",
            "t",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "where",
            "t2.sprache",
            "=",
            "value",
            "and",
            "ist_offiziell",
            "=",
            "value",
            "union",
            "select",
            "t1.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "where",
            "t2.sprache",
            "=",
            "value",
            "and",
            "ist_offiziell",
            "=",
            "value"
        ],
        "question": "In welchen Ländern ist entweder Englisch oder Niederländisch \"t\" offizielle Sprache?",
        "question_toks": [
            "In",
            "welchen",
            "Ländern",
            "ist",
            "entweder",
            "Englisch",
            "oder",
            "Niederländisch",
            "``",
            "t",
            "''",
            "offizielle",
            "Sprache",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"english\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"dutch\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        "\"t\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which countries have either English or Dutch as an official language?",
        "query": "SELECT * FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" AND ist_offiziell = \"T\" UNION SELECT * FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"Dutch\" AND ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "ist_offiziell",
            "=",
            "``",
            "T",
            "''",
            "UNION",
            "SELECT",
            "*",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "Dutch",
            "''",
            "AND",
            "ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "*",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "ist_offiziell",
            "=",
            "value",
            "UNION",
            "SELECT",
            "*",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "ist_offiziell",
            "=",
            "value"
        ],
        "question": "Welche Länder haben entweder \"English\" oder \"Dutch\" als Amtssprache?",
        "question_toks": [
            "Welche",
            "Länder",
            "haben",
            "entweder",
            "``",
            "English",
            "''",
            "oder",
            "``",
            "Dutch",
            "''",
            "als",
            "Amtssprache",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    0,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"Dutch\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        "\"T\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which language is the most popular on the Asian continent?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.kontinent = \"Asia\" GROUP BY T2.sprache ORDER BY COUNT (*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "GROUP",
            "BY",
            "T2.sprache",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.kontinent",
            "=",
            "value",
            "GROUP",
            "BY",
            "T2.sprache",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Sprache ist auf dem \"Asia\" Kontinent am beliebtesten?",
        "question_toks": [
            "Welche",
            "Sprache",
            "ist",
            "auf",
            "dem",
            "``",
            "Asia",
            "''",
            "Kontinent",
            "am",
            "beliebtesten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the language that is used by the largest number of Asian nations?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.kontinent = \"Asia\" GROUP BY T2.sprache ORDER BY COUNT (*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "GROUP",
            "BY",
            "T2.sprache",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.kontinent",
            "=",
            "value",
            "GROUP",
            "BY",
            "T2.sprache",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Sprache wird von den meisten \"Asia\" Nationen gesprochen?",
        "question_toks": [
            "Welche",
            "Sprache",
            "wird",
            "von",
            "den",
            "meisten",
            "``",
            "Asia",
            "''",
            "Nationen",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which languages are spoken by only one country in republic governments?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.regierungsform = \"Republic\" GROUP BY T2.sprache HAVING COUNT(*) = 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.regierungsform",
            "=",
            "``",
            "Republic",
            "''",
            "GROUP",
            "BY",
            "T2.sprache",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.regierungsform",
            "=",
            "value",
            "GROUP",
            "BY",
            "T2.sprache",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "question": "Welche Sprachen werden in den Regierungen der Republiken nur von einem Land gesprochen?",
        "question_toks": [
            "Welche",
            "Sprachen",
            "werden",
            "in",
            "den",
            "Regierungen",
            "der",
            "Republiken",
            "nur",
            "von",
            "einem",
            "Land",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What languages are only used by a single country with a republic government?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.regierungsform = \"Republic\" GROUP BY T2.sprache HAVING COUNT(*) = 1",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.regierungsform",
            "=",
            "``",
            "Republic",
            "''",
            "GROUP",
            "BY",
            "T2.sprache",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.regierungsform",
            "=",
            "value",
            "GROUP",
            "BY",
            "T2.sprache",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "question": "Welche Sprachen werden nur in einem einzigen Land mit einer republikanischen Regierung verwendet?",
        "question_toks": [
            "Welche",
            "Sprachen",
            "werden",
            "nur",
            "in",
            "einem",
            "einzigen",
            "Land",
            "mit",
            "einer",
            "republikanischen",
            "Regierung",
            "verwendet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Find the city with the largest population that uses English.",
        "query": "SELECT T1.name , T1.bevölkerung FROM stadt AS T1 JOIN landessprache AS T2 ON T1.ländercode = T2.ländercode WHERE T2.sprache = \"English\" ORDER BY T1.bevölkerung DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.bevölkerung",
            "FROM",
            "stadt",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.ländercode",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "ORDER",
            "BY",
            "T1.bevölkerung",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            ",",
            "T1.bevölkerung",
            "FROM",
            "stadt",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.ländercode",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "ORDER",
            "BY",
            "T1.bevölkerung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Stadt mit der größten Bevölkerung, die \"English\" spricht.",
        "question_toks": [
            "Finde",
            "die",
            "Stadt",
            "mit",
            "der",
            "größten",
            "Bevölkerung",
            ",",
            "die",
            "``",
            "English",
            "''",
            "spricht",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the most populace city that speaks English?",
        "query": "SELECT T1.name , T1.bevölkerung FROM stadt AS T1 JOIN landessprache AS T2 ON T1.ländercode = T2.ländercode WHERE T2.sprache = \"English\" ORDER BY T1.bevölkerung DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.bevölkerung",
            "FROM",
            "stadt",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.ländercode",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "ORDER",
            "BY",
            "T1.bevölkerung",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            ",",
            "T1.bevölkerung",
            "FROM",
            "stadt",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.ländercode",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "ORDER",
            "BY",
            "T1.bevölkerung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche ist die bevölkerungsreichste Stadt, die \"English\" spricht?",
        "question_toks": [
            "Welche",
            "ist",
            "die",
            "bevölkerungsreichste",
            "Stadt",
            ",",
            "die",
            "``",
            "English",
            "''",
            "spricht",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Find the name, population and expected life length of asian country with the largest area?",
        "query": "SELECT name , bevölkerung , lebenserwartung FROM land WHERE kontinent = \"Asia\" ORDER BY fläche DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde den Namen, die Bevölkerung und die erwartete Lebensdauer des asiatischen Landes mit der größten Fläche?",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            ",",
            "die",
            "Bevölkerung",
            "und",
            "die",
            "erwartete",
            "Lebensdauer",
            "des",
            "asiatischen",
            "Landes",
            "mit",
            "der",
            "größten",
            "Fläche",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "query": "SELECT name , bevölkerung , lebenserwartung FROM land WHERE kontinent = \"Asia\" ORDER BY fläche DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "lebenserwartung",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten der Name, die Bevölkerung und die Lebenserwartung des größten \"Asia\" Landes nach Fläche?",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Name",
            ",",
            "die",
            "Bevölkerung",
            "und",
            "die",
            "Lebenserwartung",
            "des",
            "größten",
            "``",
            "Asia",
            "''",
            "Landes",
            "nach",
            "Fläche",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is average life expectancy in the countries where English is not the official language?",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE name NOT IN (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" AND T2.ist_offiziell = \"T\")",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value",
            ")"
        ],
        "question": "Wie hoch ist die durchschnittliche Lebenserwartung in den Ländern, in denen \"English\" nicht die offizielle Sprache ist?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "in",
            "den",
            "Ländern",
            ",",
            "in",
            "denen",
            "``",
            "English",
            "''",
            "nicht",
            "die",
            "offizielle",
            "Sprache",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the mean life expectancy of countries in which English is not the official language.",
        "query": "SELECT avg(lebenserwartung) FROM land WHERE name NOT IN (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\" AND T2.ist_offiziell = \"T\")",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value",
            ")"
        ],
        "question": "Gib die durchschnittliche Lebenserwartung der Länder an, in denen \"English\" nicht die offizielle Sprache ist.",
        "question_toks": [
            "Gib",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "der",
            "Länder",
            "an",
            ",",
            "in",
            "denen",
            "``",
            "English",
            "''",
            "nicht",
            "die",
            "offizielle",
            "Sprache",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total number of people living in the nations that do not use English?",
        "query": "SELECT sum(bevölkerung) FROM land WHERE name NOT IN (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\")",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "Wie hoch ist die Gesamtzahl der Menschen, die in den Ländern leben, in denen kein \"English\" gesprochen wird?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtzahl",
            "der",
            "Menschen",
            ",",
            "die",
            "in",
            "den",
            "Ländern",
            "leben",
            ",",
            "in",
            "denen",
            "kein",
            "``",
            "English",
            "''",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many people live in countries that do not speak English?",
        "query": "SELECT sum(bevölkerung) FROM land WHERE name NOT IN (SELECT T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T2.sprache = \"English\")",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "``",
            "English",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T2.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "Wie viele Menschen leben in Ländern, in denen kein \"English\" gesprochen wird?",
        "question_toks": [
            "Wie",
            "viele",
            "Menschen",
            "leben",
            "in",
            "Ländern",
            ",",
            "in",
            "denen",
            "kein",
            "``",
            "English",
            "''",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the official language spoken in the country whose head of state is Beatrix?",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.staatsoberhaupt = \"Beatrix\" AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.staatsoberhaupt",
            "=",
            "``",
            "Beatrix",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.staatsoberhaupt",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Welche Amtssprache wird in dem Land gesprochen, dessen Staatsoberhaupt \"Beatrix\" ist?",
        "question_toks": [
            "Welche",
            "Amtssprache",
            "wird",
            "in",
            "dem",
            "Land",
            "gesprochen",
            ",",
            "dessen",
            "Staatsoberhaupt",
            "``",
            "Beatrix",
            "''",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"Beatrix\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "query": "SELECT T2.sprache FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE T1.staatsoberhaupt = \"Beatrix\" AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.staatsoberhaupt",
            "=",
            "``",
            "Beatrix",
            "''",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.sprache",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "T1.staatsoberhaupt",
            "=",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie heißt die Amtssprache in dem Land, dessen Staatsoberhaupt \"Beatrix\" heißt?",
        "question_toks": [
            "Wie",
            "heißt",
            "die",
            "Amtssprache",
            "in",
            "dem",
            "Land",
            ",",
            "dessen",
            "Staatsoberhaupt",
            "``",
            "Beatrix",
            "''",
            "heißt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"Beatrix\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "query": "SELECT count(DISTINCT T2.sprache) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE unabhängiges_jahr < 1930 AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "unabhängiges_jahr",
            "<",
            "1930",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "unabhängiges_jahr",
            "<",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die Gesamtzahl der Amtssprachen in den Ländern, die vor 1930 gegründet wurden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtzahl",
            "der",
            "Amtssprachen",
            "in",
            "den",
            "Ländern",
            ",",
            "die",
            "vor",
            "1930",
            "gegründet",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    1930.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "query": "SELECT count(DISTINCT T2.sprache) FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode WHERE unabhängiges_jahr < 1930 AND T2.ist_offiziell = \"T\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "unabhängiges_jahr",
            "<",
            "1930",
            "AND",
            "T2.ist_offiziell",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.sprache",
            ")",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "WHERE",
            "unabhängiges_jahr",
            "<",
            "value",
            "AND",
            "T2.ist_offiziell",
            "=",
            "value"
        ],
        "question": "Wie hoch ist die Gesamtzahl der verschiedenen Amtssprachen in den Ländern, die vor 1930 gegründet wurden?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtzahl",
            "der",
            "verschiedenen",
            "Amtssprachen",
            "in",
            "den",
            "Ländern",
            ",",
            "die",
            "vor",
            "1930",
            "gegründet",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    1930.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the countries that have greater surface area than any country in Europe?",
        "query": "SELECT name FROM land WHERE fläche > (SELECT min(fläche) FROM land WHERE kontinent = \"Europe\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "fläche",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "fläche",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche Länder haben eine größere Fläche als jedes andere Land in \"Europe\"?",
        "question_toks": [
            "Welche",
            "Länder",
            "haben",
            "eine",
            "größere",
            "Fläche",
            "als",
            "jedes",
            "andere",
            "Land",
            "in",
            "``",
            "Europe",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            5,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Europe\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which countries have greater area than that of any country in Europe?",
        "query": "SELECT name FROM land WHERE fläche > (SELECT min(fläche) FROM land WHERE kontinent = \"Europe\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "fläche",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "fläche",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "fläche",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche Länder haben eine größere Fläche als jedes andere Land in \"Europe\"?",
        "question_toks": [
            "Welche",
            "Länder",
            "haben",
            "eine",
            "größere",
            "Fläche",
            "als",
            "jedes",
            "andere",
            "Land",
            "in",
            "``",
            "Europe",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            5,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Europe\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the African countries that have a  population less than any country in Asia?",
        "query": "SELECT name FROM land WHERE kontinent = \"Africa\" AND bevölkerung < (SELECT max(bevölkerung) FROM land WHERE kontinent = \"Asia\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "bevölkerung",
            "<",
            "(",
            "SELECT",
            "max",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            "<",
            "(",
            "SELECT",
            "max",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche \"Africa\" Länder haben eine geringere Bevölkerung als jedes Land in \"Asia\"?",
        "question_toks": [
            "Welche",
            "``",
            "Africa",
            "''",
            "Länder",
            "haben",
            "eine",
            "geringere",
            "Bevölkerung",
            "als",
            "jedes",
            "Land",
            "in",
            "``",
            "Asia",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Asia\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which African countries have a smaller population than that of any country in Asia?",
        "query": "SELECT name FROM land WHERE kontinent = \"Africa\" AND bevölkerung < (SELECT min(bevölkerung) FROM land WHERE kontinent = \"Asia\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "bevölkerung",
            "<",
            "(",
            "SELECT",
            "min",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            "<",
            "(",
            "SELECT",
            "min",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche \"Africa\" Länder haben eine kleinere Bevölkerung als jedes Land in \"Asia\"?",
        "question_toks": [
            "Welche",
            "``",
            "Africa",
            "''",
            "Länder",
            "haben",
            "eine",
            "kleinere",
            "Bevölkerung",
            "als",
            "jedes",
            "Land",
            "in",
            "``",
            "Asia",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Asia\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which Asian countries have a population that is larger than any country in Africa?",
        "query": "SELECT name FROM land WHERE kontinent = \"Asia\" AND bevölkerung > (SELECT max(bevölkerung) FROM land WHERE kontinent = \"Africa\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "AND",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "max",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "max",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche \"Asia\" Länder haben eine größere Bevölkerung als jedes Land in \"Africa\"?",
        "question_toks": [
            "Welche",
            "``",
            "Asia",
            "''",
            "Länder",
            "haben",
            "eine",
            "größere",
            "Bevölkerung",
            "als",
            "jedes",
            "Land",
            "in",
            "``",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Africa\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "query": "SELECT name FROM land WHERE kontinent = \"Asia\" AND bevölkerung > (SELECT min(bevölkerung) FROM land WHERE kontinent = \"Africa\")",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''",
            "AND",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Africa",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            ")"
        ],
        "question": "Welche \"Asia\" Länder haben eine größere Bevölkerung als jedes Land in \"Africa\"?",
        "question_toks": [
            "Welche",
            "``",
            "Asia",
            "''",
            "Länder",
            "haben",
            "eine",
            "größere",
            "Bevölkerung",
            "als",
            "jedes",
            "Land",
            "in",
            "``",
            "Africa",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        3,
                                        false
                                    ],
                                    null
                                ],
                                "\"Africa\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the country codes for countries that do not speak English?",
        "query": "SELECT ländercode FROM landessprache EXCEPT SELECT ländercode FROM landessprache WHERE sprache = \"English\"",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value"
        ],
        "question": "Wie lauten die Ländercodes für Länder, in denen kein \"English\" gesprochen wird?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Ländercodes",
            "für",
            "Länder",
            ",",
            "in",
            "denen",
            "kein",
            "``",
            "English",
            "''",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the country codes for countries that do not speak English.",
        "query": "SELECT ländercode FROM landessprache EXCEPT SELECT ländercode FROM landessprache WHERE sprache = \"English\"",
        "query_toks": [
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value"
        ],
        "question": "Gib die Ländercodes für Länder an, in denen kein \"English\" gesprochen wird.",
        "question_toks": [
            "Gib",
            "die",
            "Ländercodes",
            "für",
            "Länder",
            "an",
            ",",
            "in",
            "denen",
            "kein",
            "``",
            "English",
            "''",
            "gesprochen",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the country codes of countries where people use languages other than English?",
        "query": "SELECT DISTINCT ländercode FROM landessprache WHERE sprache != \"English\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "!",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lauten die Ländercodes der Länder, in denen die Menschen andere Sprachen als \"English\" sprechen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Ländercodes",
            "der",
            "Länder",
            ",",
            "in",
            "denen",
            "die",
            "Menschen",
            "andere",
            "Sprachen",
            "als",
            "``",
            "English",
            "''",
            "sprechen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the country codes for countries in which people speak langauges that are not English.",
        "query": "SELECT DISTINCT ländercode FROM landessprache WHERE sprache != \"English\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "!",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "!",
            "=",
            "value"
        ],
        "question": "Gib die Ländercodes für Länder an, in denen die Menschen nicht \"English\" sprechen.",
        "question_toks": [
            "Gib",
            "die",
            "Ländercodes",
            "für",
            "Länder",
            "an",
            ",",
            "in",
            "denen",
            "die",
            "Menschen",
            "nicht",
            "``",
            "English",
            "''",
            "sprechen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "query": "SELECT code FROM land WHERE regierungsform != \"Republic\" EXCEPT SELECT ländercode FROM landessprache WHERE sprache = \"English\"",
        "query_toks": [
            "SELECT",
            "code",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "!",
            "=",
            "``",
            "Republic",
            "''",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "code",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "!",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value"
        ],
        "question": "Wie lauten die Codes der Länder, die kein \"English\" sprechen und deren Regierungsformulare nicht die \"Republic\" sind?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "der",
            "Länder",
            ",",
            "die",
            "kein",
            "``",
            "English",
            "''",
            "sprechen",
            "und",
            "deren",
            "Regierungsformulare",
            "nicht",
            "die",
            "``",
            "Republic",
            "''",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "query": "SELECT code FROM land WHERE regierungsform != \"Republic\" EXCEPT SELECT ländercode FROM landessprache WHERE sprache = \"English\"",
        "query_toks": [
            "SELECT",
            "code",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "!",
            "=",
            "``",
            "Republic",
            "''",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "code",
            "FROM",
            "land",
            "WHERE",
            "regierungsform",
            "!",
            "=",
            "value",
            "EXCEPT",
            "SELECT",
            "ländercode",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value"
        ],
        "question": "Gib die Codes der Länder zurück, in denen kein \"English\" gesprochen wird und die keine \"Republic\" als Regierungen haben.",
        "question_toks": [
            "Gib",
            "die",
            "Codes",
            "der",
            "Länder",
            "zurück",
            ",",
            "in",
            "denen",
            "kein",
            "``",
            "English",
            "''",
            "gesprochen",
            "wird",
            "und",
            "die",
            "keine",
            "``",
            "Republic",
            "''",
            "als",
            "Regierungen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "world_1",
        "match": "Which cities are in European countries where English is not the official language?",
        "query": "SELECT DISTINCT T2.name FROM land AS T1 JOIN stadt AS T2 ON T2.ländercode = T1.code WHERE T1.kontinent = 'Europe' AND T1.name NOT IN (SELECT T3.name FROM land AS T3 JOIN landessprache AS T4 ON T3.code = T4.ländercode WHERE T4.ist_offiziell = 'T' AND T4.sprache = 'English')",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T2.ländercode",
            "=",
            "T1.code",
            "WHERE",
            "T1.kontinent",
            "=",
            "'Europe",
            "'",
            "AND",
            "T1.name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T3",
            "JOIN",
            "landessprache",
            "AS",
            "T4",
            "ON",
            "T3.code",
            "=",
            "T4.ländercode",
            "WHERE",
            "T4.ist_offiziell",
            "=",
            "'T",
            "'",
            "AND",
            "T4.sprache",
            "=",
            "'English",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T2.ländercode",
            "=",
            "T1.code",
            "WHERE",
            "T1.kontinent",
            "=",
            "value",
            "AND",
            "T1.name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T3",
            "JOIN",
            "landessprache",
            "AS",
            "T4",
            "ON",
            "T3.code",
            "=",
            "T4.ländercode",
            "WHERE",
            "T4.ist_offiziell",
            "=",
            "value",
            "AND",
            "T4.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "Welche Städte liegen in \"Europe\" Ländern, in denen \"English\" nicht die offizielle Sprache ist?",
        "question_toks": [
            "Welche",
            "Städte",
            "liegen",
            "in",
            "``",
            "Europe",
            "''",
            "Ländern",
            ",",
            "in",
            "denen",
            "``",
            "English",
            "''",
            "nicht",
            "die",
            "offizielle",
            "Sprache",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of cities in Europe for which English is not the official language?",
        "query": "SELECT DISTINCT T2.name FROM land AS T1 JOIN stadt AS T2 ON T2.ländercode = T1.code WHERE T1.kontinent = 'Europe' AND T1.name NOT IN (SELECT T3.name FROM land AS T3 JOIN landessprache AS T4 ON T3.code = T4.ländercode WHERE T4.ist_offiziell = 'T' AND T4.sprache = 'English')",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T2.ländercode",
            "=",
            "T1.code",
            "WHERE",
            "T1.kontinent",
            "=",
            "'Europe",
            "'",
            "AND",
            "T1.name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T3",
            "JOIN",
            "landessprache",
            "AS",
            "T4",
            "ON",
            "T3.code",
            "=",
            "T4.ländercode",
            "WHERE",
            "T4.ist_offiziell",
            "=",
            "'T",
            "'",
            "AND",
            "T4.sprache",
            "=",
            "'English",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T2.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "stadt",
            "AS",
            "T2",
            "ON",
            "T2.ländercode",
            "=",
            "T1.code",
            "WHERE",
            "T1.kontinent",
            "=",
            "value",
            "AND",
            "T1.name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T3",
            "JOIN",
            "landessprache",
            "AS",
            "T4",
            "ON",
            "T3.code",
            "=",
            "T4.ländercode",
            "WHERE",
            "T4.ist_offiziell",
            "=",
            "value",
            "AND",
            "T4.sprache",
            "=",
            "value",
            ")"
        ],
        "question": "Wie heißen die Städte in \"Europe\", in denen \"English\" nicht die offizielle Sprache ist?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Städte",
            "in",
            "``",
            "Europe",
            "''",
            ",",
            "in",
            "denen",
            "``",
            "English",
            "''",
            "nicht",
            "die",
            "offizielle",
            "Sprache",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        22,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which unique cities are in Asian countries where Chinese is the official language ?",
        "query": "select distinct t3.name from land as t1 join landessprache as t2 on t1.code = t2.ländercode join stadt as t3 on t1.code = t3.ländercode where t2.ist_offiziell = 't' and t2.sprache = 'chinese' and t1.kontinent = \"asia\"",
        "query_toks": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "join",
            "stadt",
            "as",
            "t3",
            "on",
            "t1.code",
            "=",
            "t3.ländercode",
            "where",
            "t2.ist_offiziell",
            "=",
            "'t",
            "'",
            "and",
            "t2.sprache",
            "=",
            "'chinese",
            "'",
            "and",
            "t1.kontinent",
            "=",
            "``",
            "asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "land",
            "as",
            "t1",
            "join",
            "landessprache",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.ländercode",
            "join",
            "stadt",
            "as",
            "t3",
            "on",
            "t1.code",
            "=",
            "t3.ländercode",
            "where",
            "t2.ist_offiziell",
            "=",
            "value",
            "and",
            "t2.sprache",
            "=",
            "value",
            "and",
            "t1.kontinent",
            "=",
            "value"
        ],
        "question": "Welche einzigartigen Städte liegen in asiatischen Ländern, in denen Chinesisch \"t\" offizielle Sprache ist?",
        "question_toks": [
            "Welche",
            "einzigartigen",
            "Städte",
            "liegen",
            "in",
            "asiatischen",
            "Ländern",
            ",",
            "in",
            "denen",
            "Chinesisch",
            "``",
            "t",
            "''",
            "offizielle",
            "Sprache",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"chinese\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "query": "SELECT DISTINCT T3.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode JOIN stadt AS T3 ON T1.code = T3.ländercode WHERE T2.ist_offiziell = 'T' AND T2.sprache = 'Chinese' AND T1.kontinent = \"Asia\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "JOIN",
            "stadt",
            "AS",
            "T3",
            "ON",
            "T1.code",
            "=",
            "T3.ländercode",
            "WHERE",
            "T2.ist_offiziell",
            "=",
            "'T",
            "'",
            "AND",
            "T2.sprache",
            "=",
            "'Chinese",
            "'",
            "AND",
            "T1.kontinent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T3.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "JOIN",
            "stadt",
            "AS",
            "T3",
            "ON",
            "T1.code",
            "=",
            "T3.ländercode",
            "WHERE",
            "T2.ist_offiziell",
            "=",
            "value",
            "AND",
            "T2.sprache",
            "=",
            "value",
            "AND",
            "T1.kontinent",
            "=",
            "value"
        ],
        "question": "Gib die verschiedenen Namen von Städten in \"Asia\" an, in denen \"Chinese\" die offizielle Sprache ist.",
        "question_toks": [
            "Gib",
            "die",
            "verschiedenen",
            "Namen",
            "von",
            "Städten",
            "in",
            "``",
            "Asia",
            "''",
            "an",
            ",",
            "in",
            "denen",
            "``",
            "Chinese",
            "''",
            "die",
            "offizielle",
            "Sprache",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the name, independence year, and surface area of the country with the smallest population?",
        "query": "SELECT name , fläche , unabhängiges_jahr FROM land ORDER BY bevölkerung LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "fläche",
            ",",
            "unabhängiges_jahr",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "fläche",
            ",",
            "unabhängiges_jahr",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten der Name, das Jahr der Unabhängigkeit und die Fläche des Landes mit der kleinsten Bevölkerung?",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Name",
            ",",
            "das",
            "Jahr",
            "der",
            "Unabhängigkeit",
            "und",
            "die",
            "Fläche",
            "des",
            "Landes",
            "mit",
            "der",
            "kleinsten",
            "Bevölkerung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "query": "SELECT name , fläche , unabhängiges_jahr FROM land ORDER BY bevölkerung LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "fläche",
            ",",
            "unabhängiges_jahr",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "fläche",
            ",",
            "unabhängiges_jahr",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Namen, das Jahr der Unabhängigkeit und die Fläche des Landes mit der geringsten Bevölkerungszahl an.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            ",",
            "das",
            "Jahr",
            "der",
            "Unabhängigkeit",
            "und",
            "die",
            "Fläche",
            "des",
            "Landes",
            "mit",
            "der",
            "geringsten",
            "Bevölkerungszahl",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the population, name and leader of the country with the largest area?",
        "query": "SELECT name , bevölkerung , staatsoberhaupt FROM land ORDER BY fläche DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "staatsoberhaupt",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "staatsoberhaupt",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Einwohnerzahl, der Name und der Anführer des Landes mit der größten Fläche?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Einwohnerzahl",
            ",",
            "der",
            "Name",
            "und",
            "der",
            "Anführer",
            "des",
            "Landes",
            "mit",
            "der",
            "größten",
            "Fläche",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the name, population, and head of state for the country that has the largest area.",
        "query": "SELECT name , bevölkerung , staatsoberhaupt FROM land ORDER BY fläche DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "staatsoberhaupt",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "bevölkerung",
            ",",
            "staatsoberhaupt",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Namen, die Bevölkerung und das Staatsoberhaupt des Landes mit der größten Fläche an.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            ",",
            "die",
            "Bevölkerung",
            "und",
            "das",
            "Staatsoberhaupt",
            "des",
            "Landes",
            "mit",
            "der",
            "größten",
            "Fläche",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "query": "SELECT COUNT(T2.sprache) , T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.name HAVING COUNT(*) > 2",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            ",",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            ",",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Gib den Ländernamen und die Anzahl der gesprochenen Sprachen für jedes Land zurück, das mindestens 3 Sprachen spricht.",
        "question_toks": [
            "Gib",
            "den",
            "Ländernamen",
            "und",
            "die",
            "Anzahl",
            "der",
            "gesprochenen",
            "Sprachen",
            "für",
            "jedes",
            "Land",
            "zurück",
            ",",
            "das",
            "mindestens",
            "3",
            "Sprachen",
            "spricht",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "query": "SELECT COUNT(T2.sprache) , T1.name FROM land AS T1 JOIN landessprache AS T2 ON T1.code = T2.ländercode GROUP BY T1.name HAVING COUNT(*) > 2",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            ",",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "T2.sprache",
            ")",
            ",",
            "T1.name",
            "FROM",
            "land",
            "AS",
            "T1",
            "JOIN",
            "landessprache",
            "AS",
            "T2",
            "ON",
            "T1.code",
            "=",
            "T2.ländercode",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie heißen die Länder, die mehr als 2 Sprachen sprechen, und wie viele Sprachen sprechen sie?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Länder",
            ",",
            "die",
            "mehr",
            "als",
            "2",
            "Sprachen",
            "sprechen",
            ",",
            "und",
            "wie",
            "viele",
            "Sprachen",
            "sprechen",
            "sie",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "query": "SELECT count(*) , bezirk FROM stadt WHERE bevölkerung > (SELECT avg(bevölkerung) FROM stadt) GROUP BY bezirk",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "bezirk",
            "FROM",
            "stadt",
            "WHERE",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            ")",
            "GROUP",
            "BY",
            "bezirk"
        ],
        "query_toks_no_value": "SELECT count(*) , bezirk FROM stadt WHERE bevölkerung > (SELECT avg(bevölkerung) FROM stadt) GROUP BY bezirk",
        "question": "Finde die Anzahl der Städte in jedem Bezirk, deren Bevölkerung größer ist als die durchschnittliche Bevölkerung der Städte?",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Städte",
            "in",
            "jedem",
            "Bezirk",
            ",",
            "deren",
            "Bevölkerung",
            "größer",
            "ist",
            "als",
            "die",
            "durchschnittliche",
            "Bevölkerung",
            "der",
            "Städte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "How many cities in each district have a population that is above the average population across all cities?",
        "query": "SELECT count(*) , bezirk FROM stadt WHERE bevölkerung > (SELECT avg(bevölkerung) FROM stadt) GROUP BY bezirk",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "bezirk",
            "FROM",
            "stadt",
            "WHERE",
            "bevölkerung",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "bevölkerung",
            ")",
            "FROM",
            "stadt",
            ")",
            "GROUP",
            "BY",
            "bezirk"
        ],
        "query_toks_no_value": "SELECT count(*) , bezirk FROM stadt WHERE bevölkerung > (SELECT avg(bevölkerung) FROM stadt) GROUP BY bezirk",
        "question": "Wie viele Städte in jedem Bezirk haben eine Bevölkerung, die über dem Bevölkerungsdurchschnitt aller Städte liegt?",
        "question_toks": [
            "Wie",
            "viele",
            "Städte",
            "in",
            "jedem",
            "Bezirk",
            "haben",
            "eine",
            "Bevölkerung",
            ",",
            "die",
            "über",
            "dem",
            "Bevölkerungsdurchschnitt",
            "aller",
            "Städte",
            "liegt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "query": "SELECT sum(bevölkerung) , regierungsform FROM land GROUP BY regierungsform HAVING avg(lebenserwartung) > 72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "regierungsform",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "regierungsform",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ">",
            "72"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "regierungsform",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "regierungsform",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ">",
            "value"
        ],
        "question": "Finde den Namen der Regierungsform und die Gesamtbevölkerung für jede Regierungsform, deren durchschnittliche Lebenserwartung höher als 72 ist.",
        "question_toks": [
            "Finde",
            "den",
            "Namen",
            "der",
            "Regierungsform",
            "und",
            "die",
            "Gesamtbevölkerung",
            "für",
            "jede",
            "Regierungsform",
            ",",
            "deren",
            "durchschnittliche",
            "Lebenserwartung",
            "höher",
            "als",
            "72",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            8,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "query": "SELECT sum(bevölkerung) , regierungsform FROM land GROUP BY regierungsform HAVING avg(lebenserwartung) > 72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "regierungsform",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "regierungsform",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ">",
            "72"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "regierungsform",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "regierungsform",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ">",
            "value"
        ],
        "question": "Welche verschiedenen Regierungsformen gibt es und wie hoch ist die Gesamtbevölkerung jeder Regierungsform, die eine durchschnittliche Lebenserwartung von über 72 Jahren hat?",
        "question_toks": [
            "Welche",
            "verschiedenen",
            "Regierungsformen",
            "gibt",
            "es",
            "und",
            "wie",
            "hoch",
            "ist",
            "die",
            "Gesamtbevölkerung",
            "jeder",
            "Regierungsform",
            ",",
            "die",
            "eine",
            "durchschnittliche",
            "Lebenserwartung",
            "von",
            "über",
            "72",
            "Jahren",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            8,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "query": "SELECT sum(bevölkerung) , avg(lebenserwartung) , kontinent FROM land GROUP BY kontinent HAVING avg(lebenserwartung) < 72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ",",
            "kontinent",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "kontinent",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "<",
            "72"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ",",
            "kontinent",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "kontinent",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "<",
            "value"
        ],
        "question": "Finde die durchschnittliche Lebenserwartung und die Gesamtbevölkerung für jeden Kontinent, auf dem die durchschnittliche Lebenserwartung kürzer als 72 Jahre ist?",
        "question_toks": [
            "Finde",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "und",
            "die",
            "Gesamtbevölkerung",
            "für",
            "jeden",
            "Kontinent",
            ",",
            "auf",
            "dem",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "kürzer",
            "als",
            "72",
            "Jahre",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            5,
                            8,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "query": "SELECT sum(bevölkerung) , avg(lebenserwartung) , kontinent FROM land GROUP BY kontinent HAVING avg(lebenserwartung) < 72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ",",
            "kontinent",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "kontinent",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "<",
            "72"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            ",",
            "kontinent",
            "FROM",
            "land",
            "GROUP",
            "BY",
            "kontinent",
            "HAVING",
            "avg",
            "(",
            "lebenserwartung",
            ")",
            "<",
            "value"
        ],
        "question": "Welche Kontinente haben eine durchschnittliche Lebenserwartung von weniger als 72 Jahren und wie hoch sind die Gesamtbevölkerung und die durchschnittliche Lebenserwartung?",
        "question_toks": [
            "Welche",
            "Kontinente",
            "haben",
            "eine",
            "durchschnittliche",
            "Lebenserwartung",
            "von",
            "weniger",
            "als",
            "72",
            "Jahren",
            "und",
            "wie",
            "hoch",
            "sind",
            "die",
            "Gesamtbevölkerung",
            "und",
            "die",
            "durchschnittliche",
            "Lebenserwartung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            5,
                            8,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names and areas of countries with the top 5 largest area?",
        "query": "SELECT name , fläche FROM land ORDER BY fläche DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "fläche",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "fläche",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Namen und Flächen der Länder mit den Top \"5\" der größten Fläche?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Flächen",
            "der",
            "Länder",
            "mit",
            "den",
            "Top",
            "``",
            "5",
            "''",
            "der",
            "größten",
            "Fläche",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 5,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the names and surface areas of the 5 largest countries.",
        "query": "SELECT name , fläche FROM land ORDER BY fläche DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "fläche",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "fläche",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "fläche",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Namen und Flächen der \"5\" größten Länder an.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "und",
            "Flächen",
            "der",
            "``",
            "5",
            "''",
            "größten",
            "Länder",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 5,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are names of countries with the top 3 largest population?",
        "query": "SELECT name FROM land ORDER BY bevölkerung DESC LIMIT 3",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "DESC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lauten die Namen der Länder mit den \"3\" größten Bevölkerungszahlen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Länder",
            "mit",
            "den",
            "``",
            "3",
            "''",
            "größten",
            "Bevölkerungszahlen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the names of the 3 most populated countries.",
        "query": "SELECT name FROM land ORDER BY bevölkerung DESC LIMIT 3",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "DESC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Namen der \"3\" bevölkerungsreichsten Länder zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "``",
            "3",
            "''",
            "bevölkerungsreichsten",
            "Länder",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of the nations with the 3 lowest populations?",
        "query": "SELECT name FROM land ORDER BY bevölkerung ASC LIMIT 3",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "ASC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißen die Länder mit den \"3\" niedrigsten Bevölkerungszahlen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Länder",
            "mit",
            "den",
            "``",
            "3",
            "''",
            "niedrigsten",
            "Bevölkerungszahlen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the names of the 3 countries with the fewest people.",
        "query": "SELECT name FROM land ORDER BY bevölkerung ASC LIMIT 3",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "ASC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "ORDER",
            "BY",
            "bevölkerung",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Namen der \"3\" Länder mit den wenigsten Menschen an.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "``",
            "3",
            "''",
            "Länder",
            "mit",
            "den",
            "wenigsten",
            "Menschen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "how many countries are in Asia?",
        "query": "SELECT count(*) FROM land WHERE kontinent = \"Asia\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "wie viele Länder gibt es in \"Asia\"?",
        "question_toks": [
            "wie",
            "viele",
            "Länder",
            "gibt",
            "es",
            "in",
            "``",
            "Asia",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Count the number of countries in Asia.",
        "query": "SELECT count(*) FROM land WHERE kontinent = \"Asia\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Länder in \"Asia\".",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Länder",
            "in",
            "``",
            "Asia",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "query": "SELECT name FROM land WHERE kontinent = \"Europe\" AND bevölkerung = \"80000\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''",
            "AND",
            "bevölkerung",
            "=",
            "``",
            "80000",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            "=",
            "value"
        ],
        "question": "Wie heißen die Länder, die auf dem \"Europe\" Kontinent liegen und eine Bevölkerung von \"80000\" haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Länder",
            ",",
            "die",
            "auf",
            "dem",
            "``",
            "Europe",
            "''",
            "Kontinent",
            "liegen",
            "und",
            "eine",
            "Bevölkerung",
            "von",
            "``",
            "80000",
            "''",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"80000\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "query": "SELECT name FROM land WHERE kontinent = \"Europe\" AND bevölkerung = \"80000\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "``",
            "Europe",
            "''",
            "AND",
            "bevölkerung",
            "=",
            "``",
            "80000",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "land",
            "WHERE",
            "kontinent",
            "=",
            "value",
            "AND",
            "bevölkerung",
            "=",
            "value"
        ],
        "question": "Nenne die Namen der Länder, die in \"Europe\" liegen und eine Einwohnerzahl von \"80000\" haben.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Länder",
            ",",
            "die",
            "in",
            "``",
            "Europe",
            "''",
            "liegen",
            "und",
            "eine",
            "Einwohnerzahl",
            "von",
            "``",
            "80000",
            "''",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"80000\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
        "query": "select sum(bevölkerung) , avg(fläche) from land where kontinent = \"north america\" and fläche > 3000",
        "query_toks": [
            "select",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "fläche",
            ")",
            "from",
            "land",
            "where",
            "kontinent",
            "=",
            "``",
            "north",
            "america",
            "''",
            "and",
            "fläche",
            ">",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "fläche",
            ")",
            "from",
            "land",
            "where",
            "kontinent",
            "=",
            "value",
            "and",
            "fläche",
            ">",
            "value"
        ],
        "question": "Wie hoch ist die Gesamtbevölkerung und die durchschnittliche Fläche der Länder auf dem nordamerikanischen Kontinent, deren Fläche größer als 3000 ist?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Gesamtbevölkerung",
            "und",
            "die",
            "durchschnittliche",
            "Fläche",
            "der",
            "Länder",
            "auf",
            "dem",
            "nordamerikanischen",
            "Kontinent",
            ",",
            "deren",
            "Fläche",
            "größer",
            "als",
            "3000",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"north america\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
        "query": "select sum(bevölkerung) , avg(fläche) from land where kontinent = \"north america\" and fläche > 3000",
        "query_toks": [
            "select",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "fläche",
            ")",
            "from",
            "land",
            "where",
            "kontinent",
            "=",
            "``",
            "north",
            "america",
            "''",
            "and",
            "fläche",
            ">",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "bevölkerung",
            ")",
            ",",
            "avg",
            "(",
            "fläche",
            ")",
            "from",
            "land",
            "where",
            "kontinent",
            "=",
            "value",
            "and",
            "fläche",
            ">",
            "value"
        ],
        "question": "Gib die Gesamtbevölkerung und die durchschnittliche Fläche der Länder Nordamerikas an, die eine Fläche von mehr als 3000 haben.",
        "question_toks": [
            "Gib",
            "die",
            "Gesamtbevölkerung",
            "und",
            "die",
            "durchschnittliche",
            "Fläche",
            "der",
            "Länder",
            "Nordamerikas",
            "an",
            ",",
            "die",
            "eine",
            "Fläche",
            "von",
            "mehr",
            "als",
            "3000",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"north america\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the cities whose population is between 160000 and 900000?",
        "query": "SELECT name FROM stadt WHERE bevölkerung BETWEEN 160000 AND 900000",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadt",
            "WHERE",
            "bevölkerung",
            "BETWEEN",
            "160000",
            "AND",
            "900000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "stadt",
            "WHERE",
            "bevölkerung",
            "BETWEEN",
            "value",
            "AND",
            "value"
        ],
        "question": "Wie heißen die Städte, deren Einwohnerzahl zwischen 160000 und 900000 liegt?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Städte",
            ",",
            "deren",
            "Einwohnerzahl",
            "zwischen",
            "160000",
            "und",
            "900000",
            "liegt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    160000.0,
                    900000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the names of cities that have a population between 160000 and 900000 .",
        "query": "select name from stadt where bevölkerung between 160000 and 900000",
        "query_toks": [
            "select",
            "name",
            "from",
            "stadt",
            "where",
            "bevölkerung",
            "between",
            "160000",
            "and",
            "900000"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadt",
            "where",
            "bevölkerung",
            "between",
            "value",
            "and",
            "value"
        ],
        "question": "Gib die Namen der Städte zurück, die eine Einwohnerzahl zwischen 160000 und 900000 haben.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "Städte",
            "zurück",
            ",",
            "die",
            "eine",
            "Einwohnerzahl",
            "zwischen",
            "160000",
            "und",
            "900000",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    160000.0,
                    900000.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Which language is spoken by the largest number of countries?",
        "query": "SELECT sprache FROM landessprache GROUP BY sprache ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "sprache",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sprache",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Sprache wird in der größten Anzahl von Ländern gesprochen?",
        "question_toks": [
            "Welche",
            "Sprache",
            "wird",
            "in",
            "der",
            "größten",
            "Anzahl",
            "von",
            "Ländern",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Give the language that is spoken in the most countries.",
        "query": "SELECT sprache FROM landessprache GROUP BY sprache ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "sprache",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "sprache",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "sprache",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Sprache an, die in den meisten Ländern gesprochen wird.",
        "question_toks": [
            "Gib",
            "die",
            "Sprache",
            "an",
            ",",
            "die",
            "in",
            "den",
            "meisten",
            "Ländern",
            "gesprochen",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the language spoken by the largest percentage of people in each country?",
        "query": "SELECT sprache , ländercode , max(prozent) FROM landessprache GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": "SELECT sprache , ländercode , max(prozent) FROM landessprache GROUP BY ländercode",
        "question": "Welche Sprache wird in jedem Land von den meisten Menschen gesprochen?",
        "question_toks": [
            "Welche",
            "Sprache",
            "wird",
            "in",
            "jedem",
            "Land",
            "von",
            "den",
            "meisten",
            "Menschen",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "query": "SELECT sprache , ländercode , max(prozent) FROM landessprache GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "sprache",
            ",",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": "SELECT sprache , ländercode , max(prozent) FROM landessprache GROUP BY ländercode",
        "question": "Wie lauten die Ländercodes der verschiedenen Länder und welche Sprachen werden von den meisten Menschen in den einzelnen Ländern gesprochen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Ländercodes",
            "der",
            "verschiedenen",
            "Länder",
            "und",
            "welche",
            "Sprachen",
            "werden",
            "von",
            "den",
            "meisten",
            "Menschen",
            "in",
            "den",
            "einzelnen",
            "Ländern",
            "gesprochen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "query": "SELECT count(*) , max(prozent) FROM landessprache WHERE sprache = \"Spanish\" GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "question": "Wie viele Länder gibt es insgesamt, in denen \"Spanish\" von dem größten Prozentsatz der Bevölkerung gesprochen wird?",
        "question_toks": [
            "Wie",
            "viele",
            "Länder",
            "gibt",
            "es",
            "insgesamt",
            ",",
            "in",
            "denen",
            "``",
            "Spanish",
            "''",
            "von",
            "dem",
            "größten",
            "Prozentsatz",
            "der",
            "Bevölkerung",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "query": "SELECT count(*) , max(prozent) FROM landessprache WHERE sprache = \"Spanish\" GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "question": "Zähle die Anzahl der Länder, in denen \"Spanish\" die vorherrschende Sprache ist.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Länder",
            ",",
            "in",
            "denen",
            "``",
            "Spanish",
            "''",
            "die",
            "vorherrschende",
            "Sprache",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "query": "SELECT ländercode , max(prozent) FROM landessprache WHERE sprache = \"Spanish\" GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "question": "Wie lauten die Codes der Länder, in denen \"Spanish\" von den meisten Menschen gesprochen wird?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Codes",
            "der",
            "Länder",
            ",",
            "in",
            "denen",
            "``",
            "Spanish",
            "''",
            "von",
            "den",
            "meisten",
            "Menschen",
            "gesprochen",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "match": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "query": "SELECT ländercode , max(prozent) FROM landessprache WHERE sprache = \"Spanish\" GROUP BY ländercode",
        "query_toks": [
            "SELECT",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "query_toks_no_value": [
            "SELECT",
            "ländercode",
            ",",
            "max",
            "(",
            "prozent",
            ")",
            "FROM",
            "landessprache",
            "WHERE",
            "sprache",
            "=",
            "value",
            "GROUP",
            "BY",
            "ländercode"
        ],
        "question": "Gib die Codes der Länder zurück, in denen \"Spanish\" die am häufigsten gesprochene Sprache ist.",
        "question_toks": [
            "Gib",
            "die",
            "Codes",
            "der",
            "Länder",
            "zurück",
            ",",
            "in",
            "denen",
            "``",
            "Spanish",
            "''",
            "die",
            "am",
            "häufigsten",
            "gesprochene",
            "Sprache",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "How many conductors are there?",
        "query": "SELECT count(*) FROM leiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "leiter"
        ],
        "query_toks_no_value": "SELECT count(*) FROM leiter",
        "question": "Wie viele Dirigenten gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Dirigenten",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Count the number of conductors.",
        "query": "SELECT count(*) FROM leiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "leiter"
        ],
        "query_toks_no_value": "SELECT count(*) FROM leiter",
        "question": "Zähle die Anzahl der Leiter.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Leiter",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "List the names of conductors in ascending order of age.",
        "query": "SELECT name FROM leiter ORDER BY alter ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "alter",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM leiter ORDER BY alter ASC",
        "question": "Nenne die Namen der Dirigenten in aufsteigender Reihenfolge ihres Alters.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "ihres",
            "Alters",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors, ordered by age?",
        "query": "SELECT name FROM leiter ORDER BY alter ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "alter",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM leiter ORDER BY alter ASC",
        "question": "Wie lauten die Namen der Dirigenten, geordnet nach Alter?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            ",",
            "geordnet",
            "nach",
            "Alter",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors whose nationalities are not \"USA\"?",
        "query": "SELECT name FROM leiter WHERE nationalität != 'USA'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Dirigenten, deren Nationalität nicht \"\"USA\"\" ist?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            ",",
            "deren",
            "Nationalität",
            "nicht",
            "``",
            "''",
            "USA",
            "''",
            "''",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Return the names of conductors that do not have the nationality \"USA\".",
        "query": "SELECT name FROM leiter WHERE nationalität != 'USA'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "WHERE",
            "nationalität",
            "!",
            "=",
            "value"
        ],
        "question": "Gib die Namen der Dirigenten zurück, die nicht die Nationalität \"\"USA\"\" haben.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            "zurück",
            ",",
            "die",
            "nicht",
            "die",
            "Nationalität",
            "``",
            "''",
            "USA",
            "''",
            "''",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "query": "SELECT plattenfirma FROM orchester ORDER BY gründungsjahr DESC",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "ORDER",
            "BY",
            "gründungsjahr",
            "DESC"
        ],
        "query_toks_no_value": "SELECT plattenfirma FROM orchester ORDER BY gründungsjahr DESC",
        "question": "Wie lauten die Plattenfirmen von Orchestern in absteigender Reihenfolge der Jahre, in denen sie gegründet wurden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Plattenfirmen",
            "von",
            "Orchestern",
            "in",
            "absteigender",
            "Reihenfolge",
            "der",
            "Jahre",
            ",",
            "in",
            "denen",
            "sie",
            "gegründet",
            "wurden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "query": "SELECT plattenfirma FROM orchester ORDER BY gründungsjahr DESC",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "ORDER",
            "BY",
            "gründungsjahr",
            "DESC"
        ],
        "query_toks_no_value": "SELECT plattenfirma FROM orchester ORDER BY gründungsjahr DESC",
        "question": "Gib die Plattenfirmen von Orchestern zurück, absteigend sortiert nach den Jahren, in denen sie gegründet wurden.",
        "question_toks": [
            "Gib",
            "die",
            "Plattenfirmen",
            "von",
            "Orchestern",
            "zurück",
            ",",
            "absteigend",
            "sortiert",
            "nach",
            "den",
            "Jahren",
            ",",
            "in",
            "denen",
            "sie",
            "gegründet",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What is the average attendance of shows?",
        "query": "SELECT avg(anwesenheit) FROM auftritt",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "anwesenheit",
            ")",
            "FROM",
            "auftritt"
        ],
        "query_toks_no_value": "SELECT avg(anwesenheit) FROM auftritt",
        "question": "Wie hoch ist die durchschnittliche Besucherzahl der Veranstaltungen?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "durchschnittliche",
            "Besucherzahl",
            "der",
            "Veranstaltungen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Return the average attendance across all shows.",
        "query": "SELECT avg(anwesenheit) FROM auftritt",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "anwesenheit",
            ")",
            "FROM",
            "auftritt"
        ],
        "query_toks_no_value": "SELECT avg(anwesenheit) FROM auftritt",
        "question": "Gib die durchschnittliche Besucherzahl für alle Veranstaltungen an.",
        "question_toks": [
            "Gib",
            "die",
            "durchschnittliche",
            "Besucherzahl",
            "für",
            "alle",
            "Veranstaltungen",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "query": "SELECT max(aktie) , min(aktie) FROM aufführung WHERE typ != \"Live final\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "aktie",
            ")",
            ",",
            "min",
            "(",
            "aktie",
            ")",
            "FROM",
            "aufführung",
            "WHERE",
            "typ",
            "!",
            "=",
            "``",
            "Live",
            "final",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "max",
            "(",
            "aktie",
            ")",
            ",",
            "min",
            "(",
            "aktie",
            ")",
            "FROM",
            "aufführung",
            "WHERE",
            "typ",
            "!",
            "=",
            "value"
        ],
        "question": "Wie hoch ist der maximale und minimale Anteil an Aufführungen, deren Typ nicht \"\"Live final\"\" ist.",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "maximale",
            "und",
            "minimale",
            "Anteil",
            "an",
            "Aufführungen",
            ",",
            "deren",
            "Typ",
            "nicht",
            "``",
            "''",
            "Live",
            "final",
            "''",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Live final\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
        "query": "SELECT max(aktie) , min(aktie) FROM aufführung WHERE typ != \"Live final\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "aktie",
            ")",
            ",",
            "min",
            "(",
            "aktie",
            ")",
            "FROM",
            "aufführung",
            "WHERE",
            "typ",
            "!",
            "=",
            "``",
            "Live",
            "final",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "max",
            "(",
            "aktie",
            ")",
            ",",
            "min",
            "(",
            "aktie",
            ")",
            "FROM",
            "aufführung",
            "WHERE",
            "typ",
            "!",
            "=",
            "value"
        ],
        "question": "Gib die maximalen und minimalen Anteile für Leistungen zurück, die nicht den Typ \"\"Live final\"\" haben.",
        "question_toks": [
            "Gib",
            "die",
            "maximalen",
            "und",
            "minimalen",
            "Anteile",
            "für",
            "Leistungen",
            "zurück",
            ",",
            "die",
            "nicht",
            "den",
            "Typ",
            "``",
            "''",
            "Live",
            "final",
            "''",
            "''",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Live final\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "How many different nationalities do conductors have?",
        "query": "SELECT count(DISTINCT nationalität) FROM leiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "nationalität",
            ")",
            "FROM",
            "leiter"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT nationalität) FROM leiter",
        "question": "Wie viele verschiedene Nationalitäten gibt es bei Dirigenten?",
        "question_toks": [
            "Wie",
            "viele",
            "verschiedene",
            "Nationalitäten",
            "gibt",
            "es",
            "bei",
            "Dirigenten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Count the number of different nationalities of conductors.",
        "query": "SELECT count(DISTINCT nationalität) FROM leiter",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "nationalität",
            ")",
            "FROM",
            "leiter"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT nationalität) FROM leiter",
        "question": "Zähle die Anzahl der verschiedenen Nationalitäten der Dirigenten.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "verschiedenen",
            "Nationalitäten",
            "der",
            "Dirigenten",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "List names of conductors in descending order of years of work.",
        "query": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC",
        "question": "Nenne die Namen der Dirigenten in absteigender Reihenfolge der Jahre ihrer Tätigkeit.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            "in",
            "absteigender",
            "Reihenfolge",
            "der",
            "Jahre",
            "ihrer",
            "Tätigkeit",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "query": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC"
        ],
        "query_toks_no_value": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC",
        "question": "Wie lauten die Namen der Dirigenten, absteigend sortiert nach der Anzahl der Jahre, die sie gearbeitet haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            ",",
            "absteigend",
            "sortiert",
            "nach",
            "der",
            "Anzahl",
            "der",
            "Jahre",
            ",",
            "die",
            "sie",
            "gearbeitet",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "List the name of the conductor with the most years of work.",
        "query": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Namen des Dirigenten mit den meisten Berufsjahren an.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            "des",
            "Dirigenten",
            "mit",
            "den",
            "meisten",
            "Berufsjahren",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What is the name of the conductor who has worked the greatest number of years?",
        "query": "SELECT name FROM leiter ORDER BY arbeitsjahr DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "leiter",
            "ORDER",
            "BY",
            "arbeitsjahr",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Dirigent, der die meisten Jahre gearbeitet hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Dirigent",
            ",",
            "der",
            "die",
            "meisten",
            "Jahre",
            "gearbeitet",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Show the names of conductors and the orchestras they have conducted.",
        "query": "SELECT T1.name , T2.orchester FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.orchester",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id"
        ],
        "query_toks_no_value": "SELECT T1.name , T2.orchester FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id",
        "question": "Zeige die Namen der Dirigenten und die Orchester, die sie geleitet haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            "und",
            "die",
            "Orchester",
            ",",
            "die",
            "sie",
            "geleitet",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "query": "SELECT T1.name , T2.orchester FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.orchester",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id"
        ],
        "query_toks_no_value": "SELECT T1.name , T2.orchester FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id",
        "question": "Wie lauten die Namen der Dirigenten und die dazugehörigen Orchester, die sie dirigiert haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            "und",
            "die",
            "dazugehörigen",
            "Orchester",
            ",",
            "die",
            "sie",
            "dirigiert",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Show the names of conductors that have conducted more than one orchestras.",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id GROUP BY T2.dirigent_id HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Zeige die Namen der Dirigenten, die mehr als ein Orchester geleitet haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            ",",
            "die",
            "mehr",
            "als",
            "ein",
            "Orchester",
            "geleitet",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors who have conducted at more than one orchestra?",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id GROUP BY T2.dirigent_id HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie heißen die Dirigenten, die bei mehr als einem Orchester dirigiert haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Dirigenten",
            ",",
            "die",
            "bei",
            "mehr",
            "als",
            "einem",
            "Orchester",
            "dirigiert",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Show the name of the conductor that has conducted the most number of orchestras.",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id GROUP BY T2.dirigent_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Zeige den Namen des Dirigenten, der die meisten Orchester geleitet hat.",
        "question_toks": [
            "Zeige",
            "den",
            "Namen",
            "des",
            "Dirigenten",
            ",",
            "der",
            "die",
            "meisten",
            "Orchester",
            "geleitet",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What is the name of the conductor who has conducted the most orchestras?",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id GROUP BY T2.dirigent_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "GROUP",
            "BY",
            "T2.dirigent_id",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name des Dirigenten, der die meisten Orchester geleitet hat?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Dirigenten",
            ",",
            "der",
            "die",
            "meisten",
            "Orchester",
            "geleitet",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id WHERE gründungsjahr > 2008",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "WHERE",
            "gründungsjahr",
            ">",
            "2008"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "WHERE",
            "gründungsjahr",
            ">",
            "value"
        ],
        "question": "Bitte gib den Namen des Dirigenten an, der ein nach 2008 gegründetes Orchester geleitet hat.",
        "question_toks": [
            "Bitte",
            "gib",
            "den",
            "Namen",
            "des",
            "Dirigenten",
            "an",
            ",",
            "der",
            "ein",
            "nach",
            "2008",
            "gegründetes",
            "Orchester",
            "geleitet",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "query": "SELECT T1.name FROM leiter AS T1 JOIN orchester AS T2 ON T1.dirigent_id = T2.dirigent_id WHERE gründungsjahr > 2008",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "WHERE",
            "gründungsjahr",
            ">",
            "2008"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "leiter",
            "AS",
            "T1",
            "JOIN",
            "orchester",
            "AS",
            "T2",
            "ON",
            "T1.dirigent_id",
            "=",
            "T2.dirigent_id",
            "WHERE",
            "gründungsjahr",
            ">",
            "value"
        ],
        "question": "Wie lauten die Namen der Dirigenten, die nach 2008 gegründete Orchester geleitet haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Dirigenten",
            ",",
            "die",
            "nach",
            "2008",
            "gegründete",
            "Orchester",
            "geleitet",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Please show the different record companies and the corresponding number of orchestras.",
        "query": "SELECT plattenfirma , COUNT(*) FROM orchester GROUP BY plattenfirma",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma"
        ],
        "query_toks_no_value": "SELECT plattenfirma , COUNT(*) FROM orchester GROUP BY plattenfirma",
        "question": "Bitte zeige die verschiedenen Plattenfirmen und die entsprechende Anzahl von Orchestern.",
        "question_toks": [
            "Bitte",
            "zeige",
            "die",
            "verschiedenen",
            "Plattenfirmen",
            "und",
            "die",
            "entsprechende",
            "Anzahl",
            "von",
            "Orchestern",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "How many orchestras does each record company manage?",
        "query": "SELECT plattenfirma , COUNT(*) FROM orchester GROUP BY plattenfirma",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma"
        ],
        "query_toks_no_value": "SELECT plattenfirma , COUNT(*) FROM orchester GROUP BY plattenfirma",
        "question": "Wie viele Orchester verwaltet jede Plattenfirma?",
        "question_toks": [
            "Wie",
            "viele",
            "Orchester",
            "verwaltet",
            "jede",
            "Plattenfirma",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Please show the record formats of orchestras in ascending order of count.",
        "query": "SELECT hauptplattenformat FROM orchester GROUP BY hauptplattenformat ORDER BY COUNT(*) ASC",
        "query_toks": [
            "SELECT",
            "hauptplattenformat",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "hauptplattenformat",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC"
        ],
        "query_toks_no_value": "SELECT hauptplattenformat FROM orchester GROUP BY hauptplattenformat ORDER BY COUNT(*) ASC",
        "question": "Bitte zeige die Datensatzformate der Orchester in aufsteigender Reihenfolge der Anzahl.",
        "question_toks": [
            "Bitte",
            "zeige",
            "die",
            "Datensatzformate",
            "der",
            "Orchester",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "der",
            "Anzahl",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the major record formats of orchestras, sorted by their frequency?",
        "query": "SELECT hauptplattenformat FROM orchester GROUP BY hauptplattenformat ORDER BY COUNT(*) ASC",
        "query_toks": [
            "SELECT",
            "hauptplattenformat",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "hauptplattenformat",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC"
        ],
        "query_toks_no_value": "SELECT hauptplattenformat FROM orchester GROUP BY hauptplattenformat ORDER BY COUNT(*) ASC",
        "question": "Was sind die wichtigsten Plattenformate von Orchestern, sortiert nach ihrer Häufigkeit?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "wichtigsten",
            "Plattenformate",
            "von",
            "Orchestern",
            ",",
            "sortiert",
            "nach",
            "ihrer",
            "Häufigkeit",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "List the record company shared by the most number of orchestras.",
        "query": "SELECT plattenfirma FROM orchester GROUP BY plattenfirma ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Nenne die Plattenfirma, die von den meisten Orchestern genutzt wird.",
        "question_toks": [
            "Nenne",
            "die",
            "Plattenfirma",
            ",",
            "die",
            "von",
            "den",
            "meisten",
            "Orchestern",
            "genutzt",
            "wird",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What is the record company used by the greatest number of orchestras?",
        "query": "SELECT plattenfirma FROM orchester GROUP BY plattenfirma ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "GROUP",
            "BY",
            "plattenfirma",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welches ist die Plattenfirma, die von den meisten Orchestern genutzt wird?",
        "question_toks": [
            "Welches",
            "ist",
            "die",
            "Plattenfirma",
            ",",
            "die",
            "von",
            "den",
            "meisten",
            "Orchestern",
            "genutzt",
            "wird",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "List the names of orchestras that have no performance.",
        "query": "SELECT orchester FROM orchester WHERE orchestra_id NOT IN (SELECT orchestra_id FROM aufführung)",
        "query_toks": [
            "SELECT",
            "orchester",
            "FROM",
            "orchester",
            "WHERE",
            "orchestra_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "orchestra_id",
            "FROM",
            "aufführung",
            ")"
        ],
        "query_toks_no_value": "SELECT orchester FROM orchester WHERE orchestra_id NOT IN (SELECT orchestra_id FROM aufführung)",
        "question": "Nenne die Namen von Orchestern, die keine Auftritte haben.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "von",
            "Orchestern",
            ",",
            "die",
            "keine",
            "Auftritte",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the orchestras that do not have any performances?",
        "query": "SELECT orchester FROM orchester WHERE orchestra_id NOT IN (SELECT orchestra_id FROM aufführung)",
        "query_toks": [
            "SELECT",
            "orchester",
            "FROM",
            "orchester",
            "WHERE",
            "orchestra_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "orchestra_id",
            "FROM",
            "aufführung",
            ")"
        ],
        "query_toks_no_value": "SELECT orchester FROM orchester WHERE orchestra_id NOT IN (SELECT orchestra_id FROM aufführung)",
        "question": "Welches sind die Orchester, die keine Aufführungen haben?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "Orchester",
            ",",
            "die",
            "keine",
            "Aufführungen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "query": "SELECT plattenfirma FROM orchester WHERE gründungsjahr < 2003 INTERSECT SELECT plattenfirma FROM orchester WHERE gründungsjahr > 2003",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            "<",
            "2003",
            "INTERSECT",
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            ">",
            "2003"
        ],
        "query_toks_no_value": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            ">",
            "value"
        ],
        "question": "Zeige die gemeinsamen Plattenfirmen von Orchestern, die vor 2003 und nach 2003 gegründet wurden.",
        "question_toks": [
            "Zeige",
            "die",
            "gemeinsamen",
            "Plattenfirmen",
            "von",
            "Orchestern",
            ",",
            "die",
            "vor",
            "2003",
            "und",
            "nach",
            "2003",
            "gegründet",
            "wurden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2003.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "query": "SELECT plattenfirma FROM orchester WHERE gründungsjahr < 2003 INTERSECT SELECT plattenfirma FROM orchester WHERE gründungsjahr > 2003",
        "query_toks": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            "<",
            "2003",
            "INTERSECT",
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            ">",
            "2003"
        ],
        "query_toks_no_value": [
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "plattenfirma",
            "FROM",
            "orchester",
            "WHERE",
            "gründungsjahr",
            ">",
            "value"
        ],
        "question": "Welche Plattenfirmen werden sowohl von Orchestern, die vor 2003 gegründet wurden, als auch von solchen, die nach 2003 gegründet wurden, genutzt?",
        "question_toks": [
            "Welche",
            "Plattenfirmen",
            "werden",
            "sowohl",
            "von",
            "Orchestern",
            ",",
            "die",
            "vor",
            "2003",
            "gegründet",
            "wurden",
            ",",
            "als",
            "auch",
            "von",
            "solchen",
            ",",
            "die",
            "nach",
            "2003",
            "gegründet",
            "wurden",
            ",",
            "genutzt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2003.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "query": "SELECT COUNT(*) FROM orchester WHERE hauptplattenformat = \"CD\" OR hauptplattenformat = \"DVD\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "WHERE",
            "hauptplattenformat",
            "=",
            "``",
            "CD",
            "''",
            "OR",
            "hauptplattenformat",
            "=",
            "``",
            "DVD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "WHERE",
            "hauptplattenformat",
            "=",
            "value",
            "OR",
            "hauptplattenformat",
            "=",
            "value"
        ],
        "question": "Finde die Anzahl der Orchester, deren Plattenformat \"\"CD\"\" oder \"\"DVD\"\" ist.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Orchester",
            ",",
            "deren",
            "Plattenformat",
            "``",
            "''",
            "CD",
            "''",
            "''",
            "oder",
            "``",
            "''",
            "DVD",
            "''",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"CD\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"DVD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Count the number of orchestras that have CD or DVD as their record format.",
        "query": "SELECT COUNT(*) FROM orchester WHERE hauptplattenformat = \"CD\" OR hauptplattenformat = \"DVD\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "WHERE",
            "hauptplattenformat",
            "=",
            "``",
            "CD",
            "''",
            "OR",
            "hauptplattenformat",
            "=",
            "``",
            "DVD",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchester",
            "WHERE",
            "hauptplattenformat",
            "=",
            "value",
            "OR",
            "hauptplattenformat",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Orchester, die \"CD\" oder \"DVD\" als Aufnahmeformat haben.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Orchester",
            ",",
            "die",
            "``",
            "CD",
            "''",
            "oder",
            "``",
            "DVD",
            "''",
            "als",
            "Aufnahmeformat",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"CD\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"DVD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "Show the years in which orchestras that have given more than one performance are founded.",
        "query": "SELECT gründungsjahr FROM orchester AS T1 JOIN aufführung AS T2 ON T1.orchestra_id = T2.orchestra_id GROUP BY T2.orchestra_id HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "gründungsjahr",
            "FROM",
            "orchester",
            "AS",
            "T1",
            "JOIN",
            "aufführung",
            "AS",
            "T2",
            "ON",
            "T1.orchestra_id",
            "=",
            "T2.orchestra_id",
            "GROUP",
            "BY",
            "T2.orchestra_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gründungsjahr",
            "FROM",
            "orchester",
            "AS",
            "T1",
            "JOIN",
            "aufführung",
            "AS",
            "T2",
            "ON",
            "T1.orchestra_id",
            "=",
            "T2.orchestra_id",
            "GROUP",
            "BY",
            "T2.orchestra_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Zeige die Jahre an, in denen Orchester gegründet wurden, die mehr als eine Aufführung gegeben haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Jahre",
            "an",
            ",",
            "in",
            "denen",
            "Orchester",
            "gegründet",
            "wurden",
            ",",
            "die",
            "mehr",
            "als",
            "eine",
            "Aufführung",
            "gegeben",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "match": "What are years of founding for orchestras that have had more than a single performance?",
        "query": "SELECT gründungsjahr FROM orchester AS T1 JOIN aufführung AS T2 ON T1.orchestra_id = T2.orchestra_id GROUP BY T2.orchestra_id HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "gründungsjahr",
            "FROM",
            "orchester",
            "AS",
            "T1",
            "JOIN",
            "aufführung",
            "AS",
            "T2",
            "ON",
            "T1.orchestra_id",
            "=",
            "T2.orchestra_id",
            "GROUP",
            "BY",
            "T2.orchestra_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "gründungsjahr",
            "FROM",
            "orchester",
            "AS",
            "T1",
            "JOIN",
            "aufführung",
            "AS",
            "T2",
            "ON",
            "T1.orchestra_id",
            "=",
            "T2.orchestra_id",
            "GROUP",
            "BY",
            "T2.orchestra_id",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Was sind die Gründungsjahre von Orchestern, die mehr als eine Aufführung hatten?",
        "question_toks": [
            "Was",
            "sind",
            "die",
            "Gründungsjahre",
            "von",
            "Orchestern",
            ",",
            "die",
            "mehr",
            "als",
            "eine",
            "Aufführung",
            "hatten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many high schoolers are there?",
        "query": "SELECT count(*) FROM oberschüler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM oberschüler",
        "question": "Wie viele Gymnasiasten gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Gymnasiasten",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Count the number of high schoolers.",
        "query": "SELECT count(*) FROM oberschüler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT count(*) FROM oberschüler",
        "question": "Zähle die Anzahl der Highschool-Schüler.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Highschool-Schüler",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names and grades of each high schooler.",
        "query": "SELECT name , grade FROM oberschüler",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "grade",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT name , grade FROM oberschüler",
        "question": "Zeige die Namen und Noten der einzelnen Schüler.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "und",
            "Noten",
            "der",
            "einzelnen",
            "Schüler",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names and grades for each high schooler?",
        "query": "SELECT name , grade FROM oberschüler",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "grade",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT name , grade FROM oberschüler",
        "question": "Wie lauten die Namen und Noten der einzelnen Schüler/innen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "und",
            "Noten",
            "der",
            "einzelnen",
            "Schüler/innen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show all the grades of the high schoolers.",
        "query": "SELECT grade FROM oberschüler",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT grade FROM oberschüler",
        "question": "Zeige alle Noten der Highschool-Schüler.",
        "question_toks": [
            "Zeige",
            "alle",
            "Noten",
            "der",
            "Highschool-Schüler",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is the grade of each high schooler?",
        "query": "SELECT grade FROM oberschüler",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler"
        ],
        "query_toks_no_value": "SELECT grade FROM oberschüler",
        "question": "Wie hoch ist die Klassenstufe jedes Schülers?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "die",
            "Klassenstufe",
            "jedes",
            "Schülers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What grade is Kyle in?",
        "query": "SELECT grade FROM oberschüler WHERE name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "In welcher Klasse ist \"Kyle\"?",
        "question_toks": [
            "In",
            "welcher",
            "Klasse",
            "ist",
            "``",
            "Kyle",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Return the grade for the high schooler named Kyle.",
        "query": "SELECT grade FROM oberschüler WHERE name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Gib die Note für den Highschool-Schüler namens \"Kyle\" zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Note",
            "für",
            "den",
            "Highschool-Schüler",
            "namens",
            "``",
            "Kyle",
            "''",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of all high schoolers in grade 10.",
        "query": "SELECT name FROM oberschüler WHERE grade = 10",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "value"
        ],
        "question": "Zeige die Namen aller Schülerinnen und Schüler der 10.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "aller",
            "Schülerinnen",
            "und",
            "Schüler",
            "der",
            "10",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of all high schoolers in grade 10?",
        "query": "SELECT name FROM oberschüler WHERE grade = 10",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "value"
        ],
        "question": "Wie heißen alle Schüler der Klasse 10?",
        "question_toks": [
            "Wie",
            "heißen",
            "alle",
            "Schüler",
            "der",
            "Klasse",
            "10",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the ID of the high schooler named Kyle.",
        "query": "SELECT id FROM oberschüler WHERE name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Zeige den Ausweis des Highschool-Schülers namens \"Kyle\".",
        "question_toks": [
            "Zeige",
            "den",
            "Ausweis",
            "des",
            "Highschool-Schülers",
            "namens",
            "``",
            "Kyle",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is Kyle's id?",
        "query": "SELECT id FROM oberschüler WHERE name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "WHERE",
            "name",
            "=",
            "value"
        ],
        "question": "Was ist \"Kyle\" Identität?",
        "question_toks": [
            "Was",
            "ist",
            "``",
            "Kyle",
            "''",
            "Identität",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many high schoolers are there in grade 9 or 10?",
        "query": "SELECT count(*) FROM oberschüler WHERE grade = 9 OR grade = 10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "9",
            "OR",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "value",
            "OR",
            "grade",
            "=",
            "value"
        ],
        "question": "Wie viele Gymnasiasten gibt es in der 9. oder 10. Klasse?",
        "question_toks": [
            "Wie",
            "viele",
            "Gymnasiasten",
            "gibt",
            "es",
            "in",
            "der",
            "9.",
            "oder",
            "10",
            ".",
            "Klasse",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Count the number of high schoolers in grades 9 or 10.",
        "query": "SELECT count(*) FROM oberschüler WHERE grade = 9 OR grade = 10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "9",
            "OR",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "grade",
            "=",
            "value",
            "OR",
            "grade",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Gymnasiasten in den Klassen 9 oder 10.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Gymnasiasten",
            "in",
            "den",
            "Klassen",
            "9",
            "oder",
            "10",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the number of high schoolers for each grade.",
        "query": "SELECT grade , count(*) FROM oberschüler GROUP BY grade",
        "query_toks": [
            "SELECT",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade"
        ],
        "query_toks_no_value": "SELECT grade , count(*) FROM oberschüler GROUP BY grade",
        "question": "Zeige die Anzahl der Schüler in den einzelnen Klassenstufen.",
        "question_toks": [
            "Zeige",
            "die",
            "Anzahl",
            "der",
            "Schüler",
            "in",
            "den",
            "einzelnen",
            "Klassenstufen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many high schoolers are in each grade?",
        "query": "SELECT grade , count(*) FROM oberschüler GROUP BY grade",
        "query_toks": [
            "SELECT",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade"
        ],
        "query_toks_no_value": "SELECT grade , count(*) FROM oberschüler GROUP BY grade",
        "question": "Wie viele Schüler gibt es in jeder Klasse?",
        "question_toks": [
            "Wie",
            "viele",
            "Schüler",
            "gibt",
            "es",
            "in",
            "jeder",
            "Klasse",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Which grade has the most high schoolers?",
        "query": "SELECT grade FROM oberschüler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Klasse hat die meisten Oberstufenschüler?",
        "question_toks": [
            "Welche",
            "Klasse",
            "hat",
            "die",
            "meisten",
            "Oberstufenschüler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Return the grade that has the greatest number of high schoolers.",
        "query": "SELECT grade FROM oberschüler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Klasse zurück, in der die meisten Schüler sind.",
        "question_toks": [
            "Gib",
            "die",
            "Klasse",
            "zurück",
            ",",
            "in",
            "der",
            "die",
            "meisten",
            "Schüler",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show me all grades that have at least 4 students.",
        "query": "SELECT grade FROM oberschüler GROUP BY grade HAVING count(*) >= 4",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige mir alle Klassen, die mindestens 4 Schüler haben.",
        "question_toks": [
            "Zeige",
            "mir",
            "alle",
            "Klassen",
            ",",
            "die",
            "mindestens",
            "4",
            "Schüler",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Which grades have 4 or more high schoolers?",
        "query": "SELECT grade FROM oberschüler GROUP BY grade HAVING count(*) >= 4",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "SELECT",
            "grade",
            "FROM",
            "oberschüler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "In welchen Klassen gibt es 4 oder mehr High School Schüler?",
        "question_toks": [
            "In",
            "welchen",
            "Klassen",
            "gibt",
            "es",
            "4",
            "oder",
            "mehr",
            "High",
            "School",
            "Schüler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the student IDs and numbers of friends corresponding to each.",
        "query": "SELECT schüler_id , count(*) FROM freund GROUP BY schüler_id",
        "query_toks": [
            "SELECT",
            "schüler_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "GROUP",
            "BY",
            "schüler_id"
        ],
        "query_toks_no_value": "SELECT schüler_id , count(*) FROM freund GROUP BY schüler_id",
        "question": "Zeige die Schüler-IDs und die Nummern der Freunde, die ihnen zugeordnet sind.",
        "question_toks": [
            "Zeige",
            "die",
            "Schüler-IDs",
            "und",
            "die",
            "Nummern",
            "der",
            "Freunde",
            ",",
            "die",
            "ihnen",
            "zugeordnet",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many friends does each student have?",
        "query": "SELECT schüler_id , count(*) FROM freund GROUP BY schüler_id",
        "query_toks": [
            "SELECT",
            "schüler_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "GROUP",
            "BY",
            "schüler_id"
        ],
        "query_toks_no_value": "SELECT schüler_id , count(*) FROM freund GROUP BY schüler_id",
        "question": "Wie viele Freunde hat jeder Schüler?",
        "question_toks": [
            "Wie",
            "viele",
            "Freunde",
            "hat",
            "jeder",
            "Schüler",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of high school students and their corresponding number of friends.",
        "query": "SELECT T2.name , count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "question": "Zeige die Namen der Schüler/innen und die entsprechende Anzahl von Freunden.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Schüler/innen",
            "und",
            "die",
            "entsprechende",
            "Anzahl",
            "von",
            "Freunden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of the high schoolers and how many friends does each have?",
        "query": "SELECT T2.name , count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "question": "Wie heißen die Highschool-Schüler und wie viele Freunde hat jeder von ihnen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Highschool-Schüler",
            "und",
            "wie",
            "viele",
            "Freunde",
            "hat",
            "jeder",
            "von",
            "ihnen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is the name of the high schooler who has the greatest number of friends?",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Highschool-Schüler, der die meisten Freunde hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Highschool-Schüler",
            ",",
            "der",
            "die",
            "meisten",
            "Freunde",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Return the name of the high school student with the most friends.",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib den Namen des Schülers/der Schülerin mit den meisten Freunden an.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            "des",
            "Schülers/der",
            "Schülerin",
            "mit",
            "den",
            "meisten",
            "Freunden",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of high schoolers who have at least 3 friends.",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id HAVING count(*) >= 3",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige die Namen der Schüler/innen, die mindestens 3 Freunde haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "mindestens",
            "3",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of high schoolers who have 3 or more friends?",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id HAVING count(*) >= 3",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie heißen die Highschool-Schüler, die 3 oder mehr Freunde haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Highschool-Schüler",
            ",",
            "die",
            "3",
            "oder",
            "mehr",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of all of the high schooler Kyle's friends.",
        "query": "SELECT T3.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id JOIN oberschüler AS T3 ON T1.freund_id = T3.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "JOIN",
            "oberschüler",
            "AS",
            "T3",
            "ON",
            "T1.freund_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T3.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "JOIN",
            "oberschüler",
            "AS",
            "T3",
            "ON",
            "T1.freund_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Zeige die Namen aller Freunde des High Schoolers \"Kyle\".",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "aller",
            "Freunde",
            "des",
            "High",
            "Schoolers",
            "``",
            "Kyle",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Return the names of friends of the high school student Kyle.",
        "query": "SELECT T3.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id JOIN oberschüler AS T3 ON T1.freund_id = T3.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "JOIN",
            "oberschüler",
            "AS",
            "T3",
            "ON",
            "T1.freund_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T3.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "JOIN",
            "oberschüler",
            "AS",
            "T3",
            "ON",
            "T1.freund_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Gib die Namen von Freunden des Highschool-Schülers \"Kyle\" zurück.",
        "question_toks": [
            "Gib",
            "die",
            "Namen",
            "von",
            "Freunden",
            "des",
            "Highschool-Schülers",
            "``",
            "Kyle",
            "''",
            "zurück",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many friends does the high school student Kyle have?",
        "query": "SELECT count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Wie viele Freunde hat der Highschool-Schüler \"Kyle\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Freunde",
            "hat",
            "der",
            "Highschool-Schüler",
            "``",
            "Kyle",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Count the number of friends Kyle has.",
        "query": "SELECT count(*) FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Zähle die Anzahl der Freunde, die \"Kyle\" hat.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Freunde",
            ",",
            "die",
            "``",
            "Kyle",
            "''",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show ids of all students who do not have any friends.",
        "query": "SELECT id FROM oberschüler EXCEPT SELECT schüler_id FROM freund",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "EXCEPT",
            "SELECT",
            "schüler_id",
            "FROM",
            "freund"
        ],
        "query_toks_no_value": "SELECT id FROM oberschüler EXCEPT SELECT schüler_id FROM freund",
        "question": "Zeige die IDs aller Schüler, die keine Freunde haben.",
        "question_toks": [
            "Zeige",
            "die",
            "IDs",
            "aller",
            "Schüler",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the ids of high school students who do not have friends?",
        "query": "SELECT id FROM oberschüler EXCEPT SELECT schüler_id FROM freund",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "oberschüler",
            "EXCEPT",
            "SELECT",
            "schüler_id",
            "FROM",
            "freund"
        ],
        "query_toks_no_value": "SELECT id FROM oberschüler EXCEPT SELECT schüler_id FROM freund",
        "question": "Wie hoch ist der Anteil der Schüler, die keine Freunde haben?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Anteil",
            "der",
            "Schüler",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "network_1",
        "match": "Show names of all high school students who do not have any friends.",
        "query": "SELECT name FROM oberschüler EXCEPT SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": "SELECT name FROM oberschüler EXCEPT SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id",
        "question": "Zeige die Namen aller Schülerinnen und Schüler, die keine Freunde haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "aller",
            "Schülerinnen",
            "und",
            "Schüler",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of students who have no friends?",
        "query": "SELECT name FROM oberschüler EXCEPT SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "oberschüler",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": "SELECT name FROM oberschüler EXCEPT SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id",
        "question": "Wie lauten die Namen der Schüler, die keine Freunde haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Schüler",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "query": "SELECT schüler_id FROM freund INTERSECT SELECT liked_id FROM likes",
        "query_toks": [
            "SELECT",
            "schüler_id",
            "FROM",
            "freund",
            "INTERSECT",
            "SELECT",
            "liked_id",
            "FROM",
            "likes"
        ],
        "query_toks_no_value": "SELECT schüler_id FROM freund INTERSECT SELECT liked_id FROM likes",
        "question": "Zeige die IDs von Highschool-Schülern, die Freunde haben und auch von jemand anderem gemocht werden.",
        "question_toks": [
            "Zeige",
            "die",
            "IDs",
            "von",
            "Highschool-Schülern",
            ",",
            "die",
            "Freunde",
            "haben",
            "und",
            "auch",
            "von",
            "jemand",
            "anderem",
            "gemocht",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the ids of students who both have friends and are liked?",
        "query": "SELECT schüler_id FROM freund INTERSECT SELECT liked_id FROM likes",
        "query_toks": [
            "SELECT",
            "schüler_id",
            "FROM",
            "freund",
            "INTERSECT",
            "SELECT",
            "liked_id",
            "FROM",
            "likes"
        ],
        "query_toks_no_value": "SELECT schüler_id FROM freund INTERSECT SELECT liked_id FROM likes",
        "question": "Wie viele Schüler/innen haben Freunde und werden gemocht?",
        "question_toks": [
            "Wie",
            "viele",
            "Schüler/innen",
            "haben",
            "Freunde",
            "und",
            "werden",
            "gemocht",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show name of all students who have some friends and also are liked by someone else.",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id INTERSECT SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.liked_id = T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "INTERSECT",
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.liked_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id INTERSECT SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.liked_id = T2.id",
        "question": "Zeige die Namen aller Schüler/innen, die einige Freunde haben und von jemandem gemocht werden.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "aller",
            "Schüler/innen",
            ",",
            "die",
            "einige",
            "Freunde",
            "haben",
            "und",
            "von",
            "jemandem",
            "gemocht",
            "werden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of high schoolers who both have friends and are liked?",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id INTERSECT SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.liked_id = T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "INTERSECT",
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.liked_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id INTERSECT SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.liked_id = T2.id",
        "question": "Wie lauten die Namen von Highschool-Schülern, die sowohl Freunde haben als auch gemocht werden?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "von",
            "Highschool-Schülern",
            ",",
            "die",
            "sowohl",
            "Freunde",
            "haben",
            "als",
            "auch",
            "gemocht",
            "werden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Count the number of likes for each student id.",
        "query": "SELECT schüler_id , count(*) FROM likes GROUP BY schüler_id",
        "query_toks": [
            "SELECT",
            "schüler_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "GROUP",
            "BY",
            "schüler_id"
        ],
        "query_toks_no_value": "SELECT schüler_id , count(*) FROM likes GROUP BY schüler_id",
        "question": "Zähle die Anzahl der Likes für jede Schüler-ID.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Likes",
            "für",
            "jede",
            "Schüler-ID",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many likes correspond to each student id?",
        "query": "SELECT schüler_id , count(*) FROM likes GROUP BY schüler_id",
        "query_toks": [
            "SELECT",
            "schüler_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "GROUP",
            "BY",
            "schüler_id"
        ],
        "query_toks_no_value": "SELECT schüler_id , count(*) FROM likes GROUP BY schüler_id",
        "question": "Wie viele Likes gibt es pro Schüler-ID?",
        "question_toks": [
            "Wie",
            "viele",
            "Likes",
            "gibt",
            "es",
            "pro",
            "Schüler-ID",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "query": "SELECT T2.name , count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "question": "Zeige die Namen der Highschool-Schüler, die Likes haben, und die Anzahl der Likes für jeden.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Highschool-Schüler",
            ",",
            "die",
            "Likes",
            "haben",
            ",",
            "und",
            "die",
            "Anzahl",
            "der",
            "Likes",
            "für",
            "jeden",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "query": "SELECT T2.name , count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id"
        ],
        "query_toks_no_value": "SELECT T2.name , count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id",
        "question": "Wie lauten die Namen der Highschool-Schüler, die Likes haben, und wie viele Likes hat jeder von ihnen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Highschool-Schüler",
            ",",
            "die",
            "Likes",
            "haben",
            ",",
            "und",
            "wie",
            "viele",
            "Likes",
            "hat",
            "jeder",
            "von",
            "ihnen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is the name of the high schooler who has the greatest number of likes?",
        "query": "SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Highschool-Schüler mit den meisten Likes?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Highschool-Schüler",
            "mit",
            "den",
            "meisten",
            "Likes",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Give the name of the student with the most likes.",
        "query": "SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Nenne den Namen des Schülers mit den meisten Likes.",
        "question_toks": [
            "Nenne",
            "den",
            "Namen",
            "des",
            "Schülers",
            "mit",
            "den",
            "meisten",
            "Likes",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of students who have at least 2 likes.",
        "query": "SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige die Namen der Schüler, die mindestens 2 Likes haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Schüler",
            ",",
            "die",
            "mindestens",
            "2",
            "Likes",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of students who have 2 or more likes?",
        "query": "SELECT T2.name FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id GROUP BY T1.schüler_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie heißen die Schüler, die 2 oder mehr Likes haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Schüler",
            ",",
            "die",
            "2",
            "oder",
            "mehr",
            "Likes",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.grade > 5 GROUP BY T1.schüler_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "5",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "value",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Zeige die Namen der Schüler, die eine höhere Note als 5 haben und mindestens 2 Freunde haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Schüler",
            ",",
            "die",
            "eine",
            "höhere",
            "Note",
            "als",
            "5",
            "haben",
            "und",
            "mindestens",
            "2",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "query": "SELECT T2.name FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.grade > 5 GROUP BY T1.schüler_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "5",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.name",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "value",
            "GROUP",
            "BY",
            "T1.schüler_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie heißen die Highschool-Schüler, die eine Note über 5 haben und 2 oder mehr Freunde haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Highschool-Schüler",
            ",",
            "die",
            "eine",
            "Note",
            "über",
            "5",
            "haben",
            "und",
            "2",
            "oder",
            "mehr",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "How many likes does Kyle have?",
        "query": "SELECT count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Wie viele Likes hat \"Kyle\"?",
        "question_toks": [
            "Wie",
            "viele",
            "Likes",
            "hat",
            "``",
            "Kyle",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Return the number of likes that the high schooler named Kyle has.",
        "query": "SELECT count(*) FROM likes AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id WHERE T2.name = \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "likes",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "value"
        ],
        "question": "Gib die Anzahl der Likes zurück, die der Highschool-Schüler namens \"Kyle\" hat.",
        "question_toks": [
            "Gib",
            "die",
            "Anzahl",
            "der",
            "Likes",
            "zurück",
            ",",
            "die",
            "der",
            "Highschool-Schüler",
            "namens",
            "``",
            "Kyle",
            "''",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Find the average grade of all students who have some friends.",
        "query": "SELECT avg(grade) FROM oberschüler WHERE id IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "grade",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "id",
            "IN",
            "(",
            "SELECT",
            "T1.schüler_id",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": "SELECT avg(grade) FROM oberschüler WHERE id IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "question": "Finde den Notendurchschnitt aller Schüler/innen, die einige Freunde haben.",
        "question_toks": [
            "Finde",
            "den",
            "Notendurchschnitt",
            "aller",
            "Schüler/innen",
            ",",
            "die",
            "einige",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is the average grade of students who have friends?",
        "query": "SELECT avg(grade) FROM oberschüler WHERE id IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "grade",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "id",
            "IN",
            "(",
            "SELECT",
            "T1.schüler_id",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": "SELECT avg(grade) FROM oberschüler WHERE id IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "question": "Wie hoch ist der Notendurchschnitt der Schüler, die Freunde haben?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Notendurchschnitt",
            "der",
            "Schüler",
            ",",
            "die",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "Find the minimum grade of students who have no friends.",
        "query": "SELECT min(grade) FROM oberschüler WHERE id NOT IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "grade",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.schüler_id",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": "SELECT min(grade) FROM oberschüler WHERE id NOT IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "question": "Finde die Mindestnote der Schüler, die keine Freunde haben.",
        "question_toks": [
            "Finde",
            "die",
            "Mindestnote",
            "der",
            "Schüler",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "match": "What is the lowest grade of students who do not have any friends?",
        "query": "SELECT min(grade) FROM oberschüler WHERE id NOT IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "grade",
            ")",
            "FROM",
            "oberschüler",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.schüler_id",
            "FROM",
            "freund",
            "AS",
            "T1",
            "JOIN",
            "oberschüler",
            "AS",
            "T2",
            "ON",
            "T1.schüler_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": "SELECT min(grade) FROM oberschüler WHERE id NOT IN (SELECT T1.schüler_id FROM freund AS T1 JOIN oberschüler AS T2 ON T1.schüler_id = T2.id)",
        "question": "Wie hoch ist der Anteil der Schüler/innen, die keine Freunde haben?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Anteil",
            "der",
            "Schüler/innen",
            ",",
            "die",
            "keine",
            "Freunde",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which states have both owners and professionals living there?",
        "query": "SELECT bundesland FROM besitzer INTERSECT SELECT bundesland FROM berufe",
        "query_toks": [
            "SELECT",
            "bundesland",
            "FROM",
            "besitzer",
            "INTERSECT",
            "SELECT",
            "bundesland",
            "FROM",
            "berufe"
        ],
        "query_toks_no_value": "SELECT bundesland FROM besitzer INTERSECT SELECT bundesland FROM berufe",
        "question": "In welchen Staaten leben sowohl Eigentümer als auch Fachkräfte?",
        "question_toks": [
            "In",
            "welchen",
            "Staaten",
            "leben",
            "sowohl",
            "Eigentümer",
            "als",
            "auch",
            "Fachkräfte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the states where both owners and professionals live.",
        "query": "SELECT bundesland FROM besitzer INTERSECT SELECT bundesland FROM berufe",
        "query_toks": [
            "SELECT",
            "bundesland",
            "FROM",
            "besitzer",
            "INTERSECT",
            "SELECT",
            "bundesland",
            "FROM",
            "berufe"
        ],
        "query_toks_no_value": "SELECT bundesland FROM besitzer INTERSECT SELECT bundesland FROM berufe",
        "question": "Finde die Staaten, in denen sowohl Eigentümer als auch Fachkräfte leben.",
        "question_toks": [
            "Finde",
            "die",
            "Staaten",
            ",",
            "in",
            "denen",
            "sowohl",
            "Eigentümer",
            "als",
            "auch",
            "Fachkräfte",
            "leben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the average age of the dogs who have gone through any treatments?",
        "query": "SELECT avg(alter) FROM hunde WHERE hund_id IN ( SELECT hund_id FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            "WHERE",
            "hund_id",
            "IN",
            "(",
            "SELECT",
            "hund_id",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT avg(alter) FROM hunde WHERE hund_id IN ( SELECT hund_id FROM behandlungen )",
        "question": "Wie hoch ist das Durchschnittsalter der Hunde, die eine Behandlung durchlaufen haben?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnittsalter",
            "der",
            "Hunde",
            ",",
            "die",
            "eine",
            "Behandlung",
            "durchlaufen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the average age of the dogs who went through treatments.",
        "query": "SELECT avg(alter) FROM hunde WHERE hund_id IN ( SELECT hund_id FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            "WHERE",
            "hund_id",
            "IN",
            "(",
            "SELECT",
            "hund_id",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT avg(alter) FROM hunde WHERE hund_id IN ( SELECT hund_id FROM behandlungen )",
        "question": "Finde das Durchschnittsalter der Hunde, die eine Behandlung durchlaufen haben.",
        "question_toks": [
            "Finde",
            "das",
            "Durchschnittsalter",
            "der",
            "Hunde",
            ",",
            "die",
            "eine",
            "Behandlung",
            "durchlaufen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "query": "SELECT berufs_id , nachname , handynummer FROM berufe WHERE bundesland = 'Indiana' UNION SELECT T1.berufs_id , T1.nachname , T1.handynummer FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) > 2",
        "query_toks": [
            "SELECT",
            "berufs_id",
            ",",
            "nachname",
            ",",
            "handynummer",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "'Indiana",
            "'",
            "UNION",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.nachname",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "berufs_id",
            ",",
            "nachname",
            ",",
            "handynummer",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "value",
            "UNION",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.nachname",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Welche Fachkräfte leben im Bundesstaat \"Indiana\" oder haben mehr als 2 Behandlungen durchgeführt? Gib seinen/ihren Namen, Nachnamen und seine/ihre Handynummer an.",
        "question_toks": [
            "Welche",
            "Fachkräfte",
            "leben",
            "im",
            "Bundesstaat",
            "``",
            "Indiana",
            "''",
            "oder",
            "haben",
            "mehr",
            "als",
            "2",
            "Behandlungen",
            "durchgeführt",
            "?",
            "Gib",
            "seinen/ihren",
            "Namen",
            ",",
            "Nachnamen",
            "und",
            "seine/ihre",
            "Handynummer",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Indiana\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    27,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    30,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        20,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "query": "SELECT berufs_id , nachname , handynummer FROM berufe WHERE bundesland = 'Indiana' UNION SELECT T1.berufs_id , T1.nachname , T1.handynummer FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) > 2",
        "query_toks": [
            "SELECT",
            "berufs_id",
            ",",
            "nachname",
            ",",
            "handynummer",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "'Indiana",
            "'",
            "UNION",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.nachname",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "berufs_id",
            ",",
            "nachname",
            ",",
            "handynummer",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "value",
            "UNION",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.nachname",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Finde die ID, den Nachnamen und die Handynummer der Fachkräfte, die im Bundesstaat \"Indiana\" leben oder mehr als zwei Behandlungen durchgeführt haben.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            ",",
            "den",
            "Nachnamen",
            "und",
            "die",
            "Handynummer",
            "der",
            "Fachkräfte",
            ",",
            "die",
            "im",
            "Bundesstaat",
            "``",
            "Indiana",
            "''",
            "leben",
            "oder",
            "mehr",
            "als",
            "zwei",
            "Behandlungen",
            "durchgeführt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Indiana\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    27,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    30,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        20,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
        "query": "select name from hunde where hund_id not in ( select hund_id from behandlungen group by hund_id having sum(kosten_der_behandlung) > 1000 )",
        "query_toks": [
            "select",
            "name",
            "from",
            "hunde",
            "where",
            "hund_id",
            "not",
            "in",
            "(",
            "select",
            "hund_id",
            "from",
            "behandlungen",
            "group",
            "by",
            "hund_id",
            "having",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            ">",
            "1000",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "hunde",
            "where",
            "hund_id",
            "not",
            "in",
            "(",
            "select",
            "hund_id",
            "from",
            "behandlungen",
            "group",
            "by",
            "hund_id",
            "having",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            ">",
            "value",
            ")"
        ],
        "question": "Welche Hunde haben ihren Besitzer nicht mehr als 1000 für die Behandlung gekostet? Nenne die Hundenamen.",
        "question_toks": [
            "Welche",
            "Hunde",
            "haben",
            "ihren",
            "Besitzer",
            "nicht",
            "mehr",
            "als",
            "1000",
            "für",
            "die",
            "Behandlung",
            "gekostet",
            "?",
            "Nenne",
            "die",
            "Hundenamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                45,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        4,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                1000.0,
                                null
                            ]
                        ],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
        "query": "select name from hunde where hund_id not in ( select hund_id from behandlungen group by hund_id having sum(kosten_der_behandlung) > 1000 )",
        "query_toks": [
            "select",
            "name",
            "from",
            "hunde",
            "where",
            "hund_id",
            "not",
            "in",
            "(",
            "select",
            "hund_id",
            "from",
            "behandlungen",
            "group",
            "by",
            "hund_id",
            "having",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            ">",
            "1000",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "hunde",
            "where",
            "hund_id",
            "not",
            "in",
            "(",
            "select",
            "hund_id",
            "from",
            "behandlungen",
            "group",
            "by",
            "hund_id",
            "having",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            ">",
            "value",
            ")"
        ],
        "question": "Wie lauten die Namen der Hunde, für die der Besitzer nicht mehr als 1000 für die Behandlung ausgegeben hat?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Hunde",
            ",",
            "für",
            "die",
            "der",
            "Besitzer",
            "nicht",
            "mehr",
            "als",
            "1000",
            "für",
            "die",
            "Behandlung",
            "ausgegeben",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                45,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        4,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                1000.0,
                                null
                            ]
                        ],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which first names are used for professionals or owners but are not used as dog names?",
        "query": "SELECT vorname FROM berufe UNION SELECT vorname FROM besitzer EXCEPT SELECT name FROM hunde",
        "query_toks": [
            "SELECT",
            "vorname",
            "FROM",
            "berufe",
            "UNION",
            "SELECT",
            "vorname",
            "FROM",
            "besitzer",
            "EXCEPT",
            "SELECT",
            "name",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT vorname FROM berufe UNION SELECT vorname FROM besitzer EXCEPT SELECT name FROM hunde",
        "question": "Welche Vornamen werden für Berufstätige oder Besitzer verwendet, aber nicht als Hundenamen?",
        "question_toks": [
            "Welche",
            "Vornamen",
            "werden",
            "für",
            "Berufstätige",
            "oder",
            "Besitzer",
            "verwendet",
            ",",
            "aber",
            "nicht",
            "als",
            "Hundenamen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": {
                    "from": {
                        "table_units": [
                            [
                                "table_unit",
                                6
                            ]
                        ],
                        "conds": []
                    },
                    "select": [
                        false,
                        [
                            [
                                0,
                                [
                                    0,
                                    [
                                        0,
                                        36,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ]
                    ],
                    "where": [],
                    "groupBy": [],
                    "having": [],
                    "orderBy": [],
                    "limit": null,
                    "intersect": null,
                    "union": null,
                    "except": null
                }
            },
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the first names that are used for professionals or owners but are not used as dog names.",
        "query": "SELECT vorname FROM berufe UNION SELECT vorname FROM besitzer EXCEPT SELECT name FROM hunde",
        "query_toks": [
            "SELECT",
            "vorname",
            "FROM",
            "berufe",
            "UNION",
            "SELECT",
            "vorname",
            "FROM",
            "besitzer",
            "EXCEPT",
            "SELECT",
            "name",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT vorname FROM berufe UNION SELECT vorname FROM besitzer EXCEPT SELECT name FROM hunde",
        "question": "Finde die Vornamen, die für Berufstätige oder Besitzer verwendet werden, aber nicht als Hundenamen dienen.",
        "question_toks": [
            "Finde",
            "die",
            "Vornamen",
            ",",
            "die",
            "für",
            "Berufstätige",
            "oder",
            "Besitzer",
            "verwendet",
            "werden",
            ",",
            "aber",
            "nicht",
            "als",
            "Hundenamen",
            "dienen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": {
                    "from": {
                        "table_units": [
                            [
                                "table_unit",
                                6
                            ]
                        ],
                        "conds": []
                    },
                    "select": [
                        false,
                        [
                            [
                                0,
                                [
                                    0,
                                    [
                                        0,
                                        36,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ]
                    ],
                    "where": [],
                    "groupBy": [],
                    "having": [],
                    "orderBy": [],
                    "limit": null,
                    "intersect": null,
                    "union": null,
                    "except": null
                }
            },
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "query": "SELECT berufs_id , rollencode , e_mail_adresse FROM berufe EXCEPT SELECT T1.berufs_id , T1.rollencode , T1.e_mail_adresse FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id",
        "query_toks": [
            "SELECT",
            "berufs_id",
            ",",
            "rollencode",
            ",",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "EXCEPT",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.e_mail_adresse",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id"
        ],
        "query_toks_no_value": "SELECT berufs_id , rollencode , e_mail_adresse FROM berufe EXCEPT SELECT T1.berufs_id , T1.rollencode , T1.e_mail_adresse FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id",
        "question": "Welche Fachkraft hat keine Behandlung an Hunden durchgeführt? Gib den Namen, die Funktion und die E-Mail-Adresse der Fachkraft an.",
        "question_toks": [
            "Welche",
            "Fachkraft",
            "hat",
            "keine",
            "Behandlung",
            "an",
            "Hunden",
            "durchgeführt",
            "?",
            "Gib",
            "den",
            "Namen",
            ",",
            "die",
            "Funktion",
            "und",
            "die",
            "E-Mail-Adresse",
            "der",
            "Fachkraft",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    28,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "query": "SELECT berufs_id , rollencode , e_mail_adresse FROM berufe EXCEPT SELECT T1.berufs_id , T1.rollencode , T1.e_mail_adresse FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id",
        "query_toks": [
            "SELECT",
            "berufs_id",
            ",",
            "rollencode",
            ",",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "EXCEPT",
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.e_mail_adresse",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id"
        ],
        "query_toks_no_value": "SELECT berufs_id , rollencode , e_mail_adresse FROM berufe EXCEPT SELECT T1.berufs_id , T1.rollencode , T1.e_mail_adresse FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id",
        "question": "Gib mir den Namen, die Funktion und die E-Mail-Adresse der Fachleute, die keine Behandlung an Hunden durchgeführt haben.",
        "question_toks": [
            "Gib",
            "mir",
            "den",
            "Namen",
            ",",
            "die",
            "Funktion",
            "und",
            "die",
            "E-Mail-Adresse",
            "der",
            "Fachleute",
            ",",
            "die",
            "keine",
            "Behandlung",
            "an",
            "Hunden",
            "durchgeführt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    20,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    21,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    28,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which owner owns the most dogs? List the owner id, first name and last name.",
        "query": "SELECT T1.besitzer_id , T2.vorname , T2.nachname FROM hunde AS T1 JOIN besitzer AS T2 ON T1.besitzer_id = T2.besitzer_id GROUP BY T1.besitzer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T2.vorname",
            ",",
            "T2.nachname",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "besitzer",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T2.vorname",
            ",",
            "T2.nachname",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "besitzer",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Besitzer besitzt die meisten Hunde? Gib die Kennung, den Vornamen und den Nachnamen des Besitzers an.",
        "question_toks": [
            "Welcher",
            "Besitzer",
            "besitzt",
            "die",
            "meisten",
            "Hunde",
            "?",
            "Gib",
            "die",
            "Kennung",
            ",",
            "den",
            "Vornamen",
            "und",
            "den",
            "Nachnamen",
            "des",
            "Besitzers",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Return the owner id, first name and last name of the owner who has the most dogs.",
        "query": "SELECT T1.besitzer_id , T2.vorname , T2.nachname FROM hunde AS T1 JOIN besitzer AS T2 ON T1.besitzer_id = T2.besitzer_id GROUP BY T1.besitzer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T2.vorname",
            ",",
            "T2.nachname",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "besitzer",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T2.vorname",
            ",",
            "T2.nachname",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "besitzer",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Gib die Besitzer-ID, den Vornamen und den Nachnamen des Besitzers zurück, der die meisten Hunde hat.",
        "question_toks": [
            "Gib",
            "die",
            "Besitzer-ID",
            ",",
            "den",
            "Vornamen",
            "und",
            "den",
            "Nachnamen",
            "des",
            "Besitzers",
            "zurück",
            ",",
            "der",
            "die",
            "meisten",
            "Hunde",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "query": "SELECT T1.berufs_id , T1.rollencode , T1.vorname FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.vorname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.vorname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Welche Fachkräfte haben mindestens zwei Behandlungen durchgeführt? Gib den Namen, die Funktion und den Vornamen der Fachkraft an.",
        "question_toks": [
            "Welche",
            "Fachkräfte",
            "haben",
            "mindestens",
            "zwei",
            "Behandlungen",
            "durchgeführt",
            "?",
            "Gib",
            "den",
            "Namen",
            ",",
            "die",
            "Funktion",
            "und",
            "den",
            "Vornamen",
            "der",
            "Fachkraft",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "query": "SELECT T1.berufs_id , T1.rollencode , T1.vorname FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.vorname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.rollencode",
            ",",
            "T1.vorname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Wie lauten der Name, die Funktion und der Vorname der Fachkräfte, die zwei oder mehr Behandlungen durchgeführt haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Name",
            ",",
            "die",
            "Funktion",
            "und",
            "der",
            "Vorname",
            "der",
            "Fachkräfte",
            ",",
            "die",
            "zwei",
            "oder",
            "mehr",
            "Behandlungen",
            "durchgeführt",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the name of the breed with the most dogs?",
        "query": "SELECT T1.rassenname FROM rassen AS T1 JOIN hunde AS T2 ON T1.rasse_code = T2.rasse_code GROUP BY T1.rassenname ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.rassenname",
            "FROM",
            "rassen",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.rasse_code",
            "=",
            "T2.rasse_code",
            "GROUP",
            "BY",
            "T1.rassenname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.rassenname",
            "FROM",
            "rassen",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.rasse_code",
            "=",
            "T2.rasse_code",
            "GROUP",
            "BY",
            "T1.rassenname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet der Name der Rasse mit den meisten Hunden?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "der",
            "Rasse",
            "mit",
            "den",
            "meisten",
            "Hunden",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which breed do the most dogs have? Give me the breed name.",
        "query": "SELECT T1.rassenname FROM rassen AS T1 JOIN hunde AS T2 ON T1.rasse_code = T2.rasse_code GROUP BY T1.rassenname ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.rassenname",
            "FROM",
            "rassen",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.rasse_code",
            "=",
            "T2.rasse_code",
            "GROUP",
            "BY",
            "T1.rassenname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.rassenname",
            "FROM",
            "rassen",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.rasse_code",
            "=",
            "T2.rasse_code",
            "GROUP",
            "BY",
            "T1.rassenname",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welche Rasse haben die meisten Hunde? Gib mir den Namen der Rasse.",
        "question_toks": [
            "Welche",
            "Rasse",
            "haben",
            "die",
            "meisten",
            "Hunde",
            "?",
            "Gib",
            "mir",
            "den",
            "Namen",
            "der",
            "Rasse",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "query": "SELECT T1.besitzer_id , T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id JOIN behandlungen AS T3 ON T2.hund_id = T3.hund_id GROUP BY T1.besitzer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Besitzer hat die meisten Behandlungen für seine Hunde bezahlt? Gib die Nummer und den Nachnamen des Besitzers an.",
        "question_toks": [
            "Welcher",
            "Besitzer",
            "hat",
            "die",
            "meisten",
            "Behandlungen",
            "für",
            "seine",
            "Hunde",
            "bezahlt",
            "?",
            "Gib",
            "die",
            "Nummer",
            "und",
            "den",
            "Nachnamen",
            "des",
            "Besitzers",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "query": "SELECT T1.besitzer_id , T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id JOIN behandlungen AS T3 ON T2.hund_id = T3.hund_id GROUP BY T1.besitzer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Nenne mir die Besitzerkennung und den Nachnamen des Besitzers, der am meisten für die Behandlung seiner Hunde ausgegeben hat.",
        "question_toks": [
            "Nenne",
            "mir",
            "die",
            "Besitzerkennung",
            "und",
            "den",
            "Nachnamen",
            "des",
            "Besitzers",
            ",",
            "der",
            "am",
            "meisten",
            "für",
            "die",
            "Behandlung",
            "seiner",
            "Hunde",
            "ausgegeben",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the description of the treatment type that costs the least money in total?",
        "query": "SELECT T1.beschreibung_der_behandlungsart FROM behandlungsarten AS T1 JOIN behandlungen AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code GROUP BY T1.behandlungsart_code ORDER BY sum(kosten_der_behandlung) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungsarten",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code",
            "GROUP",
            "BY",
            "T1.behandlungsart_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungsarten",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code",
            "GROUP",
            "BY",
            "T1.behandlungsart_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Wie lautet die Beschreibung der Behandlungsart, die insgesamt am wenigsten Geld kostet?",
        "question_toks": [
            "Wie",
            "lautet",
            "die",
            "Beschreibung",
            "der",
            "Behandlungsart",
            ",",
            "die",
            "insgesamt",
            "am",
            "wenigsten",
            "Geld",
            "kostet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Give me the description of the treatment type whose total cost is the lowest.",
        "query": "SELECT T1.beschreibung_der_behandlungsart FROM behandlungsarten AS T1 JOIN behandlungen AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code GROUP BY T1.behandlungsart_code ORDER BY sum(kosten_der_behandlung) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungsarten",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code",
            "GROUP",
            "BY",
            "T1.behandlungsart_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungsarten",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code",
            "GROUP",
            "BY",
            "T1.behandlungsart_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "kosten_der_behandlung",
            ")",
            "ASC",
            "LIMIT",
            "value"
        ],
        "question": "Gib mir die Beschreibung der Behandlungsart, deren Gesamtkosten am niedrigsten sind.",
        "question_toks": [
            "Gib",
            "mir",
            "die",
            "Beschreibung",
            "der",
            "Behandlungsart",
            ",",
            "deren",
            "Gesamtkosten",
            "am",
            "niedrigsten",
            "sind",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "query": "SELECT T1.besitzer_id , T1.postleitzahl FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id JOIN behandlungen AS T3 ON T2.hund_id = T3.hund_id GROUP BY T1.besitzer_id ORDER BY sum(T3.kosten_der_behandlung) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.postleitzahl",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.kosten_der_behandlung",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.postleitzahl",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.kosten_der_behandlung",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Welcher Besitzer hat insgesamt den höchsten Betrag für seine Hunde bezahlt? Zeige die ID und die Postleitzahl des Besitzers.",
        "question_toks": [
            "Welcher",
            "Besitzer",
            "hat",
            "insgesamt",
            "den",
            "höchsten",
            "Betrag",
            "für",
            "seine",
            "Hunde",
            "bezahlt",
            "?",
            "Zeige",
            "die",
            "ID",
            "und",
            "die",
            "Postleitzahl",
            "des",
            "Besitzers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "query": "SELECT T1.besitzer_id , T1.postleitzahl FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id JOIN behandlungen AS T3 ON T2.hund_id = T3.hund_id GROUP BY T1.besitzer_id ORDER BY sum(T3.kosten_der_behandlung) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.postleitzahl",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.kosten_der_behandlung",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.besitzer_id",
            ",",
            "T1.postleitzahl",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "JOIN",
            "behandlungen",
            "AS",
            "T3",
            "ON",
            "T2.hund_id",
            "=",
            "T3.hund_id",
            "GROUP",
            "BY",
            "T1.besitzer_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.kosten_der_behandlung",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Finde die Besitzernummer und die Postleitzahl des Besitzers, der insgesamt das meiste Geld für seine Hunde ausgegeben hat.",
        "question_toks": [
            "Finde",
            "die",
            "Besitzernummer",
            "und",
            "die",
            "Postleitzahl",
            "des",
            "Besitzers",
            ",",
            "der",
            "insgesamt",
            "das",
            "meiste",
            "Geld",
            "für",
            "seine",
            "Hunde",
            "ausgegeben",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "query": "SELECT T1.berufs_id , T1.handynummer FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Welche Fachleute haben mindestens zwei Arten von Behandlungen durchgeführt? Gib den Namen und die Handynummer der Fachkraft an.",
        "question_toks": [
            "Welche",
            "Fachleute",
            "haben",
            "mindestens",
            "zwei",
            "Arten",
            "von",
            "Behandlungen",
            "durchgeführt",
            "?",
            "Gib",
            "den",
            "Namen",
            "und",
            "die",
            "Handynummer",
            "der",
            "Fachkraft",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "query": "SELECT T1.berufs_id , T1.handynummer FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id GROUP BY T1.berufs_id HAVING count(*) >= 2",
        "query_toks": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.berufs_id",
            ",",
            "T1.handynummer",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "GROUP",
            "BY",
            "T1.berufs_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Finde die ID und die Handynummer der Fachkräfte, die zwei oder mehr Arten von Behandlungen durchführen.",
        "question_toks": [
            "Finde",
            "die",
            "ID",
            "und",
            "die",
            "Handynummer",
            "der",
            "Fachkräfte",
            ",",
            "die",
            "zwei",
            "oder",
            "mehr",
            "Arten",
            "von",
            "Behandlungen",
            "durchführen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "query": "SELECT DISTINCT T1.vorname , T1.nachname FROM berufe AS T1 JOIN behandlungen AS T2 WHERE kosten_der_behandlung < ( SELECT avg(kosten_der_behandlung) FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.nachname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "WHERE",
            "kosten_der_behandlung",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "kosten_der_behandlung",
            ")",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T1.nachname FROM berufe AS T1 JOIN behandlungen AS T2 WHERE kosten_der_behandlung < ( SELECT avg(kosten_der_behandlung) FROM behandlungen )",
        "question": "Wie lauten die Vor- und Nachnamen der Fachleute, die eine Behandlung mit unterdurchschnittlichen Kosten durchgeführt haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vor-",
            "und",
            "Nachnamen",
            "der",
            "Fachleute",
            ",",
            "die",
            "eine",
            "Behandlung",
            "mit",
            "unterdurchschnittlichen",
            "Kosten",
            "durchgeführt",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "query": "SELECT DISTINCT T1.vorname , T1.nachname FROM berufe AS T1 JOIN behandlungen AS T2 WHERE kosten_der_behandlung < ( SELECT avg(kosten_der_behandlung) FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T1.nachname",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "WHERE",
            "kosten_der_behandlung",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "kosten_der_behandlung",
            ")",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T1.nachname FROM berufe AS T1 JOIN behandlungen AS T2 WHERE kosten_der_behandlung < ( SELECT avg(kosten_der_behandlung) FROM behandlungen )",
        "question": "Welche Fachleute haben eine Behandlung durchgeführt, die weniger kostet als der Durchschnitt? Nenne mir ihre Vor- und Nachnamen.",
        "question_toks": [
            "Welche",
            "Fachleute",
            "haben",
            "eine",
            "Behandlung",
            "durchgeführt",
            ",",
            "die",
            "weniger",
            "kostet",
            "als",
            "der",
            "Durchschnitt",
            "?",
            "Nenne",
            "mir",
            "ihre",
            "Vor-",
            "und",
            "Nachnamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the date of each treatment, together with the first name of the professional who operated it.",
        "query": "SELECT T1.datum_der_behandlung , T2.vorname FROM behandlungen AS T1 JOIN berufe AS T2 ON T1.berufs_id = T2.berufs_id",
        "query_toks": [
            "SELECT",
            "T1.datum_der_behandlung",
            ",",
            "T2.vorname",
            "FROM",
            "behandlungen",
            "AS",
            "T1",
            "JOIN",
            "berufe",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id"
        ],
        "query_toks_no_value": "SELECT T1.datum_der_behandlung , T2.vorname FROM behandlungen AS T1 JOIN berufe AS T2 ON T1.berufs_id = T2.berufs_id",
        "question": "Gib für jede Behandlung das Datum und den Vornamen der Fachkraft an, die sie durchgeführt hat.",
        "question_toks": [
            "Gib",
            "für",
            "jede",
            "Behandlung",
            "das",
            "Datum",
            "und",
            "den",
            "Vornamen",
            "der",
            "Fachkraft",
            "an",
            ",",
            "die",
            "sie",
            "durchgeführt",
            "hat",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the date and the operating professional's first name of each treatment?",
        "query": "SELECT T1.datum_der_behandlung , T2.vorname FROM behandlungen AS T1 JOIN berufe AS T2 ON T1.berufs_id = T2.berufs_id",
        "query_toks": [
            "SELECT",
            "T1.datum_der_behandlung",
            ",",
            "T2.vorname",
            "FROM",
            "behandlungen",
            "AS",
            "T1",
            "JOIN",
            "berufe",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id"
        ],
        "query_toks_no_value": "SELECT T1.datum_der_behandlung , T2.vorname FROM behandlungen AS T1 JOIN berufe AS T2 ON T1.berufs_id = T2.berufs_id",
        "question": "Wie lauten das Datum und der Vorname der behandelnden Fachkraft bei jeder Behandlung?",
        "question_toks": [
            "Wie",
            "lauten",
            "das",
            "Datum",
            "und",
            "der",
            "Vorname",
            "der",
            "behandelnden",
            "Fachkraft",
            "bei",
            "jeder",
            "Behandlung",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the cost of each treatment and the corresponding treatment type description.",
        "query": "SELECT T1.kosten_der_behandlung , T2.beschreibung_der_behandlungsart FROM behandlungen AS T1 JOIN behandlungsarten AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code",
        "query_toks": [
            "SELECT",
            "T1.kosten_der_behandlung",
            ",",
            "T2.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungen",
            "AS",
            "T1",
            "JOIN",
            "behandlungsarten",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code"
        ],
        "query_toks_no_value": "SELECT T1.kosten_der_behandlung , T2.beschreibung_der_behandlungsart FROM behandlungen AS T1 JOIN behandlungsarten AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code",
        "question": "Gib die Kosten für jede Behandlung und die entsprechende Beschreibung der Behandlungsart an.",
        "question_toks": [
            "Gib",
            "die",
            "Kosten",
            "für",
            "jede",
            "Behandlung",
            "und",
            "die",
            "entsprechende",
            "Beschreibung",
            "der",
            "Behandlungsart",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the cost and treatment type description of each treatment?",
        "query": "SELECT T1.kosten_der_behandlung , T2.beschreibung_der_behandlungsart FROM behandlungen AS T1 JOIN behandlungsarten AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code",
        "query_toks": [
            "SELECT",
            "T1.kosten_der_behandlung",
            ",",
            "T2.beschreibung_der_behandlungsart",
            "FROM",
            "behandlungen",
            "AS",
            "T1",
            "JOIN",
            "behandlungsarten",
            "AS",
            "T2",
            "ON",
            "T1.behandlungsart_code",
            "=",
            "T2.behandlungsart_code"
        ],
        "query_toks_no_value": "SELECT T1.kosten_der_behandlung , T2.beschreibung_der_behandlungsart FROM behandlungen AS T1 JOIN behandlungsarten AS T2 ON T1.behandlungsart_code = T2.behandlungsart_code",
        "question": "Wie hoch sind die Kosten und die Beschreibung der einzelnen Behandlungsarten?",
        "question_toks": [
            "Wie",
            "hoch",
            "sind",
            "die",
            "Kosten",
            "und",
            "die",
            "Beschreibung",
            "der",
            "einzelnen",
            "Behandlungsarten",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List each owner's first name, last name, and the size of his for her dog.",
        "query": "SELECT T1.vorname , T1.nachname , T2.größencode FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.nachname",
            ",",
            "T2.größencode",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id"
        ],
        "query_toks_no_value": "SELECT T1.vorname , T1.nachname , T2.größencode FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "question": "Gib den Vornamen, den Nachnamen und die Größe des Hundes jedes Besitzers an.",
        "question_toks": [
            "Gib",
            "den",
            "Vornamen",
            ",",
            "den",
            "Nachnamen",
            "und",
            "die",
            "Größe",
            "des",
            "Hundes",
            "jedes",
            "Besitzers",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are each owner's first name, last name, and the size of their dog?",
        "query": "SELECT T1.vorname , T1.nachname , T2.größencode FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T1.nachname",
            ",",
            "T2.größencode",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id"
        ],
        "query_toks_no_value": "SELECT T1.vorname , T1.nachname , T2.größencode FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "question": "Wie lautet der Vor- und Nachname des Besitzers und wie groß ist sein Hund?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Vor-",
            "und",
            "Nachname",
            "des",
            "Besitzers",
            "und",
            "wie",
            "groß",
            "ist",
            "sein",
            "Hund",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List pairs of the owner's first name and the dogs's name.",
        "query": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id"
        ],
        "query_toks_no_value": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "question": "Listen Sie Paare aus dem Vornamen des Besitzers und dem Namen des Hundes auf.",
        "question_toks": [
            "Listen",
            "Sie",
            "Paare",
            "aus",
            "dem",
            "Vornamen",
            "des",
            "Besitzers",
            "und",
            "dem",
            "Namen",
            "des",
            "Hundes",
            "auf",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are each owner's first name and their dogs's name?",
        "query": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id"
        ],
        "query_toks_no_value": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id",
        "question": "Wie lauten die Vornamen der einzelnen Besitzer und die Namen ihrer Hunde?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "der",
            "einzelnen",
            "Besitzer",
            "und",
            "die",
            "Namen",
            "ihrer",
            "Hunde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "query": "SELECT T1.name , T2.datum_der_behandlung FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id WHERE T1.rasse_code = ( SELECT rasse_code FROM hunde GROUP BY rasse_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.datum_der_behandlung",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id",
            "WHERE",
            "T1.rasse_code",
            "=",
            "(",
            "SELECT",
            "rasse_code",
            "FROM",
            "hunde",
            "GROUP",
            "BY",
            "rasse_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            ",",
            "T2.datum_der_behandlung",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id",
            "WHERE",
            "T1.rasse_code",
            "=",
            "(",
            "SELECT",
            "rasse_code",
            "FROM",
            "hunde",
            "GROUP",
            "BY",
            "rasse_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value",
            ")"
        ],
        "question": "Nenne die Namen der Hunde der seltensten Rasse und die Daten ihrer Behandlung.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Hunde",
            "der",
            "seltensten",
            "Rasse",
            "und",
            "die",
            "Daten",
            "ihrer",
            "Behandlung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            34,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                34,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "query": "SELECT T1.name , T2.datum_der_behandlung FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id WHERE T1.rasse_code = ( SELECT rasse_code FROM hunde GROUP BY rasse_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.datum_der_behandlung",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id",
            "WHERE",
            "T1.rasse_code",
            "=",
            "(",
            "SELECT",
            "rasse_code",
            "FROM",
            "hunde",
            "GROUP",
            "BY",
            "rasse_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            ",",
            "T2.datum_der_behandlung",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id",
            "WHERE",
            "T1.rasse_code",
            "=",
            "(",
            "SELECT",
            "rasse_code",
            "FROM",
            "hunde",
            "GROUP",
            "BY",
            "rasse_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "value",
            ")"
        ],
        "question": "Welche Hunde gehören zu den seltensten Rassen? Gib ihre Namen und Behandlungsdaten an.",
        "question_toks": [
            "Welche",
            "Hunde",
            "gehören",
            "zu",
            "den",
            "seltensten",
            "Rassen",
            "?",
            "Gib",
            "ihre",
            "Namen",
            "und",
            "Behandlungsdaten",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            34,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                34,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "query": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T1.bundesland = 'Virginia'",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T1.bundesland",
            "=",
            "'Virginia",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T1.bundesland",
            "=",
            "value"
        ],
        "question": "Welche Hunde gehören jemandem, der in \"Virginia\" lebt? Gib den Vornamen des Besitzers und den Namen des Hundes an.",
        "question_toks": [
            "Welche",
            "Hunde",
            "gehören",
            "jemandem",
            ",",
            "der",
            "in",
            "``",
            "Virginia",
            "''",
            "lebt",
            "?",
            "Gib",
            "den",
            "Vornamen",
            "des",
            "Besitzers",
            "und",
            "den",
            "Namen",
            "des",
            "Hundes",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the first names of owners living in Virginia and the names of dogs they own.",
        "query": "SELECT T1.vorname , T2.name FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T1.bundesland = 'Virginia'",
        "query_toks": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T1.bundesland",
            "=",
            "'Virginia",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.vorname",
            ",",
            "T2.name",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T1.bundesland",
            "=",
            "value"
        ],
        "question": "Finde die Vornamen der Besitzer, die in \"Virginia\" leben, und die Namen der Hunde, die sie besitzen.",
        "question_toks": [
            "Finde",
            "die",
            "Vornamen",
            "der",
            "Besitzer",
            ",",
            "die",
            "in",
            "``",
            "Virginia",
            "''",
            "leben",
            ",",
            "und",
            "die",
            "Namen",
            "der",
            "Hunde",
            ",",
            "die",
            "sie",
            "besitzen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "query": "SELECT DISTINCT T1.datum_der_ankunft , T1.abreisedatum FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.datum_der_ankunft",
            ",",
            "T1.abreisedatum",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.datum_der_ankunft , T1.abreisedatum FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id",
        "question": "Welches sind die Ankunfts- und Abreisedaten der Hunde, die eine Behandlung durchlaufen haben?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "Ankunfts-",
            "und",
            "Abreisedaten",
            "der",
            "Hunde",
            ",",
            "die",
            "eine",
            "Behandlung",
            "durchlaufen",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "query": "SELECT DISTINCT T1.datum_der_ankunft , T1.abreisedatum FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.datum_der_ankunft",
            ",",
            "T1.abreisedatum",
            "FROM",
            "hunde",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.hund_id",
            "=",
            "T2.hund_id"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.datum_der_ankunft , T1.abreisedatum FROM hunde AS T1 JOIN behandlungen AS T2 ON T1.hund_id = T2.hund_id",
        "question": "Finde das Ankunftsdatum und das Abreisedatum der Hunde, die eine Behandlung erhalten haben.",
        "question_toks": [
            "Finde",
            "das",
            "Ankunftsdatum",
            "und",
            "das",
            "Abreisedatum",
            "der",
            "Hunde",
            ",",
            "die",
            "eine",
            "Behandlung",
            "erhalten",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the last name of the owner owning the youngest dog.",
        "query": "SELECT T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T2.alter = ( SELECT max(alter) FROM hunde )",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T2.alter",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T2.alter = ( SELECT max(alter) FROM hunde )",
        "question": "Gib den Nachnamen des Besitzers an, der den jüngsten Hund besitzt.",
        "question_toks": [
            "Gib",
            "den",
            "Nachnamen",
            "des",
            "Besitzers",
            "an",
            ",",
            "der",
            "den",
            "jüngsten",
            "Hund",
            "besitzt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            37,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Who owns the youngest dog? Give me his or her last name.",
        "query": "SELECT T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T2.alter = ( SELECT max(alter) FROM hunde )",
        "query_toks": [
            "SELECT",
            "T1.nachname",
            "FROM",
            "besitzer",
            "AS",
            "T1",
            "JOIN",
            "hunde",
            "AS",
            "T2",
            "ON",
            "T1.besitzer_id",
            "=",
            "T2.besitzer_id",
            "WHERE",
            "T2.alter",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT T1.nachname FROM besitzer AS T1 JOIN hunde AS T2 ON T1.besitzer_id = T2.besitzer_id WHERE T2.alter = ( SELECT max(alter) FROM hunde )",
        "question": "Wem gehört der jüngste Hund? Gib mir seinen oder ihren Nachnamen.",
        "question_toks": [
            "Wem",
            "gehört",
            "der",
            "jüngste",
            "Hund",
            "?",
            "Gib",
            "mir",
            "seinen",
            "oder",
            "ihren",
            "Nachnamen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            37,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "query": "SELECT e_mail_adresse FROM berufe WHERE bundesland = 'Hawaii' OR bundesland = 'Wisconsin'",
        "query_toks": [
            "SELECT",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "'Hawaii",
            "'",
            "OR",
            "bundesland",
            "=",
            "'Wisconsin",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "value",
            "OR",
            "bundesland",
            "=",
            "value"
        ],
        "question": "Gib die E-Mail-Adressen der Fachkräfte an, die im Bundesstaat \"Hawaii\" oder im Bundesstaat \"Wisconsin\" leben.",
        "question_toks": [
            "Gib",
            "die",
            "E-Mail-Adressen",
            "der",
            "Fachkräfte",
            "an",
            ",",
            "die",
            "im",
            "Bundesstaat",
            "``",
            "Hawaii",
            "''",
            "oder",
            "im",
            "Bundesstaat",
            "``",
            "Wisconsin",
            "''",
            "leben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Hawaii\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Wisconsin\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "query": "SELECT e_mail_adresse FROM berufe WHERE bundesland = 'Hawaii' OR bundesland = 'Wisconsin'",
        "query_toks": [
            "SELECT",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "'Hawaii",
            "'",
            "OR",
            "bundesland",
            "=",
            "'Wisconsin",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "e_mail_adresse",
            "FROM",
            "berufe",
            "WHERE",
            "bundesland",
            "=",
            "value",
            "OR",
            "bundesland",
            "=",
            "value"
        ],
        "question": "Wie lauten die E-Mails der Fachkräfte, die entweder im Bundesstaat \"Hawaii\" oder im Bundesstaat \"Wisconsin\" leben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "E-Mails",
            "der",
            "Fachkräfte",
            ",",
            "die",
            "entweder",
            "im",
            "Bundesstaat",
            "``",
            "Hawaii",
            "''",
            "oder",
            "im",
            "Bundesstaat",
            "``",
            "Wisconsin",
            "''",
            "leben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Hawaii\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"Wisconsin\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the arriving date and the departing date of all the dogs?",
        "query": "SELECT datum_der_ankunft , abreisedatum FROM hunde",
        "query_toks": [
            "SELECT",
            "datum_der_ankunft",
            ",",
            "abreisedatum",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT datum_der_ankunft , abreisedatum FROM hunde",
        "question": "Welches sind die Ankunfts- und Abreisedaten aller Hunde?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "Ankunfts-",
            "und",
            "Abreisedaten",
            "aller",
            "Hunde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the arrival date and the departure date for all the dogs.",
        "query": "SELECT datum_der_ankunft , abreisedatum FROM hunde",
        "query_toks": [
            "SELECT",
            "datum_der_ankunft",
            ",",
            "abreisedatum",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT datum_der_ankunft , abreisedatum FROM hunde",
        "question": "Gib das Ankunftsdatum und das Abreisedatum für alle Hunde an.",
        "question_toks": [
            "Gib",
            "das",
            "Ankunftsdatum",
            "und",
            "das",
            "Abreisedatum",
            "für",
            "alle",
            "Hunde",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many dogs went through any treatments?",
        "query": "SELECT count(DISTINCT hund_id) FROM behandlungen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "hund_id",
            ")",
            "FROM",
            "behandlungen"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT hund_id) FROM behandlungen",
        "question": "Wie viele Hunde wurden behandelt?",
        "question_toks": [
            "Wie",
            "viele",
            "Hunde",
            "wurden",
            "behandelt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Count the number of dogs that went through a treatment.",
        "query": "SELECT count(DISTINCT hund_id) FROM behandlungen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "hund_id",
            ")",
            "FROM",
            "behandlungen"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT hund_id) FROM behandlungen",
        "question": "Zähle die Anzahl der Hunde, die eine Behandlung durchlaufen haben.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Hunde",
            ",",
            "die",
            "eine",
            "Behandlung",
            "durchlaufen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many professionals have performed any treatment to dogs?",
        "query": "SELECT count(DISTINCT berufs_id) FROM behandlungen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "berufs_id",
            ")",
            "FROM",
            "behandlungen"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT berufs_id) FROM behandlungen",
        "question": "Wie viele Fachleute haben eine Behandlung an Hunden durchgeführt?",
        "question_toks": [
            "Wie",
            "viele",
            "Fachleute",
            "haben",
            "eine",
            "Behandlung",
            "an",
            "Hunden",
            "durchgeführt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                46,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the number of professionals who have ever treated dogs.",
        "query": "SELECT count(DISTINCT berufs_id) FROM behandlungen",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "berufs_id",
            ")",
            "FROM",
            "behandlungen"
        ],
        "query_toks_no_value": "SELECT count(DISTINCT berufs_id) FROM behandlungen",
        "question": "Finde die Anzahl der Fachleute heraus, die jemals Hunde behandelt haben.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Fachleute",
            "heraus",
            ",",
            "die",
            "jemals",
            "Hunde",
            "behandelt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                46,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "query": "SELECT rollencode , straße , stadt , bundesland FROM berufe WHERE stadt LIKE '%West%'",
        "query_toks": [
            "SELECT",
            "rollencode",
            ",",
            "straße",
            ",",
            "stadt",
            ",",
            "bundesland",
            "FROM",
            "berufe",
            "WHERE",
            "stadt",
            "LIKE",
            "'",
            "%",
            "West",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "rollencode",
            ",",
            "straße",
            ",",
            "stadt",
            ",",
            "bundesland",
            "FROM",
            "berufe",
            "WHERE",
            "stadt",
            "LIKE",
            "value"
        ],
        "question": "Welche Fachkräfte leben in einer Stadt, die die Teilzeichenkette \"West\" enthält? Gib die Funktion, Straße, Stadt und das Bundesland an.",
        "question_toks": [
            "Welche",
            "Fachkräfte",
            "leben",
            "in",
            "einer",
            "Stadt",
            ",",
            "die",
            "die",
            "Teilzeichenkette",
            "``",
            "West",
            "''",
            "enthält",
            "?",
            "Gib",
            "die",
            "Funktion",
            ",",
            "Straße",
            ",",
            "Stadt",
            "und",
            "das",
            "Bundesland",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"%West%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "query": "SELECT rollencode , straße , stadt , bundesland FROM berufe WHERE stadt LIKE '%West%'",
        "query_toks": [
            "SELECT",
            "rollencode",
            ",",
            "straße",
            ",",
            "stadt",
            ",",
            "bundesland",
            "FROM",
            "berufe",
            "WHERE",
            "stadt",
            "LIKE",
            "'",
            "%",
            "West",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "rollencode",
            ",",
            "straße",
            ",",
            "stadt",
            ",",
            "bundesland",
            "FROM",
            "berufe",
            "WHERE",
            "stadt",
            "LIKE",
            "value"
        ],
        "question": "Finde die Rolle, Straße, Stadt und das Bundesland der Fachkräfte, die in einer Stadt leben, die die Teilzeichenkette \"West\" enthält.",
        "question_toks": [
            "Finde",
            "die",
            "Rolle",
            ",",
            "Straße",
            ",",
            "Stadt",
            "und",
            "das",
            "Bundesland",
            "der",
            "Fachkräfte",
            ",",
            "die",
            "in",
            "einer",
            "Stadt",
            "leben",
            ",",
            "die",
            "die",
            "Teilzeichenkette",
            "``",
            "West",
            "''",
            "enthält",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"%West%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "query": "SELECT vorname , nachname , e_mail_adresse FROM besitzer WHERE bundesland LIKE '%North%'",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            ",",
            "e_mail_adresse",
            "FROM",
            "besitzer",
            "WHERE",
            "bundesland",
            "LIKE",
            "'",
            "%",
            "North",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            ",",
            "e_mail_adresse",
            "FROM",
            "besitzer",
            "WHERE",
            "bundesland",
            "LIKE",
            "value"
        ],
        "question": "Welche Eigentümer leben in dem Staat, dessen Name die Teilzeichenkette \"North\" enthält? Gib seinen Vornamen, Nachnamen und seine E-Mail-Adresse an.",
        "question_toks": [
            "Welche",
            "Eigentümer",
            "leben",
            "in",
            "dem",
            "Staat",
            ",",
            "dessen",
            "Name",
            "die",
            "Teilzeichenkette",
            "``",
            "North",
            "''",
            "enthält",
            "?",
            "Gib",
            "seinen",
            "Vornamen",
            ",",
            "Nachnamen",
            "und",
            "seine",
            "E-Mail-Adresse",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%North%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "query": "SELECT vorname , nachname , e_mail_adresse FROM besitzer WHERE bundesland LIKE '%North%'",
        "query_toks": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            ",",
            "e_mail_adresse",
            "FROM",
            "besitzer",
            "WHERE",
            "bundesland",
            "LIKE",
            "'",
            "%",
            "North",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "SELECT",
            "vorname",
            ",",
            "nachname",
            ",",
            "e_mail_adresse",
            "FROM",
            "besitzer",
            "WHERE",
            "bundesland",
            "LIKE",
            "value"
        ],
        "question": "Gib den Vornamen, den Nachnamen und die E-Mail-Adresse der Eigentümer zurück, die in einem Staat leben, dessen Name die Teilzeichenkette \"North\" enthält.",
        "question_toks": [
            "Gib",
            "den",
            "Vornamen",
            ",",
            "den",
            "Nachnamen",
            "und",
            "die",
            "E-Mail-Adresse",
            "der",
            "Eigentümer",
            "zurück",
            ",",
            "die",
            "in",
            "einem",
            "Staat",
            "leben",
            ",",
            "dessen",
            "Name",
            "die",
            "Teilzeichenkette",
            "``",
            "North",
            "''",
            "enthält",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%North%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many dogs have an age below the average?",
        "query": "SELECT count(*) FROM hunde WHERE alter < ( SELECT avg(alter) FROM hunde )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "hunde",
            "WHERE",
            "alter",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM hunde WHERE alter < ( SELECT avg(alter) FROM hunde )",
        "question": "Wie viele Hunde haben ein Alter, das unter dem Durchschnitt liegt?",
        "question_toks": [
            "Wie",
            "viele",
            "Hunde",
            "haben",
            "ein",
            "Alter",
            ",",
            "das",
            "unter",
            "dem",
            "Durchschnitt",
            "liegt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            37,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Count the number of dogs of an age below the average.",
        "query": "SELECT count(*) FROM hunde WHERE alter < ( SELECT avg(alter) FROM hunde )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "hunde",
            "WHERE",
            "alter",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM hunde WHERE alter < ( SELECT avg(alter) FROM hunde )",
        "question": "Zähle die Anzahl der Hunde mit einem Alter unter dem Durchschnitt.",
        "question_toks": [
            "Zähle",
            "die",
            "Anzahl",
            "der",
            "Hunde",
            "mit",
            "einem",
            "Alter",
            "unter",
            "dem",
            "Durchschnitt",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            37,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How much does the most recent treatment cost?",
        "query": "SELECT kosten_der_behandlung FROM behandlungen ORDER BY datum_der_behandlung DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "kosten_der_behandlung",
            "FROM",
            "behandlungen",
            "ORDER",
            "BY",
            "datum_der_behandlung",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kosten_der_behandlung",
            "FROM",
            "behandlungen",
            "ORDER",
            "BY",
            "datum_der_behandlung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie viel hat die letzte Behandlung gekostet?",
        "question_toks": [
            "Wie",
            "viel",
            "hat",
            "die",
            "letzte",
            "Behandlung",
            "gekostet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Show me the cost of the most recently performed treatment.",
        "query": "SELECT kosten_der_behandlung FROM behandlungen ORDER BY datum_der_behandlung DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "kosten_der_behandlung",
            "FROM",
            "behandlungen",
            "ORDER",
            "BY",
            "datum_der_behandlung",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "kosten_der_behandlung",
            "FROM",
            "behandlungen",
            "ORDER",
            "BY",
            "datum_der_behandlung",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Zeige mir die Kosten für die zuletzt durchgeführte Behandlung.",
        "question_toks": [
            "Zeige",
            "mir",
            "die",
            "Kosten",
            "für",
            "die",
            "zuletzt",
            "durchgeführte",
            "Behandlung",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many dogs have not gone through any treatment?",
        "query": "SELECT count(*) FROM hunde WHERE hund_id NOT IN ( SELECT hund_id FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "hunde",
            "WHERE",
            "hund_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "hund_id",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM hunde WHERE hund_id NOT IN ( SELECT hund_id FROM behandlungen )",
        "question": "Wie viele Hunde haben keine Behandlung durchlaufen?",
        "question_toks": [
            "Wie",
            "viele",
            "Hunde",
            "haben",
            "keine",
            "Behandlung",
            "durchlaufen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Tell me the number of dogs that have not received any treatment .",
        "query": "select count(*) from hunde where hund_id not in ( select hund_id from behandlungen )",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "hunde",
            "where",
            "hund_id",
            "not",
            "in",
            "(",
            "select",
            "hund_id",
            "from",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "select count(*) from hunde where hund_id not in ( select hund_id from behandlungen )",
        "question": "Nenne mir die Anzahl der Hunde, die keine Behandlung erhalten haben.",
        "question_toks": [
            "Nenne",
            "mir",
            "die",
            "Anzahl",
            "der",
            "Hunde",
            ",",
            "die",
            "keine",
            "Behandlung",
            "erhalten",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many owners temporarily do not have any dogs?",
        "query": "SELECT count(*) FROM besitzer WHERE besitzer_id NOT IN ( SELECT besitzer_id FROM hunde )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "besitzer",
            "WHERE",
            "besitzer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "besitzer_id",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM besitzer WHERE besitzer_id NOT IN ( SELECT besitzer_id FROM hunde )",
        "question": "Wie viele Besitzer haben vorübergehend keine Hunde?",
        "question_toks": [
            "Wie",
            "viele",
            "Besitzer",
            "haben",
            "vorübergehend",
            "keine",
            "Hunde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            32,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the number of owners who do not own any dogs at this moment.",
        "query": "SELECT count(*) FROM besitzer WHERE besitzer_id NOT IN ( SELECT besitzer_id FROM hunde )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "besitzer",
            "WHERE",
            "besitzer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "besitzer_id",
            "FROM",
            "hunde",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM besitzer WHERE besitzer_id NOT IN ( SELECT besitzer_id FROM hunde )",
        "question": "Finde die Anzahl der Besitzer, die im Moment keinen Hund besitzen.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Besitzer",
            ",",
            "die",
            "im",
            "Moment",
            "keinen",
            "Hund",
            "besitzen",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            32,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How many professionals did not operate any treatment on dogs?",
        "query": "SELECT count(*) FROM berufe WHERE berufs_id NOT IN ( SELECT berufs_id FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "berufe",
            "WHERE",
            "berufs_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "berufs_id",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM berufe WHERE berufs_id NOT IN ( SELECT berufs_id FROM behandlungen )",
        "question": "Wie viele Fachleute haben keine Behandlung an Hunden durchgeführt?",
        "question_toks": [
            "Wie",
            "viele",
            "Fachleute",
            "haben",
            "keine",
            "Behandlung",
            "an",
            "Hunden",
            "durchgeführt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the number of professionals who have not treated any dogs.",
        "query": "SELECT count(*) FROM berufe WHERE berufs_id NOT IN ( SELECT berufs_id FROM behandlungen )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "berufe",
            "WHERE",
            "berufs_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "berufs_id",
            "FROM",
            "behandlungen",
            ")"
        ],
        "query_toks_no_value": "SELECT count(*) FROM berufe WHERE berufs_id NOT IN ( SELECT berufs_id FROM behandlungen )",
        "question": "Finde die Anzahl der Fachkräfte heraus, die keine Hunde behandelt haben.",
        "question_toks": [
            "Finde",
            "die",
            "Anzahl",
            "der",
            "Fachkräfte",
            "heraus",
            ",",
            "die",
            "keine",
            "Hunde",
            "behandelt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "query": "SELECT name , alter , gewicht FROM hunde WHERE ausgesetzt_ja_oder_nein = 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "alter",
            ",",
            "gewicht",
            "FROM",
            "hunde",
            "WHERE",
            "ausgesetzt_ja_oder_nein",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "alter",
            ",",
            "gewicht",
            "FROM",
            "hunde",
            "WHERE",
            "ausgesetzt_ja_oder_nein",
            "=",
            "value"
        ],
        "question": "Gib den Namen, das Alter und das Gewicht der Hunde an, die ausgesetzt wurden? 1 steht für ja und 0 steht für nein.",
        "question_toks": [
            "Gib",
            "den",
            "Namen",
            ",",
            "das",
            "Alter",
            "und",
            "das",
            "Gewicht",
            "der",
            "Hunde",
            "an",
            ",",
            "die",
            "ausgesetzt",
            "wurden",
            "?",
            "1",
            "steht",
            "für",
            "ja",
            "und",
            "0",
            "steht",
            "für",
            "nein",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "query": "SELECT name , alter , gewicht FROM hunde WHERE ausgesetzt_ja_oder_nein = 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "alter",
            ",",
            "gewicht",
            "FROM",
            "hunde",
            "WHERE",
            "ausgesetzt_ja_oder_nein",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            ",",
            "alter",
            ",",
            "gewicht",
            "FROM",
            "hunde",
            "WHERE",
            "ausgesetzt_ja_oder_nein",
            "=",
            "value"
        ],
        "question": "Wie lauten der Name, das Alter und das Gewicht der Hunde, die ausgesetzt wurden? Beachte, dass in den Tabellen 1 für ja und 0 für nein steht.",
        "question_toks": [
            "Wie",
            "lauten",
            "der",
            "Name",
            ",",
            "das",
            "Alter",
            "und",
            "das",
            "Gewicht",
            "der",
            "Hunde",
            ",",
            "die",
            "ausgesetzt",
            "wurden",
            "?",
            "Beachte",
            ",",
            "dass",
            "in",
            "den",
            "Tabellen",
            "1",
            "für",
            "ja",
            "und",
            "0",
            "für",
            "nein",
            "steht",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the average age of all the dogs?",
        "query": "SELECT avg(alter) FROM hunde",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT avg(alter) FROM hunde",
        "question": "Wie hoch ist das Durchschnittsalter aller Hunde?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "Durchschnittsalter",
            "aller",
            "Hunde",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Compute the average age of all the dogs.",
        "query": "SELECT avg(alter) FROM hunde",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT avg(alter) FROM hunde",
        "question": "Berechne das Durchschnittsalter aller Hunde.",
        "question_toks": [
            "Berechne",
            "das",
            "Durchschnittsalter",
            "aller",
            "Hunde",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the age of the oldest dog?",
        "query": "SELECT max(alter) FROM hunde",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT max(alter) FROM hunde",
        "question": "Wie alt ist der älteste Hund?",
        "question_toks": [
            "Wie",
            "alt",
            "ist",
            "der",
            "älteste",
            "Hund",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Tell me the age of the oldest dog.",
        "query": "SELECT max(alter) FROM hunde",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "alter",
            ")",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT max(alter) FROM hunde",
        "question": "Sag mir, wie alt der älteste Hund ist.",
        "question_toks": [
            "Sag",
            "mir",
            ",",
            "wie",
            "alt",
            "der",
            "älteste",
            "Hund",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How much does each charge type costs? List both charge type and amount.",
        "query": "SELECT gebührenart , gebührenbetrag FROM gebühren",
        "query_toks": [
            "SELECT",
            "gebührenart",
            ",",
            "gebührenbetrag",
            "FROM",
            "gebühren"
        ],
        "query_toks_no_value": "SELECT gebührenart , gebührenbetrag FROM gebühren",
        "question": "Wie viel kostet jede Gebührenart? Gib sowohl die Kostenart als auch den Betrag an.",
        "question_toks": [
            "Wie",
            "viel",
            "kostet",
            "jede",
            "Gebührenart",
            "?",
            "Gib",
            "sowohl",
            "die",
            "Kostenart",
            "als",
            "auch",
            "den",
            "Betrag",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List each charge type and its amount.",
        "query": "SELECT gebührenart , gebührenbetrag FROM gebühren",
        "query_toks": [
            "SELECT",
            "gebührenart",
            ",",
            "gebührenbetrag",
            "FROM",
            "gebühren"
        ],
        "query_toks_no_value": "SELECT gebührenart , gebührenbetrag FROM gebühren",
        "question": "Gib jede Gebührenart und ihren Betrag an.",
        "question_toks": [
            "Gib",
            "jede",
            "Gebührenart",
            "und",
            "ihren",
            "Betrag",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "How much does the most expensive charge type costs?",
        "query": "SELECT max(gebührenbetrag) FROM gebühren",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "gebührenbetrag",
            ")",
            "FROM",
            "gebühren"
        ],
        "query_toks_no_value": "SELECT max(gebührenbetrag) FROM gebühren",
        "question": "Wie viel kostet die teuerste Gebührenart?",
        "question_toks": [
            "Wie",
            "viel",
            "kostet",
            "die",
            "teuerste",
            "Gebührenart",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What is the charge amount of the most expensive charge type?",
        "query": "SELECT max(gebührenbetrag) FROM gebühren",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "gebührenbetrag",
            ")",
            "FROM",
            "gebühren"
        ],
        "query_toks_no_value": "SELECT max(gebührenbetrag) FROM gebühren",
        "question": "Wie hoch ist der Gebührenbetrag der teuersten Gebührenart?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "der",
            "Gebührenbetrag",
            "der",
            "teuersten",
            "Gebührenart",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the email, cell phone and home phone of all the professionals.",
        "query": "SELECT e_mail_adresse , handynummer , telefon_zu_hause FROM berufe",
        "query_toks": [
            "SELECT",
            "e_mail_adresse",
            ",",
            "handynummer",
            ",",
            "telefon_zu_hause",
            "FROM",
            "berufe"
        ],
        "query_toks_no_value": "SELECT e_mail_adresse , handynummer , telefon_zu_hause FROM berufe",
        "question": "Gib die E-Mail-Adresse, die Handynummer und die Privatnummer aller Fachkräfte an.",
        "question_toks": [
            "Gib",
            "die",
            "E-Mail-Adresse",
            ",",
            "die",
            "Handynummer",
            "und",
            "die",
            "Privatnummer",
            "aller",
            "Fachkräfte",
            "an",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are the email, cell phone and home phone of each professional?",
        "query": "SELECT e_mail_adresse , handynummer , telefon_zu_hause FROM berufe",
        "query_toks": [
            "SELECT",
            "e_mail_adresse",
            ",",
            "handynummer",
            ",",
            "telefon_zu_hause",
            "FROM",
            "berufe"
        ],
        "query_toks_no_value": "SELECT e_mail_adresse , handynummer , telefon_zu_hause FROM berufe",
        "question": "Wie lauten die E-Mail-Adressen, Handynummern und Festnetznummern der einzelnen Fachkräfte?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "E-Mail-Adressen",
            ",",
            "Handynummern",
            "und",
            "Festnetznummern",
            "der",
            "einzelnen",
            "Fachkräfte",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are all the possible breed type and size type combinations?",
        "query": "SELECT DISTINCT rasse_code , größencode FROM hunde",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "rasse_code",
            ",",
            "größencode",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT DISTINCT rasse_code , größencode FROM hunde",
        "question": "Welche Kombinationen von Rasse und Größe sind möglich?",
        "question_toks": [
            "Welche",
            "Kombinationen",
            "von",
            "Rasse",
            "und",
            "Größe",
            "sind",
            "möglich",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "Find the distinct breed type and size type combinations for dogs.",
        "query": "SELECT DISTINCT rasse_code , größencode FROM hunde",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "rasse_code",
            ",",
            "größencode",
            "FROM",
            "hunde"
        ],
        "query_toks_no_value": "SELECT DISTINCT rasse_code , größencode FROM hunde",
        "question": "Finde die verschiedenen Kombinationen von Rassetyp und Größentyp für Hunde.",
        "question_toks": [
            "Finde",
            "die",
            "verschiedenen",
            "Kombinationen",
            "von",
            "Rassetyp",
            "und",
            "Größentyp",
            "für",
            "Hunde",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "List the first name of all the professionals along with the description of the treatment they have done.",
        "query": "SELECT DISTINCT T1.vorname , T3.beschreibung_der_behandlungsart FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id JOIN behandlungsarten AS T3 ON T2.behandlungsart_code = T3.behandlungsart_code",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T3.beschreibung_der_behandlungsart",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "JOIN",
            "behandlungsarten",
            "AS",
            "T3",
            "ON",
            "T2.behandlungsart_code",
            "=",
            "T3.behandlungsart_code"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T3.beschreibung_der_behandlungsart FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id JOIN behandlungsarten AS T3 ON T2.behandlungsart_code = T3.behandlungsart_code",
        "question": "Gib die Vornamen aller Fachkräfte an und beschreibe die Behandlung, die sie durchgeführt haben.",
        "question_toks": [
            "Gib",
            "die",
            "Vornamen",
            "aller",
            "Fachkräfte",
            "an",
            "und",
            "beschreibe",
            "die",
            "Behandlung",
            ",",
            "die",
            "sie",
            "durchgeführt",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "match": "What are each professional's first name and description of the treatment they have performed?",
        "query": "SELECT DISTINCT T1.vorname , T3.beschreibung_der_behandlungsart FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id JOIN behandlungsarten AS T3 ON T2.behandlungsart_code = T3.behandlungsart_code",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.vorname",
            ",",
            "T3.beschreibung_der_behandlungsart",
            "FROM",
            "berufe",
            "AS",
            "T1",
            "JOIN",
            "behandlungen",
            "AS",
            "T2",
            "ON",
            "T1.berufs_id",
            "=",
            "T2.berufs_id",
            "JOIN",
            "behandlungsarten",
            "AS",
            "T3",
            "ON",
            "T2.behandlungsart_code",
            "=",
            "T3.behandlungsart_code"
        ],
        "query_toks_no_value": "SELECT DISTINCT T1.vorname , T3.beschreibung_der_behandlungsart FROM berufe AS T1 JOIN behandlungen AS T2 ON T1.berufs_id = T2.berufs_id JOIN behandlungsarten AS T3 ON T2.behandlungsart_code = T3.behandlungsart_code",
        "question": "Wie lauten die Vornamen der einzelnen Fachkräfte und die Beschreibung der Behandlung, die sie durchgeführt haben?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Vornamen",
            "der",
            "einzelnen",
            "Fachkräfte",
            "und",
            "die",
            "Beschreibung",
            "der",
            "Behandlung",
            ",",
            "die",
            "sie",
            "durchgeführt",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "How many singers are there?",
        "query": "SELECT count(*) FROM sänger",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT count(*) FROM sänger",
        "question": "Wie viele Sängerinnen und Sänger gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Sängerinnen",
            "und",
            "Sänger",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What is the count of singers?",
        "query": "SELECT count(*) FROM sänger",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT count(*) FROM sänger",
        "question": "Wie viele Sängerinnen und Sänger gibt es?",
        "question_toks": [
            "Wie",
            "viele",
            "Sängerinnen",
            "und",
            "Sänger",
            "gibt",
            "es",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "List the name of singers in ascending order of net worth.",
        "query": "SELECT name FROM sänger ORDER BY nettovermögen_millionen ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM sänger ORDER BY nettovermögen_millionen ASC",
        "question": "Nenne die Namen der Sängerinnen und Sänger in aufsteigender Reihenfolge ihres Nettovermögens.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "in",
            "aufsteigender",
            "Reihenfolge",
            "ihres",
            "Nettovermögens",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the names of singers ordered by ascending net worth?",
        "query": "SELECT name FROM sänger ORDER BY nettovermögen_millionen ASC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "ASC"
        ],
        "query_toks_no_value": "SELECT name FROM sänger ORDER BY nettovermögen_millionen ASC",
        "question": "Wie lauten die Namen der Sängerinnen und Sänger, geordnet nach aufsteigendem Nettovermögen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "geordnet",
            "nach",
            "aufsteigendem",
            "Nettovermögen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the birth year and citizenship of singers?",
        "query": "SELECT geburtsjahr , staatsangehörigkeit FROM sänger",
        "query_toks": [
            "SELECT",
            "geburtsjahr",
            ",",
            "staatsangehörigkeit",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT geburtsjahr , staatsangehörigkeit FROM sänger",
        "question": "Welches sind das Geburtsjahr und die Staatsbürgerschaft der Sängerinnen und Sänger?",
        "question_toks": [
            "Welches",
            "sind",
            "das",
            "Geburtsjahr",
            "und",
            "die",
            "Staatsbürgerschaft",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the birth years and citizenships of the singers?",
        "query": "SELECT geburtsjahr , staatsangehörigkeit FROM sänger",
        "query_toks": [
            "SELECT",
            "geburtsjahr",
            ",",
            "staatsangehörigkeit",
            "FROM",
            "sänger"
        ],
        "query_toks_no_value": "SELECT geburtsjahr , staatsangehörigkeit FROM sänger",
        "question": "Welches sind die Geburtsjahre und Staatsbürgerschaften der Sängerinnen und Sänger?",
        "question_toks": [
            "Welches",
            "sind",
            "die",
            "Geburtsjahre",
            "und",
            "Staatsbürgerschaften",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "List the name of singers whose citizenship is not \"France\".",
        "query": "SELECT name FROM sänger WHERE staatsangehörigkeit != \"France\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "staatsangehörigkeit",
            "!",
            "=",
            "``",
            "France",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "staatsangehörigkeit",
            "!",
            "=",
            "value"
        ],
        "question": "Nenne die Namen der Sängerinnen und Sänger, deren Staatsangehörigkeit nicht \"\"France\"\" ist.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "deren",
            "Staatsangehörigkeit",
            "nicht",
            "``",
            "''",
            "France",
            "''",
            "''",
            "ist",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the names of the singers who are not French citizens?",
        "query": "SELECT name FROM sänger WHERE staatsangehörigkeit != \"France\"",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "staatsangehörigkeit",
            "!",
            "=",
            "``",
            "France",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "staatsangehörigkeit",
            "!",
            "=",
            "value"
        ],
        "question": "Wie lauten die Namen der Sängerinnen und Sänger, die keine französischen Staatsbürger sind?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "keine",
            "französischen",
            "Staatsbürger",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show the name of singers whose birth year is either 1948 or 1949?",
        "query": "SELECT name FROM sänger WHERE geburtsjahr = 1948 OR geburtsjahr = 1949",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "=",
            "1948",
            "OR",
            "geburtsjahr",
            "=",
            "1949"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "=",
            "value",
            "OR",
            "geburtsjahr",
            "=",
            "value"
        ],
        "question": "Zeige die Namen der Sängerinnen und Sänger, deren Geburtsjahr entweder 1948 oder 1949 ist?",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "deren",
            "Geburtsjahr",
            "entweder",
            "1948",
            "oder",
            "1949",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1948.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1949.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the names of the singers whose birth years are either 1948 or 1949?",
        "query": "SELECT name FROM sänger WHERE geburtsjahr = 1948 OR geburtsjahr = 1949",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "=",
            "1948",
            "OR",
            "geburtsjahr",
            "=",
            "1949"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "=",
            "value",
            "OR",
            "geburtsjahr",
            "=",
            "value"
        ],
        "question": "Wie heißen die Sängerinnen und Sänger, deren Geburtsjahr entweder 1948 oder 1949 ist?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "deren",
            "Geburtsjahr",
            "entweder",
            "1948",
            "oder",
            "1949",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1948.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1949.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What is the name of the singer with the largest net worth?",
        "query": "SELECT name FROM sänger ORDER BY nettovermögen_millionen DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Sänger mit dem größten Nettovermögen?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Sänger",
            "mit",
            "dem",
            "größten",
            "Nettovermögen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What is the name of the singer who is worth the most?",
        "query": "SELECT name FROM sänger ORDER BY nettovermögen_millionen DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "ORDER",
            "BY",
            "nettovermögen_millionen",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Wie heißt der Sänger, der am meisten wert ist?",
        "question_toks": [
            "Wie",
            "heißt",
            "der",
            "Sänger",
            ",",
            "der",
            "am",
            "meisten",
            "wert",
            "ist",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show different citizenship of singers and the number of singers of each citizenship.",
        "query": "SELECT staatsangehörigkeit , COUNT(*) FROM sänger GROUP BY staatsangehörigkeit",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit"
        ],
        "query_toks_no_value": "SELECT staatsangehörigkeit , COUNT(*) FROM sänger GROUP BY staatsangehörigkeit",
        "question": "Zeige die verschiedenen Staatsbürgerschaften der Sänger/innen und die Anzahl der Sänger/innen jeder Staatsbürgerschaft.",
        "question_toks": [
            "Zeige",
            "die",
            "verschiedenen",
            "Staatsbürgerschaften",
            "der",
            "Sänger/innen",
            "und",
            "die",
            "Anzahl",
            "der",
            "Sänger/innen",
            "jeder",
            "Staatsbürgerschaft",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "For each citizenship, how many singers are from that country?",
        "query": "SELECT staatsangehörigkeit , COUNT(*) FROM sänger GROUP BY staatsangehörigkeit",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit"
        ],
        "query_toks_no_value": "SELECT staatsangehörigkeit , COUNT(*) FROM sänger GROUP BY staatsangehörigkeit",
        "question": "Wie viele Sängerinnen und Sänger pro Staatsbürgerschaft kommen aus diesem Land?",
        "question_toks": [
            "Wie",
            "viele",
            "Sängerinnen",
            "und",
            "Sänger",
            "pro",
            "Staatsbürgerschaft",
            "kommen",
            "aus",
            "diesem",
            "Land",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Please show the most common citizenship of singers.",
        "query": "SELECT staatsangehörigkeit FROM sänger GROUP BY staatsangehörigkeit ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "value"
        ],
        "question": "Bitte zeige die häufigste Staatsbürgerschaft von Sängern.",
        "question_toks": [
            "Bitte",
            "zeige",
            "die",
            "häufigste",
            "Staatsbürgerschaft",
            "von",
            "Sängern",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What is the most common singer citizenship ?",
        "query": "select staatsangehörigkeit from sänger group by staatsangehörigkeit order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "staatsangehörigkeit",
            "from",
            "sänger",
            "group",
            "by",
            "staatsangehörigkeit",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "staatsangehörigkeit",
            "from",
            "sänger",
            "group",
            "by",
            "staatsangehörigkeit",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Was ist die häufigste Staatsbürgerschaft von Sängern?",
        "question_toks": [
            "Was",
            "ist",
            "die",
            "häufigste",
            "Staatsbürgerschaft",
            "von",
            "Sängern",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "query": "SELECT staatsangehörigkeit , max(nettovermögen_millionen) FROM sänger GROUP BY staatsangehörigkeit",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            ",",
            "max",
            "(",
            "nettovermögen_millionen",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit"
        ],
        "query_toks_no_value": "SELECT staatsangehörigkeit , max(nettovermögen_millionen) FROM sänger GROUP BY staatsangehörigkeit",
        "question": "Zeige verschiedene Staatsbürgerschaften und das maximale Nettovermögen von Sängern mit jeder Staatsbürgerschaft.",
        "question_toks": [
            "Zeige",
            "verschiedene",
            "Staatsbürgerschaften",
            "und",
            "das",
            "maximale",
            "Nettovermögen",
            "von",
            "Sängern",
            "mit",
            "jeder",
            "Staatsbürgerschaft",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "For each citizenship, what is the maximum net worth?",
        "query": "SELECT staatsangehörigkeit , max(nettovermögen_millionen) FROM sänger GROUP BY staatsangehörigkeit",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            ",",
            "max",
            "(",
            "nettovermögen_millionen",
            ")",
            "FROM",
            "sänger",
            "GROUP",
            "BY",
            "staatsangehörigkeit"
        ],
        "query_toks_no_value": "SELECT staatsangehörigkeit , max(nettovermögen_millionen) FROM sänger GROUP BY staatsangehörigkeit",
        "question": "Wie hoch ist das maximale Nettovermögen für jede Staatsbürgerschaft?",
        "question_toks": [
            "Wie",
            "hoch",
            "ist",
            "das",
            "maximale",
            "Nettovermögen",
            "für",
            "jede",
            "Staatsbürgerschaft",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show titles of songs and names of singers.",
        "query": "SELECT T2.titel , T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id",
        "query_toks": [
            "SELECT",
            "T2.titel",
            ",",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id"
        ],
        "query_toks_no_value": "SELECT T2.titel , T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id",
        "question": "Zeige die Titel der Lieder und die Namen der Sängerinnen und Sänger.",
        "question_toks": [
            "Zeige",
            "die",
            "Titel",
            "der",
            "Lieder",
            "und",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the song titles and singer names?",
        "query": "SELECT T2.titel , T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id",
        "query_toks": [
            "SELECT",
            "T2.titel",
            ",",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id"
        ],
        "query_toks_no_value": "SELECT T2.titel , T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id",
        "question": "Wie lauten die Songtitel und Sängernamen?",
        "question_toks": [
            "Wie",
            "lauten",
            "die",
            "Songtitel",
            "und",
            "Sängernamen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show distinct names of singers that have songs with sales more than 300000.",
        "query": "SELECT DISTINCT T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id WHERE T2.verkauf > 300000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "WHERE",
            "T2.verkauf",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "WHERE",
            "T2.verkauf",
            ">",
            "value"
        ],
        "question": "Zeige eindeutige Namen von Sängerinnen und Sängern, die Songs mit mehr als 300000 Verkäufen haben.",
        "question_toks": [
            "Zeige",
            "eindeutige",
            "Namen",
            "von",
            "Sängerinnen",
            "und",
            "Sängern",
            ",",
            "die",
            "Songs",
            "mit",
            "mehr",
            "als",
            "300000",
            "Verkäufen",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "what are the different names of the singers that have sales more than 300000?",
        "query": "SELECT DISTINCT T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id WHERE T2.verkauf > 300000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "WHERE",
            "T2.verkauf",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "SELECT",
            "DISTINCT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "WHERE",
            "T2.verkauf",
            ">",
            "value"
        ],
        "question": "Wie heißen die Sängerinnen und Sänger, die mehr als 300000 Umsatz machen?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "mehr",
            "als",
            "300000",
            "Umsatz",
            "machen",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show the names of singers that have more than one song.",
        "query": "SELECT T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Zeige die Namen von Sängern, die mehr als einen Song haben.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "von",
            "Sängern",
            ",",
            "die",
            "mehr",
            "als",
            "einen",
            "Song",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the names of the singers that have more than one songs?",
        "query": "SELECT T1.name FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name HAVING COUNT(*) > 1",
        "query_toks": [
            "SELECT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T1.name",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Wie heißen die Sängerinnen und Sänger, die mehr als einen Song haben?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "mehr",
            "als",
            "einen",
            "Song",
            "haben",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show the names of singers and the total sales of their songs.",
        "query": "SELECT T1.name , sum(T2.verkauf) FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "sum",
            "(",
            "T2.verkauf",
            ")",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name"
        ],
        "query_toks_no_value": "SELECT T1.name , sum(T2.verkauf) FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name",
        "question": "Zeige die Namen der Sängerinnen und Sänger und den Gesamtumsatz ihrer Lieder.",
        "question_toks": [
            "Zeige",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            "und",
            "den",
            "Gesamtumsatz",
            "ihrer",
            "Lieder",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "For each singer name, what is the total sales for their songs?",
        "query": "SELECT T1.name , sum(T2.verkauf) FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "sum",
            "(",
            "T2.verkauf",
            ")",
            "FROM",
            "sänger",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.sänger_id",
            "=",
            "T2.sänger_id",
            "GROUP",
            "BY",
            "T1.name"
        ],
        "query_toks_no_value": "SELECT T1.name , sum(T2.verkauf) FROM sänger AS T1 JOIN song AS T2 ON T1.sänger_id = T2.sänger_id GROUP BY T1.name",
        "question": "Wie hoch sind die Gesamtverkäufe für die einzelnen Sänger?",
        "question_toks": [
            "Wie",
            "hoch",
            "sind",
            "die",
            "Gesamtverkäufe",
            "für",
            "die",
            "einzelnen",
            "Sänger",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "List the name of singers that do not have any song.",
        "query": "SELECT name FROM sänger WHERE sänger_id NOT IN (SELECT sänger_id FROM song)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "sänger_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "sänger_id",
            "FROM",
            "song",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM sänger WHERE sänger_id NOT IN (SELECT sänger_id FROM song)",
        "question": "Nenne die Namen der Sängerinnen und Sänger, die keinen Song haben.",
        "question_toks": [
            "Nenne",
            "die",
            "Namen",
            "der",
            "Sängerinnen",
            "und",
            "Sänger",
            ",",
            "die",
            "keinen",
            "Song",
            "haben",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What is the sname of every sing that does not have any song?",
        "query": "SELECT name FROM sänger WHERE sänger_id NOT IN (SELECT sänger_id FROM song)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sänger",
            "WHERE",
            "sänger_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "sänger_id",
            "FROM",
            "song",
            ")"
        ],
        "query_toks_no_value": "SELECT name FROM sänger WHERE sänger_id NOT IN (SELECT sänger_id FROM song)",
        "question": "Wie heißt jedes Lied, das keinen Song hat?",
        "question_toks": [
            "Wie",
            "heißt",
            "jedes",
            "Lied",
            ",",
            "das",
            "keinen",
            "Song",
            "hat",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "query": "SELECT staatsangehörigkeit FROM sänger WHERE geburtsjahr < 1945 INTERSECT SELECT staatsangehörigkeit FROM sänger WHERE geburtsjahr > 1955",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "<",
            "1945",
            "INTERSECT",
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            ">",
            "1955"
        ],
        "query_toks_no_value": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            ">",
            "value"
        ],
        "question": "Zeige die gemeinsame Staatsbürgerschaft von Sängerinnen und Sängern mit Geburtsjahr vor 1945 und nach 1955.",
        "question_toks": [
            "Zeige",
            "die",
            "gemeinsame",
            "Staatsbürgerschaft",
            "von",
            "Sängerinnen",
            "und",
            "Sängern",
            "mit",
            "Geburtsjahr",
            "vor",
            "1945",
            "und",
            "nach",
            "1955",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1945.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        1955.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "match": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "query": "SELECT staatsangehörigkeit FROM sänger WHERE geburtsjahr < 1945 INTERSECT SELECT staatsangehörigkeit FROM sänger WHERE geburtsjahr > 1955",
        "query_toks": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "<",
            "1945",
            "INTERSECT",
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            ">",
            "1955"
        ],
        "query_toks_no_value": [
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            "<",
            "value",
            "INTERSECT",
            "SELECT",
            "staatsangehörigkeit",
            "FROM",
            "sänger",
            "WHERE",
            "geburtsjahr",
            ">",
            "value"
        ],
        "question": "Welche Staatsbürgerschaften haben Sänger/innen mit einem Geburtsjahr vor 1945 und nach 1955?",
        "question_toks": [
            "Welche",
            "Staatsbürgerschaften",
            "haben",
            "Sänger/innen",
            "mit",
            "einem",
            "Geburtsjahr",
            "vor",
            "1945",
            "und",
            "nach",
            "1955",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1945.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        1955.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "match": "How many available features are there in total?",
        "query": "SELECT count(*) FROM andere_verfügbare_eigenschaften",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "andere_verfügbare_eigenschaften"
        ],
        "query_toks_no_value": "SELECT count(*) FROM andere_verfügbare_eigenschaften",
        "question": "Wie viele Funktionen gibt es insgesamt?",
        "question_toks": [
            "Wie",
            "viele",
            "Funktionen",
            "gibt",
            "es",
            "insgesamt",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "match": "What is the feature type name of feature AirCon?",
        "query": "SELECT T2.merkmalstyp_name FROM andere_verfügbare_eigenschaften AS T1 JOIN referenz_merkmalstypen AS T2 ON T1.merkmalstyp_code = T2.merkmalstyp_code WHERE T1.merkmalsname = \"AirCon\"",
        "query_toks": [
            "SELECT",
            "T2.merkmalstyp_name",
            "FROM",
            "andere_verfügbare_eigenschaften",
            "AS",
            "T1",
            "JOIN",
            "referenz_merkmalstypen",
            "AS",
            "T2",
            "ON",
            "T1.merkmalstyp_code",
            "=",
            "T2.merkmalstyp_code",
            "WHERE",
            "T1.merkmalsname",
            "=",
            "``",
            "AirCon",
            "''"
        ],
        "query_toks_no_value": [
            "SELECT",
            "T2.merkmalstyp_name",
            "FROM",
            "andere_verfügbare_eigenschaften",
            "AS",
            "T1",
            "JOIN",
            "referenz_merkmalstypen",
            "AS",
            "T2",
            "ON",
            "T1.merkmalstyp_code",
            "=",
            "T2.merkmalstyp_code",
            "WHERE",
            "T1.merkmalsname",
            "=",
            "value"
        ],
        "question": "Wie lautet der Name des Merkmalstyps des Merkmals \"AirCon\"?",
        "question_toks": [
            "Wie",
            "lautet",
            "der",
            "Name",
            "des",
            "Merkmalstyps",
            "des",
            "Merkmals",
            "``",
            "AirCon",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"AirCon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "match": "Show the property type descriptions of properties belonging to that code.",
        "query": "SELECT T2.eigenschaftsart_beschreibung FROM eigenschaften AS T1 JOIN referenz_eigenschaftstypen AS T2 ON T1.eigenschaftsart_code = T2.eigenschaftsart_code GROUP BY T1.eigenschaftsart_code",
        "query_toks": [
            "SELECT",
            "T2.eigenschaftsart_beschreibung",
            "FROM",
            "eigenschaften",
            "AS",
            "T1",
            "JOIN",
            "referenz_eigenschaftstypen",
            "AS",
            "T2",
            "ON",
            "T1.eigenschaftsart_code",
            "=",
            "T2.eigenschaftsart_code",
            "GROUP",
            "BY",
            "T1.eigenschaftsart_code"
        ],
        "query_toks_no_value": "SELECT T2.eigenschaftsart_beschreibung FROM eigenschaften AS T1 JOIN referenz_eigenschaftstypen AS T2 ON T1.eigenschaftsart_code = T2.eigenschaftsart_code GROUP BY T1.eigenschaftsart_code",
        "question": "Zeigt die Beschreibungen der Eigenschaftstypen von Eigenschaften an, die zu diesem Code gehören.",
        "question_toks": [
            "Zeigt",
            "die",
            "Beschreibungen",
            "der",
            "Eigenschaftstypen",
            "von",
            "Eigenschaften",
            "an",
            ",",
            "die",
            "zu",
            "diesem",
            "Code",
            "gehören",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "match": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "query": "SELECT immobilienname FROM eigenschaften WHERE eigenschaftsart_code = \"House\" UNION SELECT immobilienname FROM eigenschaften WHERE eigenschaftsart_code = \"Apartment\" AND anzahl_der_zimmer > 1",
        "query_toks": [
            "SELECT",
            "immobilienname",
            "FROM",
            "eigenschaften",
            "WHERE",
            "eigenschaftsart_code",
            "=",
            "``",
            "House",
            "''",
            "UNION",
            "SELECT",
            "immobilienname",
            "FROM",
            "eigenschaften",
            "WHERE",
            "eigenschaftsart_code",
            "=",
            "``",
            "Apartment",
            "''",
            "AND",
            "anzahl_der_zimmer",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "SELECT",
            "immobilienname",
            "FROM",
            "eigenschaften",
            "WHERE",
            "eigenschaftsart_code",
            "=",
            "value",
            "UNION",
            "SELECT",
            "immobilienname",
            "FROM",
            "eigenschaften",
            "WHERE",
            "eigenschaftsart_code",
            "=",
            "value",
            "AND",
            "anzahl_der_zimmer",
            ">",
            "value"
        ],
        "question": "Wie heißen die Immobilien, die entweder Häuser oder Wohnungen mit mehr als einem Zimmer sind?",
        "question_toks": [
            "Wie",
            "heißen",
            "die",
            "Immobilien",
            ",",
            "die",
            "entweder",
            "Häuser",
            "oder",
            "Wohnungen",
            "mit",
            "mehr",
            "als",
            "einem",
            "Zimmer",
            "sind",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"House\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    13,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"Apartment\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        1.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    }
]